// Code generated by goyacc -fo sql.go sql.y. DO NOT EDIT.

//line sql.y:17
package sqlparser

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line sql.y:17

func setParseTree(yylex yyLexer, stmt Statement) {
	yylex.(*Tokenizer).ParseTree = stmt
}

func setAllowComments(yylex yyLexer, allow bool) {
	yylex.(*Tokenizer).AllowComments = allow
}

func setDDL(yylex yyLexer, node Statement) {
	yylex.(*Tokenizer).partialDDL = node
}

// skipToEnd forces the lexer to end prematurely. Not all SQL statements
// are supported by the Parser, thus calling skipToEnd will make the lexer
// return EOF early.
func skipToEnd(yylex yyLexer) {
	yylex.(*Tokenizer).SkipToEnd = true
}

func bindVariable(yylex yyLexer, bvar string) {
	yylex.(*Tokenizer).BindVars[bvar] = struct{}{}
}

const MEMBER = 57346
const FUNCTION_CALL_NON_KEYWORD = 57347
const STRING_TYPE_PREFIX_NON_KEYWORD = 57348
const LEX_ERROR = 57349
const UNION = 57350
const SELECT = 57351
const STREAM = 57352
const VSTREAM = 57353
const INSERT = 57354
const UPDATE = 57355
const DELETE = 57356
const FROM = 57357
const WHERE = 57358
const GROUP = 57359
const HAVING = 57360
const ORDER = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const ALL = 57366
const DISTINCT = 57367
const AS = 57368
const EXISTS = 57369
const ASC = 57370
const DESC = 57371
const INTO = 57372
const DUPLICATE = 57373
const DEFAULT = 57374
const SET = 57375
const LOCK = 57376
const UNLOCK = 57377
const KEYS = 57378
const DO = 57379
const CALL = 57380
const DISTINCTROW = 57381
const PARSER = 57382
const GENERATED = 57383
const ALWAYS = 57384
const OUTFILE = 57385
const S3 = 57386
const DATA = 57387
const LOAD = 57388
const LINES = 57389
const TERMINATED = 57390
const ESCAPED = 57391
const ENCLOSED = 57392
const DUMPFILE = 57393
const CSV = 57394
const HEADER = 57395
const MANIFEST = 57396
const OVERWRITE = 57397
const STARTING = 57398
const OPTIONALLY = 57399
const VALUES = 57400
const LAST_INSERT_ID = 57401
const NEXT = 57402
const VALUE = 57403
const SHARE = 57404
const MODE = 57405
const SQL_NO_CACHE = 57406
const SQL_CACHE = 57407
const SQL_CALC_FOUND_ROWS = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const ON = 57419
const USING = 57420
const INPLACE = 57421
const COPY = 57422
const INSTANT = 57423
const ALGORITHM = 57424
const NONE = 57425
const SHARED = 57426
const EXCLUSIVE = 57427
const SUBQUERY_AS_EXPR = 57428
const STRING = 57429
const ID = 57430
const AT_ID = 57431
const AT_AT_ID = 57432
const HEX = 57433
const NCHAR_STRING = 57434
const INTEGRAL = 57435
const FLOAT = 57436
const DECIMAL = 57437
const HEXNUM = 57438
const COMMENT = 57439
const COMMENT_KEYWORD = 57440
const BITNUM = 57441
const BIT_LITERAL = 57442
const COMPRESSION = 57443
const VALUE_ARG = 57444
const LIST_ARG = 57445
const OFFSET_ARG = 57446
const JSON_PRETTY = 57447
const JSON_STORAGE_SIZE = 57448
const JSON_STORAGE_FREE = 57449
const JSON_CONTAINS = 57450
const JSON_CONTAINS_PATH = 57451
const JSON_EXTRACT = 57452
const JSON_KEYS = 57453
const JSON_OVERLAPS = 57454
const JSON_SEARCH = 57455
const JSON_VALUE = 57456
const EXTRACT = 57457
const NULL = 57458
const TRUE = 57459
const FALSE = 57460
const OFF = 57461
const DISCARD = 57462
const IMPORT = 57463
const ENABLE = 57464
const DISABLE = 57465
const TABLESPACE = 57466
const VIRTUAL = 57467
const STORED = 57468
const BOTH = 57469
const LEADING = 57470
const TRAILING = 57471
const EMPTY_FROM_CLAUSE = 57472
const LOWER_THAN_CHARSET = 57473
const CHARSET = 57474
const UNIQUE = 57475
const KEY = 57476
const EXPRESSION_PREC_SETTER = 57477
const OR = 57478
const XOR = 57479
const AND = 57480
const NOT = 57481
const BETWEEN = 57482
const CASE = 57483
const WHEN = 57484
const THEN = 57485
const ELSE = 57486
const END = 57487
const LE = 57488
const GE = 57489
const NE = 57490
const NULL_SAFE_EQUAL = 57491
const IS = 57492
const LIKE = 57493
const REGEXP = 57494
const RLIKE = 57495
const IN = 57496
const SHIFT_LEFT = 57497
const SHIFT_RIGHT = 57498
const DIV = 57499
const MOD = 57500
const UNARY = 57501
const COLLATE = 57502
const BINARY = 57503
const UNDERSCORE_ARMSCII8 = 57504
const UNDERSCORE_ASCII = 57505
const UNDERSCORE_BIG5 = 57506
const UNDERSCORE_BINARY = 57507
const UNDERSCORE_CP1250 = 57508
const UNDERSCORE_CP1251 = 57509
const UNDERSCORE_CP1256 = 57510
const UNDERSCORE_CP1257 = 57511
const UNDERSCORE_CP850 = 57512
const UNDERSCORE_CP852 = 57513
const UNDERSCORE_CP866 = 57514
const UNDERSCORE_CP932 = 57515
const UNDERSCORE_DEC8 = 57516
const UNDERSCORE_EUCJPMS = 57517
const UNDERSCORE_EUCKR = 57518
const UNDERSCORE_GB18030 = 57519
const UNDERSCORE_GB2312 = 57520
const UNDERSCORE_GBK = 57521
const UNDERSCORE_GEOSTD8 = 57522
const UNDERSCORE_GREEK = 57523
const UNDERSCORE_HEBREW = 57524
const UNDERSCORE_HP8 = 57525
const UNDERSCORE_KEYBCS2 = 57526
const UNDERSCORE_KOI8R = 57527
const UNDERSCORE_KOI8U = 57528
const UNDERSCORE_LATIN1 = 57529
const UNDERSCORE_LATIN2 = 57530
const UNDERSCORE_LATIN5 = 57531
const UNDERSCORE_LATIN7 = 57532
const UNDERSCORE_MACCE = 57533
const UNDERSCORE_MACROMAN = 57534
const UNDERSCORE_SJIS = 57535
const UNDERSCORE_SWE7 = 57536
const UNDERSCORE_TIS620 = 57537
const UNDERSCORE_UCS2 = 57538
const UNDERSCORE_UJIS = 57539
const UNDERSCORE_UTF16 = 57540
const UNDERSCORE_UTF16LE = 57541
const UNDERSCORE_UTF32 = 57542
const UNDERSCORE_UTF8 = 57543
const UNDERSCORE_UTF8MB4 = 57544
const UNDERSCORE_UTF8MB3 = 57545
const INTERVAL = 57546
const WINDOW_EXPR = 57547
const JSON_EXTRACT_OP = 57548
const JSON_UNQUOTE_EXTRACT_OP = 57549
const CREATE = 57550
const ALTER = 57551
const DROP = 57552
const RENAME = 57553
const ANALYZE = 57554
const ADD = 57555
const FLUSH = 57556
const CHANGE = 57557
const MODIFY = 57558
const DEALLOCATE = 57559
const REVERT = 57560
const SCHEMA = 57561
const TABLE = 57562
const INDEX = 57563
const VIEW = 57564
const TO = 57565
const IGNORE = 57566
const IF = 57567
const PRIMARY = 57568
const COLUMN = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const KEY_BLOCK_SIZE = 57572
const CHECK = 57573
const INDEXES = 57574
const ACTION = 57575
const CASCADE = 57576
const CONSTRAINT = 57577
const FOREIGN = 57578
const NO = 57579
const REFERENCES = 57580
const RESTRICT = 57581
const SHOW = 57582
const DESCRIBE = 57583
const EXPLAIN = 57584
const DATE = 57585
const ESCAPE = 57586
const REPAIR = 57587
const OPTIMIZE = 57588
const TRUNCATE = 57589
const COALESCE = 57590
const EXCHANGE = 57591
const REBUILD = 57592
const PARTITIONING = 57593
const REMOVE = 57594
const PREPARE = 57595
const EXECUTE = 57596
const MAXVALUE = 57597
const PARTITION = 57598
const REORGANIZE = 57599
const LESS = 57600
const THAN = 57601
const PROCEDURE = 57602
const TRIGGER = 57603
const VINDEX = 57604
const VINDEXES = 57605
const DIRECTORY = 57606
const NAME = 57607
const UPGRADE = 57608
const STATUS = 57609
const VARIABLES = 57610
const WARNINGS = 57611
const CASCADED = 57612
const DEFINER = 57613
const OPTION = 57614
const SQL = 57615
const UNDEFINED = 57616
const SEQUENCE = 57617
const MERGE = 57618
const TEMPORARY = 57619
const TEMPTABLE = 57620
const INVOKER = 57621
const SECURITY = 57622
const FIRST = 57623
const AFTER = 57624
const LAST = 57625
const VITESS_MIGRATION = 57626
const CANCEL = 57627
const RETRY = 57628
const LAUNCH = 57629
const COMPLETE = 57630
const CLEANUP = 57631
const THROTTLE = 57632
const UNTHROTTLE = 57633
const EXPIRE = 57634
const RATIO = 57635
const BEGIN = 57636
const START = 57637
const TRANSACTION = 57638
const COMMIT = 57639
const ROLLBACK = 57640
const SAVEPOINT = 57641
const RELEASE = 57642
const WORK = 57643
const BIT = 57644
const TINYINT = 57645
const SMALLINT = 57646
const MEDIUMINT = 57647
const INT = 57648
const INTEGER = 57649
const BIGINT = 57650
const INTNUM = 57651
const REAL = 57652
const DOUBLE = 57653
const FLOAT_TYPE = 57654
const DECIMAL_TYPE = 57655
const NUMERIC = 57656
const TIME = 57657
const TIMESTAMP = 57658
const DATETIME = 57659
const YEAR = 57660
const CHAR = 57661
const VARCHAR = 57662
const BOOL = 57663
const CHARACTER = 57664
const VARBINARY = 57665
const NCHAR = 57666
const TEXT = 57667
const TINYTEXT = 57668
const MEDIUMTEXT = 57669
const LONGTEXT = 57670
const BLOB = 57671
const TINYBLOB = 57672
const MEDIUMBLOB = 57673
const LONGBLOB = 57674
const JSON = 57675
const JSON_SCHEMA_VALID = 57676
const JSON_SCHEMA_VALIDATION_REPORT = 57677
const ENUM = 57678
const GEOMETRY = 57679
const POINT = 57680
const LINESTRING = 57681
const POLYGON = 57682
const GEOMCOLLECTION = 57683
const GEOMETRYCOLLECTION = 57684
const MULTIPOINT = 57685
const MULTILINESTRING = 57686
const MULTIPOLYGON = 57687
const ASCII = 57688
const UNICODE = 57689
const NULLX = 57690
const AUTO_INCREMENT = 57691
const APPROXNUM = 57692
const SIGNED = 57693
const UNSIGNED = 57694
const ZEROFILL = 57695
const CODE = 57696
const COLLATION = 57697
const COLUMNS = 57698
const DATABASES = 57699
const ENGINES = 57700
const EVENT = 57701
const EXTENDED = 57702
const FIELDS = 57703
const FULL = 57704
const FUNCTION = 57705
const GTID_EXECUTED = 57706
const KEYSPACES = 57707
const OPEN = 57708
const PLUGINS = 57709
const PRIVILEGES = 57710
const PROCESSLIST = 57711
const SCHEMAS = 57712
const TABLES = 57713
const TRIGGERS = 57714
const USER = 57715
const VGTID_EXECUTED = 57716
const VITESS_KEYSPACES = 57717
const VITESS_METADATA = 57718
const VITESS_MIGRATIONS = 57719
const VITESS_REPLICATION_STATUS = 57720
const VITESS_SHARDS = 57721
const VITESS_TABLETS = 57722
const VITESS_TARGET = 57723
const VSCHEMA = 57724
const VITESS_THROTTLED_APPS = 57725
const NAMES = 57726
const GLOBAL = 57727
const SESSION = 57728
const ISOLATION = 57729
const LEVEL = 57730
const READ = 57731
const WRITE = 57732
const ONLY = 57733
const REPEATABLE = 57734
const COMMITTED = 57735
const UNCOMMITTED = 57736
const SERIALIZABLE = 57737
const CURRENT_TIMESTAMP = 57738
const DATABASE = 57739
const CURRENT_DATE = 57740
const NOW = 57741
const CURRENT_TIME = 57742
const LOCALTIME = 57743
const LOCALTIMESTAMP = 57744
const CURRENT_USER = 57745
const UTC_DATE = 57746
const UTC_TIME = 57747
const UTC_TIMESTAMP = 57748
const DAY = 57749
const DAY_HOUR = 57750
const DAY_MICROSECOND = 57751
const DAY_MINUTE = 57752
const DAY_SECOND = 57753
const HOUR = 57754
const HOUR_MICROSECOND = 57755
const HOUR_MINUTE = 57756
const HOUR_SECOND = 57757
const MICROSECOND = 57758
const MINUTE = 57759
const MINUTE_MICROSECOND = 57760
const MINUTE_SECOND = 57761
const MONTH = 57762
const QUARTER = 57763
const SECOND = 57764
const SECOND_MICROSECOND = 57765
const YEAR_MONTH = 57766
const WEEK = 57767
const REPLACE = 57768
const CONVERT = 57769
const CAST = 57770
const SUBSTR = 57771
const SUBSTRING = 57772
const SEPARATOR = 57773
const TIMESTAMPADD = 57774
const TIMESTAMPDIFF = 57775
const WEIGHT_STRING = 57776
const LTRIM = 57777
const RTRIM = 57778
const TRIM = 57779
const JSON_ARRAY = 57780
const JSON_OBJECT = 57781
const JSON_QUOTE = 57782
const JSON_DEPTH = 57783
const JSON_TYPE = 57784
const JSON_LENGTH = 57785
const JSON_VALID = 57786
const JSON_ARRAY_APPEND = 57787
const JSON_ARRAY_INSERT = 57788
const JSON_INSERT = 57789
const JSON_MERGE = 57790
const JSON_MERGE_PATCH = 57791
const JSON_MERGE_PRESERVE = 57792
const JSON_REMOVE = 57793
const JSON_REPLACE = 57794
const JSON_SET = 57795
const JSON_UNQUOTE = 57796
const COUNT = 57797
const AVG = 57798
const MAX = 57799
const MIN = 57800
const SUM = 57801
const GROUP_CONCAT = 57802
const BIT_AND = 57803
const BIT_OR = 57804
const BIT_XOR = 57805
const STD = 57806
const STDDEV = 57807
const STDDEV_POP = 57808
const STDDEV_SAMP = 57809
const VAR_POP = 57810
const VAR_SAMP = 57811
const VARIANCE = 57812
const REGEXP_INSTR = 57813
const REGEXP_LIKE = 57814
const REGEXP_REPLACE = 57815
const REGEXP_SUBSTR = 57816
const ExtractValue = 57817
const UpdateXML = 57818
const GET_LOCK = 57819
const RELEASE_LOCK = 57820
const RELEASE_ALL_LOCKS = 57821
const IS_FREE_LOCK = 57822
const IS_USED_LOCK = 57823
const LOCATE = 57824
const POSITION = 57825
const MATCH = 57826
const AGAINST = 57827
const BOOLEAN = 57828
const LANGUAGE = 57829
const WITH = 57830
const QUERY = 57831
const EXPANSION = 57832
const WITHOUT = 57833
const VALIDATION = 57834
const UNUSED = 57835
const ARRAY = 57836
const BYTE = 57837
const CUME_DIST = 57838
const DESCRIPTION = 57839
const DENSE_RANK = 57840
const EMPTY = 57841
const EXCEPT = 57842
const FIRST_VALUE = 57843
const GROUPING = 57844
const GROUPS = 57845
const JSON_TABLE = 57846
const LAG = 57847
const LAST_VALUE = 57848
const LATERAL = 57849
const LEAD = 57850
const NTH_VALUE = 57851
const NTILE = 57852
const OF = 57853
const OVER = 57854
const PERCENT_RANK = 57855
const RANK = 57856
const RECURSIVE = 57857
const ROW_NUMBER = 57858
const SYSTEM = 57859
const WINDOW = 57860
const ACTIVE = 57861
const ADMIN = 57862
const AUTOEXTEND_SIZE = 57863
const BUCKETS = 57864
const CLONE = 57865
const COLUMN_FORMAT = 57866
const COMPONENT = 57867
const DEFINITION = 57868
const ENFORCED = 57869
const ENGINE_ATTRIBUTE = 57870
const EXCLUDE = 57871
const FOLLOWING = 57872
const GET_MASTER_PUBLIC_KEY = 57873
const HISTOGRAM = 57874
const HISTORY = 57875
const INACTIVE = 57876
const INVISIBLE = 57877
const LOCKED = 57878
const MASTER_COMPRESSION_ALGORITHMS = 57879
const MASTER_PUBLIC_KEY_PATH = 57880
const MASTER_TLS_CIPHERSUITES = 57881
const MASTER_ZSTD_COMPRESSION_LEVEL = 57882
const NESTED = 57883
const NETWORK_NAMESPACE = 57884
const NOWAIT = 57885
const NULLS = 57886
const OJ = 57887
const OLD = 57888
const OPTIONAL = 57889
const ORDINALITY = 57890
const ORGANIZATION = 57891
const OTHERS = 57892
const PARTIAL = 57893
const PATH = 57894
const PERSIST = 57895
const PERSIST_ONLY = 57896
const PRECEDING = 57897
const PRIVILEGE_CHECKS_USER = 57898
const PROCESS = 57899
const RANDOM = 57900
const REFERENCE = 57901
const REQUIRE_ROW_FORMAT = 57902
const RESOURCE = 57903
const RESPECT = 57904
const RESTART = 57905
const RETAIN = 57906
const REUSE = 57907
const ROLE = 57908
const SECONDARY = 57909
const SECONDARY_ENGINE = 57910
const SECONDARY_ENGINE_ATTRIBUTE = 57911
const SECONDARY_LOAD = 57912
const SECONDARY_UNLOAD = 57913
const SIMPLE = 57914
const SKIP = 57915
const SRID = 57916
const THREAD_PRIORITY = 57917
const TIES = 57918
const UNBOUNDED = 57919
const VCPU = 57920
const VISIBLE = 57921
const RETURNING = 57922
const FORMAT_BYTES = 57923
const FORMAT_PICO_TIME = 57924
const PS_CURRENT_THREAD_ID = 57925
const PS_THREAD_ID = 57926
const GTID_SUBSET = 57927
const GTID_SUBTRACT = 57928
const WAIT_FOR_EXECUTED_GTID_SET = 57929
const WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS = 57930
const FORMAT = 57931
const TREE = 57932
const VITESS = 57933
const TRADITIONAL = 57934
const VTEXPLAIN = 57935
const LOCAL = 57936
const LOW_PRIORITY = 57937
const NO_WRITE_TO_BINLOG = 57938
const LOGS = 57939
const ERROR = 57940
const GENERAL = 57941
const HOSTS = 57942
const OPTIMIZER_COSTS = 57943
const USER_RESOURCES = 57944
const SLOW = 57945
const CHANNEL = 57946
const RELAY = 57947
const EXPORT = 57948
const CURRENT = 57949
const ROW = 57950
const ROWS = 57951
const AVG_ROW_LENGTH = 57952
const CONNECTION = 57953
const CHECKSUM = 57954
const DELAY_KEY_WRITE = 57955
const ENCRYPTION = 57956
const ENGINE = 57957
const INSERT_METHOD = 57958
const MAX_ROWS = 57959
const MIN_ROWS = 57960
const PACK_KEYS = 57961
const PASSWORD = 57962
const FIXED = 57963
const DYNAMIC = 57964
const COMPRESSED = 57965
const REDUNDANT = 57966
const COMPACT = 57967
const ROW_FORMAT = 57968
const STATS_AUTO_RECALC = 57969
const STATS_PERSISTENT = 57970
const STATS_SAMPLE_PAGES = 57971
const STORAGE = 57972
const MEMORY = 57973
const DISK = 57974
const PARTITIONS = 57975
const LINEAR = 57976
const RANGE = 57977
const LIST = 57978
const SUBPARTITION = 57979
const SUBPARTITIONS = 57980
const HASH = 57981

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"MEMBER",
	"FUNCTION_CALL_NON_KEYWORD",
	"STRING_TYPE_PREFIX_NON_KEYWORD",
	"LEX_ERROR",
	"UNION",
	"SELECT",
	"STREAM",
	"VSTREAM",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"ORDER",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"ALL",
	"DISTINCT",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"SET",
	"LOCK",
	"UNLOCK",
	"KEYS",
	"DO",
	"CALL",
	"DISTINCTROW",
	"PARSER",
	"GENERATED",
	"ALWAYS",
	"OUTFILE",
	"S3",
	"DATA",
	"LOAD",
	"LINES",
	"TERMINATED",
	"ESCAPED",
	"ENCLOSED",
	"DUMPFILE",
	"CSV",
	"HEADER",
	"MANIFEST",
	"OVERWRITE",
	"STARTING",
	"OPTIONALLY",
	"VALUES",
	"LAST_INSERT_ID",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"SQL_CALC_FOUND_ROWS",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"ON",
	"USING",
	"INPLACE",
	"COPY",
	"INSTANT",
	"ALGORITHM",
	"NONE",
	"SHARED",
	"EXCLUSIVE",
	"SUBQUERY_AS_EXPR",
	"'('",
	"','",
	"')'",
	"STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"HEX",
	"NCHAR_STRING",
	"INTEGRAL",
	"FLOAT",
	"DECIMAL",
	"HEXNUM",
	"COMMENT",
	"COMMENT_KEYWORD",
	"BITNUM",
	"BIT_LITERAL",
	"COMPRESSION",
	"VALUE_ARG",
	"LIST_ARG",
	"OFFSET_ARG",
	"JSON_PRETTY",
	"JSON_STORAGE_SIZE",
	"JSON_STORAGE_FREE",
	"JSON_CONTAINS",
	"JSON_CONTAINS_PATH",
	"JSON_EXTRACT",
	"JSON_KEYS",
	"JSON_OVERLAPS",
	"JSON_SEARCH",
	"JSON_VALUE",
	"EXTRACT",
	"NULL",
	"TRUE",
	"FALSE",
	"OFF",
	"DISCARD",
	"IMPORT",
	"ENABLE",
	"DISABLE",
	"TABLESPACE",
	"VIRTUAL",
	"STORED",
	"BOTH",
	"LEADING",
	"TRAILING",
	"EMPTY_FROM_CLAUSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"EXPRESSION_PREC_SETTER",
	"OR",
	"'|'",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"RLIKE",
	"IN",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_ARMSCII8",
	"UNDERSCORE_ASCII",
	"UNDERSCORE_BIG5",
	"UNDERSCORE_BINARY",
	"UNDERSCORE_CP1250",
	"UNDERSCORE_CP1251",
	"UNDERSCORE_CP1256",
	"UNDERSCORE_CP1257",
	"UNDERSCORE_CP850",
	"UNDERSCORE_CP852",
	"UNDERSCORE_CP866",
	"UNDERSCORE_CP932",
	"UNDERSCORE_DEC8",
	"UNDERSCORE_EUCJPMS",
	"UNDERSCORE_EUCKR",
	"UNDERSCORE_GB18030",
	"UNDERSCORE_GB2312",
	"UNDERSCORE_GBK",
	"UNDERSCORE_GEOSTD8",
	"UNDERSCORE_GREEK",
	"UNDERSCORE_HEBREW",
	"UNDERSCORE_HP8",
	"UNDERSCORE_KEYBCS2",
	"UNDERSCORE_KOI8R",
	"UNDERSCORE_KOI8U",
	"UNDERSCORE_LATIN1",
	"UNDERSCORE_LATIN2",
	"UNDERSCORE_LATIN5",
	"UNDERSCORE_LATIN7",
	"UNDERSCORE_MACCE",
	"UNDERSCORE_MACROMAN",
	"UNDERSCORE_SJIS",
	"UNDERSCORE_SWE7",
	"UNDERSCORE_TIS620",
	"UNDERSCORE_UCS2",
	"UNDERSCORE_UJIS",
	"UNDERSCORE_UTF16",
	"UNDERSCORE_UTF16LE",
	"UNDERSCORE_UTF32",
	"UNDERSCORE_UTF8",
	"UNDERSCORE_UTF8MB4",
	"UNDERSCORE_UTF8MB3",
	"INTERVAL",
	"'.'",
	"WINDOW_EXPR",
	"JSON_EXTRACT_OP",
	"JSON_UNQUOTE_EXTRACT_OP",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"FLUSH",
	"CHANGE",
	"MODIFY",
	"DEALLOCATE",
	"REVERT",
	"SCHEMA",
	"TABLE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"SPATIAL",
	"FULLTEXT",
	"KEY_BLOCK_SIZE",
	"CHECK",
	"INDEXES",
	"ACTION",
	"CASCADE",
	"CONSTRAINT",
	"FOREIGN",
	"NO",
	"REFERENCES",
	"RESTRICT",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"COALESCE",
	"EXCHANGE",
	"REBUILD",
	"PARTITIONING",
	"REMOVE",
	"PREPARE",
	"EXECUTE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"VINDEX",
	"VINDEXES",
	"DIRECTORY",
	"NAME",
	"UPGRADE",
	"STATUS",
	"VARIABLES",
	"WARNINGS",
	"CASCADED",
	"DEFINER",
	"OPTION",
	"SQL",
	"UNDEFINED",
	"SEQUENCE",
	"MERGE",
	"TEMPORARY",
	"TEMPTABLE",
	"INVOKER",
	"SECURITY",
	"FIRST",
	"AFTER",
	"LAST",
	"VITESS_MIGRATION",
	"CANCEL",
	"RETRY",
	"LAUNCH",
	"COMPLETE",
	"CLEANUP",
	"THROTTLE",
	"UNTHROTTLE",
	"EXPIRE",
	"RATIO",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"SAVEPOINT",
	"RELEASE",
	"WORK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL_TYPE",
	"NUMERIC",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"JSON_SCHEMA_VALID",
	"JSON_SCHEMA_VALIDATION_REPORT",
	"ENUM",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMCOLLECTION",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"ASCII",
	"UNICODE",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"CODE",
	"COLLATION",
	"COLUMNS",
	"DATABASES",
	"ENGINES",
	"EVENT",
	"EXTENDED",
	"FIELDS",
	"FULL",
	"FUNCTION",
	"GTID_EXECUTED",
	"KEYSPACES",
	"OPEN",
	"PLUGINS",
	"PRIVILEGES",
	"PROCESSLIST",
	"SCHEMAS",
	"TABLES",
	"TRIGGERS",
	"USER",
	"VGTID_EXECUTED",
	"VITESS_KEYSPACES",
	"VITESS_METADATA",
	"VITESS_MIGRATIONS",
	"VITESS_REPLICATION_STATUS",
	"VITESS_SHARDS",
	"VITESS_TABLETS",
	"VITESS_TARGET",
	"VSCHEMA",
	"VITESS_THROTTLED_APPS",
	"NAMES",
	"GLOBAL",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_DATE",
	"NOW",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"CURRENT_USER",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"DAY",
	"DAY_HOUR",
	"DAY_MICROSECOND",
	"DAY_MINUTE",
	"DAY_SECOND",
	"HOUR",
	"HOUR_MICROSECOND",
	"HOUR_MINUTE",
	"HOUR_SECOND",
	"MICROSECOND",
	"MINUTE",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"MONTH",
	"QUARTER",
	"SECOND",
	"SECOND_MICROSECOND",
	"YEAR_MONTH",
	"WEEK",
	"REPLACE",
	"CONVERT",
	"CAST",
	"SUBSTR",
	"SUBSTRING",
	"SEPARATOR",
	"TIMESTAMPADD",
	"TIMESTAMPDIFF",
	"WEIGHT_STRING",
	"LTRIM",
	"RTRIM",
	"TRIM",
	"JSON_ARRAY",
	"JSON_OBJECT",
	"JSON_QUOTE",
	"JSON_DEPTH",
	"JSON_TYPE",
	"JSON_LENGTH",
	"JSON_VALID",
	"JSON_ARRAY_APPEND",
	"JSON_ARRAY_INSERT",
	"JSON_INSERT",
	"JSON_MERGE",
	"JSON_MERGE_PATCH",
	"JSON_MERGE_PRESERVE",
	"JSON_REMOVE",
	"JSON_REPLACE",
	"JSON_SET",
	"JSON_UNQUOTE",
	"COUNT",
	"AVG",
	"MAX",
	"MIN",
	"SUM",
	"GROUP_CONCAT",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"STD",
	"STDDEV",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"VAR_POP",
	"VAR_SAMP",
	"VARIANCE",
	"REGEXP_INSTR",
	"REGEXP_LIKE",
	"REGEXP_REPLACE",
	"REGEXP_SUBSTR",
	"ExtractValue",
	"UpdateXML",
	"GET_LOCK",
	"RELEASE_LOCK",
	"RELEASE_ALL_LOCKS",
	"IS_FREE_LOCK",
	"IS_USED_LOCK",
	"LOCATE",
	"POSITION",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"UNUSED",
	"ARRAY",
	"BYTE",
	"CUME_DIST",
	"DESCRIPTION",
	"DENSE_RANK",
	"EMPTY",
	"EXCEPT",
	"FIRST_VALUE",
	"GROUPING",
	"GROUPS",
	"JSON_TABLE",
	"LAG",
	"LAST_VALUE",
	"LATERAL",
	"LEAD",
	"NTH_VALUE",
	"NTILE",
	"OF",
	"OVER",
	"PERCENT_RANK",
	"RANK",
	"RECURSIVE",
	"ROW_NUMBER",
	"SYSTEM",
	"WINDOW",
	"ACTIVE",
	"ADMIN",
	"AUTOEXTEND_SIZE",
	"BUCKETS",
	"CLONE",
	"COLUMN_FORMAT",
	"COMPONENT",
	"DEFINITION",
	"ENFORCED",
	"ENGINE_ATTRIBUTE",
	"EXCLUDE",
	"FOLLOWING",
	"GET_MASTER_PUBLIC_KEY",
	"HISTOGRAM",
	"HISTORY",
	"INACTIVE",
	"INVISIBLE",
	"LOCKED",
	"MASTER_COMPRESSION_ALGORITHMS",
	"MASTER_PUBLIC_KEY_PATH",
	"MASTER_TLS_CIPHERSUITES",
	"MASTER_ZSTD_COMPRESSION_LEVEL",
	"NESTED",
	"NETWORK_NAMESPACE",
	"NOWAIT",
	"NULLS",
	"OJ",
	"OLD",
	"OPTIONAL",
	"ORDINALITY",
	"ORGANIZATION",
	"OTHERS",
	"PARTIAL",
	"PATH",
	"PERSIST",
	"PERSIST_ONLY",
	"PRECEDING",
	"PRIVILEGE_CHECKS_USER",
	"PROCESS",
	"RANDOM",
	"REFERENCE",
	"REQUIRE_ROW_FORMAT",
	"RESOURCE",
	"RESPECT",
	"RESTART",
	"RETAIN",
	"REUSE",
	"ROLE",
	"SECONDARY",
	"SECONDARY_ENGINE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"SECONDARY_LOAD",
	"SECONDARY_UNLOAD",
	"SIMPLE",
	"SKIP",
	"SRID",
	"THREAD_PRIORITY",
	"TIES",
	"UNBOUNDED",
	"VCPU",
	"VISIBLE",
	"RETURNING",
	"FORMAT_BYTES",
	"FORMAT_PICO_TIME",
	"PS_CURRENT_THREAD_ID",
	"PS_THREAD_ID",
	"GTID_SUBSET",
	"GTID_SUBTRACT",
	"WAIT_FOR_EXECUTED_GTID_SET",
	"WAIT_UNTIL_SQL_THREAD_AFTER_GTIDS",
	"FORMAT",
	"TREE",
	"VITESS",
	"TRADITIONAL",
	"VTEXPLAIN",
	"LOCAL",
	"LOW_PRIORITY",
	"NO_WRITE_TO_BINLOG",
	"LOGS",
	"ERROR",
	"GENERAL",
	"HOSTS",
	"OPTIMIZER_COSTS",
	"USER_RESOURCES",
	"SLOW",
	"CHANNEL",
	"RELAY",
	"EXPORT",
	"CURRENT",
	"ROW",
	"ROWS",
	"AVG_ROW_LENGTH",
	"CONNECTION",
	"CHECKSUM",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"INSERT_METHOD",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"PASSWORD",
	"FIXED",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"STORAGE",
	"MEMORY",
	"DISK",
	"PARTITIONS",
	"LINEAR",
	"RANGE",
	"LIST",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"HASH",
	"';'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	13, 48,
	14, 48,
	-2, 37,
	-1, 49,
	1, 147,
	657, 147,
	-2, 155,
	-1, 50,
	135, 155,
	176, 155,
	339, 155,
	-2, 506,
	-1, 57,
	36, 752,
	238, 752,
	249, 752,
	284, 766,
	285, 766,
	-2, 754,
	-1, 62,
	240, 783,
	-2, 781,
	-1, 116,
	237, 1441,
	-2, 121,
	-1, 118,
	1, 148,
	657, 148,
	-2, 155,
	-1, 129,
	136, 391,
	243, 391,
	-2, 495,
	-1, 148,
	135, 155,
	176, 155,
	339, 155,
	-2, 515,
	-1, 798,
	87, 1458,
	-2, 1303,
	-1, 799,
	87, 1459,
	221, 1463,
	-2, 1304,
	-1, 800,
	221, 1462,
	-2, 39,
	-1, 880,
	60, 852,
	-2, 867,
	-1, 966,
	248, 40,
	253, 40,
	-2, 402,
	-1, 1051,
	1, 563,
	657, 563,
	-2, 155,
	-1, 1340,
	221, 1463,
	-2, 1304,
	-1, 1428,
	89, 865,
	-2, 881,
	-1, 1431,
	89, 865,
	-2, 881,
	-1, 1432,
	89, 865,
	-2, 881,
	-1, 1488,
	60, 853,
	-2, 872,
	-1, 1489,
	60, 854,
	-2, 873,
	-1, 1540,
	135, 155,
	176, 155,
	339, 155,
	-2, 441,
	-1, 1619,
	136, 391,
	243, 391,
	-2, 495,
	-1, 1628,
	248, 41,
	253, 41,
	-2, 403,
	-1, 1982,
	221, 1467,
	-2, 1461,
	-1, 1983,
	221, 1463,
	-2, 1459,
	-1, 2083,
	135, 155,
	176, 155,
	339, 155,
	-2, 442,
	-1, 2090,
	26, 176,
	-2, 178,
	-1, 2360,
	89, 865,
	-2, 881,
	-1, 2452,
	78, 95,
	88, 95,
	-2, 933,
	-1, 2520,
	632, 679,
	-2, 653,
	-1, 2688,
	50, 1400,
	-2, 1394,
	-1, 3342,
	632, 679,
	-2, 667,
	-1, 3431,
	23, 1819,
	33, 1819,
	177, 1819,
	260, 1819,
	319, 1819,
	320, 1819,
	321, 1819,
	322, 1819,
	323, 1819,
	324, 1819,
	325, 1819,
	327, 1819,
	328, 1819,
	329, 1819,
	330, 1819,
	331, 1819,
	332, 1819,
	333, 1819,
	334, 1819,
	335, 1819,
	336, 1819,
	337, 1819,
	338, 1819,
	340, 1819,
	342, 1819,
	343, 1819,
	344, 1819,
	345, 1819,
	346, 1819,
	347, 1819,
	348, 1819,
	349, 1819,
	350, 1819,
	353, 1819,
	354, 1819,
	355, 1819,
	356, 1819,
	357, 1819,
	359, 1819,
	360, 1819,
	361, 1819,
	362, 1819,
	503, 1819,
	-2, 611,
}

const yyPrivate = 57344

const yyLast = 46813

var yyAct = [...]int{
	1496, 3504, 799, 3515, 3323, 809, 3089, 3408, 3473, 802,
	672, 3472, 3429, 2916, 1116, 1543, 1747, 3373, 2080, 2837,
	3396, 3307, 2740, 3059, 2747, 2701, 3255, 2031, 5, 2011,
	2797, 2802, 2799, 2798, 2796, 2801, 2800, 3305, 1466, 2788,
	768, 1114, 2352, 39, 3046, 873, 2704, 2013, 2386, 3119,
	651, 2816, 2647, 3295, 2817, 189, 654, 2705, 189, 896,
	1503, 632, 764, 2150, 2755, 2702, 638, 2955, 1864, 3124,
	2581, 2949, 2051, 2975, 762, 3090, 189, 3091, 769, 682,
	2819, 2699, 2035, 2425, 2689, 763, 2941, 2412, 904, 2485,
	1973, 189, 1597, 2113, 2054, 2565, 998, 650, 2181, 2486,
	2068, 652, 2487, 2056, 2843, 2118, 2055, 2138, 646, 157,
	2437, 2517, 2418, 2404, 40, 2388, 638, 189, 638, 1490,
	877, 1944, 881, 897, 875, 38, 1978, 1970, 1803, 1845,
	2557, 2137, 2159, 1626, 1092, 2120, 2479, 956, 1532, 801,
	2043, 899, 1644, 2198, 1512, 1063, 1849, 2454, 143, 961,
	664, 2058, 1352, 94, 928, 1470, 1868, 1822, 1280, 1633,
	935, 1743, 964, 98, 99, 2135, 1943, 932, 967, 1725,
	962, 974, 963, 2036, 936, 1531, 2109, 659, 914, 916,
	1517, 887, 1979, 1940, 1336, 1877, 1312, 884, 93, 10,
	79, 1106, 1752, 101, 9, 908, 883, 121, 8, 161,
	119, 120, 1592, 1047, 126, 127, 885, 882, 909, 78,
	1112, 658, 100, 1618, 1356, 3332, 87, 641, 92, 3505,
	3047, 2785, 2510, 2152, 2153, 2154, 2807, 3358, 2152, 2540,
	2539, 588, 2508, 2196, 1710, 3039, 1281, 89, 89, 3002,
	3456, 2573, 1000, 2574, 3094, 3353, 621, 890, 3354, 122,
	3094, 1360, 2239, 3359, 627, 1017, 1018, 1019, 1003, 1022,
	1023, 1024, 1025, 929, 128, 1028, 1029, 1030, 1031, 1032,
	1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 2805, 891, 924, 642, 1810, 954, 923, 876,
	2, 874, 1809, 977, 1808, 1807, 953, 818, 819, 820,
	1806, 1497, 978, 1805, 818, 819, 820, 1783, 2811, 89,
	2008, 2009, 1004, 1007, 1008, 3450, 952, 898, 122, 951,
	950, 644, 184, 645, 1011, 2384, 2685, 2807, 1825, 2530,
	1297, 3093, 105, 106, 107, 1020, 110, 3093, 2185, 116,
	2804, 1281, 185, 1291, 3354, 583, 123, 3476, 145, 2651,
	3525, 945, 940, 3409, 3460, 3458, 640, 3471, 3495, 166,
	2921, 2414, 2920, 2533, 3308, 869, 870, 871, 872, 89,
	2183, 880, 2353, 1815, 2862, 3439, 3251, 3250, 621, 3459,
	3457, 80, 2184, 2805, 2129, 3052, 122, 1002, 3053, 2248,
	156, 1001, 3486, 3437, 80, 80, 144, 3261, 3454, 911,
	912, 80, 3443, 3444, 82, 2428, 3071, 2123, 3060, 2811,
	2757, 2758, 3397, 3405, 627, 163, 2178, 3438, 164, 2808,
	2039, 3415, 3337, 3260, 3070, 1854, 3434, 2883, 3415, 1607,
	2429, 2737, 2738, 2385, 922, 766, 767, 132, 133, 155,
	154, 183, 2736, 3137, 1287, 2572, 2463, 1279, 1291, 2462,
	622, 1533, 2464, 1534, 2246, 2547, 2548, 2245, 621, 89,
	2075, 2076, 2074, 2556, 1313, 1294, 1109, 1295, 1296, 1082,
	1070, 867, 89, 89, 1099, 1071, 1101, 866, 621, 89,
	922, 766, 767, 1069, 2511, 1068, 2859, 1314, 1315, 1316,
	1317, 1318, 1319, 1320, 1322, 1321, 1323, 1324, 1087, 1088,
	618, 1070, 3324, 2475, 1083, 949, 1071, 1056, 1057, 2240,
	2241, 2243, 2242, 2952, 1098, 1100, 2010, 2756, 2421, 2422,
	2808, 2093, 2092, 1076, 621, 621, 2616, 2839, 621, 2759,
	2870, 944, 1791, 2868, 946, 635, 3477, 1046, 633, 1059,
	149, 130, 152, 137, 129, 639, 150, 151, 604, 1287,
	2844, 1530, 167, 2122, 2558, 621, 1474, 3478, 1700, 2518,
	602, 173, 138, 947, 3283, 2160, 3284, 2039, 2543, 1021,
	2204, 2199, 3507, 1726, 1108, 2832, 141, 139, 134, 135,
	136, 140, 622, 2833, 1103, 189, 1091, 189, 131, 2560,
	189, 1084, 1052, 3041, 1050, 1089, 3040, 142, 2222, 2219,
	599, 2220, 1701, 2221, 1702, 1090, 2037, 2038, 2841, 613,
	1077, 1085, 1086, 1096, 2840, 1027, 1026, 1097, 2203, 2201,
	638, 3235, 638, 638, 609, 2205, 957, 1102, 987, 2163,
	958, 949, 3098, 941, 3037, 2052, 958, 996, 1477, 3451,
	943, 942, 638, 189, 2211, 2207, 2209, 2210, 2208, 2212,
	2213, 1095, 985, 995, 3526, 994, 915, 993, 2759, 1611,
	2202, 992, 622, 3483, 1731, 1327, 1327, 991, 997, 990,
	1340, 989, 984, 1286, 1283, 1284, 1285, 1290, 1292, 1289,
	158, 1288, 622, 948, 933, 2617, 1080, 2650, 931, 947,
	933, 1282, 1632, 2246, 2564, 589, 933, 591, 605, 969,
	624, 970, 623, 595, 1744, 593, 597, 606, 598, 2136,
	592, 910, 603, 2561, 2189, 594, 607, 608, 611, 614,
	615, 616, 612, 610, 1348, 601, 625, 2188, 622, 622,
	1338, 1740, 622, 1272, 3331, 1066, 1014, 1072, 1073, 1074,
	1075, 2509, 955, 1104, 925, 919, 917, 3036, 949, 1045,
	2577, 2260, 2778, 2037, 2038, 2477, 2542, 1605, 153, 622,
	1110, 1111, 1330, 1331, 1332, 1333, 1604, 3519, 1603, 2528,
	2512, 2182, 1344, 1529, 988, 815, 815, 1267, 1286, 1283,
	1284, 1285, 1290, 1292, 1289, 2545, 1288, 1006, 1741, 1601,
	925, 919, 917, 969, 976, 3411, 1282, 1005, 986, 1631,
	2389, 2391, 3411, 2953, 587, 582, 3452, 2555, 3320, 948,
	2554, 2126, 1340, 1049, 2180, 2809, 2810, 1334, 2989, 146,
	1013, 2419, 147, 1328, 1329, 3410, 3442, 3092, 2813, 2860,
	1268, 1269, 3410, 3092, 2971, 83, 2459, 2424, 2361, 1857,
	1712, 1711, 1713, 1714, 1715, 3000, 3001, 815, 1521, 2532,
	1429, 2127, 159, 3069, 1061, 1464, 2567, 2567, 2125, 171,
	118, 2566, 2566, 2081, 1327, 1324, 1730, 976, 2735, 189,
	3441, 2247, 1878, 638, 638, 893, 1734, 88, 1732, 1733,
	1093, 1735, 1736, 1498, 1500, 1065, 1879, 1107, 1079, 189,
	88, 88, 2128, 2531, 3345, 975, 1358, 88, 1359, 1081,
	179, 113, 2124, 1319, 1320, 1322, 1321, 1323, 1324, 638,
	999, 1048, 189, 1753, 3032, 1480, 2809, 2810, 2965, 1484,
	2200, 1800, 1481, 2905, 638, 877, 948, 1737, 1535, 2813,
	189, 976, 2602, 1478, 626, 1058, 1055, 1362, 976, 1869,
	1465, 160, 165, 162, 168, 169, 170, 172, 174, 175,
	176, 177, 1067, 2501, 918, 619, 2177, 178, 180, 181,
	182, 3487, 1869, 1296, 2278, 3133, 2390, 638, 975, 3007,
	620, 1295, 1296, 114, 969, 972, 973, 1297, 933, 3006,
	1340, 2167, 966, 970, 2175, 3517, 638, 638, 3518, 638,
	3516, 638, 638, 1641, 638, 638, 638, 638, 638, 638,
	918, 1482, 1483, 2582, 1465, 98, 99, 1340, 2179, 1640,
	1340, 638, 1340, 189, 1727, 1876, 1728, 1630, 1471, 1729,
	2172, 1458, 1435, 1436, 1437, 1438, 1439, 1094, 1064, 2172,
	987, 985, 975, 189, 1012, 101, 3479, 3375, 1009, 975,
	1638, 1827, 1297, 3313, 979, 969, 638, 1051, 189, 981,
	1608, 1609, 1610, 982, 980, 1828, 1325, 1326, 1826, 2176,
	1754, 3264, 638, 2990, 189, 889, 1720, 1673, 2174, 627,
	1676, 1499, 1678, 3066, 976, 3067, 1749, 3521, 1695, 3243,
	189, 1297, 3376, 1468, 3242, 976, 2584, 189, 3314, 874,
	3233, 1479, 2313, 1502, 876, 1718, 189, 189, 189, 189,
	189, 189, 189, 189, 189, 638, 3527, 3083, 1636, 1617,
	1707, 3082, 1294, 3014, 1295, 1296, 2267, 1685, 1686, 1624,
	1526, 1527, 3013, 1691, 1692, 3003, 2266, 1646, 2786, 1647,
	1719, 1649, 1651, 1635, 1975, 1655, 1657, 1659, 1661, 1663,
	2774, 1297, 2483, 1600, 1634, 1634, 2482, 1817, 1819, 1820,
	2252, 2253, 2254, 2594, 2593, 2592, 2586, 2132, 2590, 1717,
	2585, 1721, 2583, 1677, 1615, 1613, 1497, 2588, 1705, 1627,
	1485, 1818, 1704, 1614, 1706, 975, 2587, 1294, 1703, 1295,
	1296, 969, 972, 973, 1693, 933, 975, 1687, 1681, 966,
	970, 979, 969, 3528, 2589, 2591, 981, 1684, 1497, 1683,
	982, 980, 1682, 1755, 1756, 1874, 818, 819, 820, 1653,
	965, 2997, 627, 1530, 1875, 1297, 1294, 1760, 1295, 1296,
	1745, 983, 1757, 2836, 1767, 1768, 1769, 1271, 3480, 1761,
	3340, 1763, 1764, 1765, 1766, 1313, 1606, 2576, 1770, 1315,
	1316, 1317, 1318, 1319, 1320, 1322, 1321, 1323, 1324, 952,
	1782, 122, 951, 950, 1297, 2466, 627, 1506, 1314, 1315,
	1316, 1317, 1318, 1319, 1320, 1322, 1321, 1323, 1324, 638,
	638, 1759, 2148, 2147, 2146, 2145, 1294, 638, 1295, 1296,
	2410, 3506, 189, 1314, 1315, 1316, 1317, 1318, 1319, 1320,
	1322, 1321, 1323, 1324, 3339, 1781, 1313, 2144, 2143, 1297,
	3467, 1497, 2964, 1507, 1796, 1317, 1318, 1319, 1320, 1322,
	1321, 1323, 1324, 1780, 3317, 1297, 39, 3316, 2317, 1314,
	1315, 1316, 1317, 1318, 1319, 1320, 1322, 1321, 1323, 1324,
	638, 1293, 1497, 1510, 1852, 1852, 2410, 3404, 3491, 1497,
	1340, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1299, 3315,
	1294, 638, 1295, 1296, 2410, 3383, 1497, 1340, 1872, 2604,
	1297, 1830, 1873, 1832, 1833, 1834, 1835, 1836, 1837, 1838,
	1839, 1840, 1841, 1842, 1843, 1844, 2410, 3379, 1313, 2878,
	2259, 3238, 638, 638, 1497, 3366, 1497, 1823, 1464, 1294,
	3222, 1295, 1296, 3050, 3330, 3333, 1936, 3221, 1821, 1509,
	1338, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1321,
	1323, 1324, 1975, 1831, 3246, 1497, 1972, 1870, 104, 1297,
	2410, 3234, 1293, 3132, 1968, 1974, 3130, 3079, 1930, 103,
	2275, 102, 1983, 1463, 1294, 1462, 1295, 1296, 1941, 813,
	97, 1461, 1932, 95, 1982, 1497, 1981, 3050, 1497, 1997,
	1294, 2315, 1295, 1296, 96, 1297, 2410, 3048, 1313, 1824,
	3011, 1293, 1497, 79, 2996, 1799, 1498, 2004, 1850, 1850,
	1797, 1980, 2845, 1465, 1798, 189, 1853, 1788, 1789, 1918,
	638, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1321,
	1323, 1324, 1297, 2842, 95, 1294, 1829, 1295, 1296, 1497,
	2028, 97, 2777, 2274, 189, 96, 2005, 638, 2776, 1497,
	3269, 1971, 1941, 2492, 2305, 104, 2480, 189, 2172, 1497,
	3268, 638, 1856, 1460, 1983, 189, 103, 189, 102, 189,
	189, 2194, 1863, 1865, 1297, 2193, 1982, 2034, 2049, 3489,
	1497, 2021, 97, 2022, 638, 2969, 1497, 2326, 1497, 3226,
	1880, 1881, 1882, 1883, 1294, 2016, 1295, 1296, 1985, 1986,
	1497, 3225, 2090, 1980, 1894, 2767, 2766, 2062, 1910, 1899,
	1900, 1901, 1902, 1912, 1903, 1904, 1905, 1917, 1913, 1906,
	1907, 1914, 1915, 1916, 1908, 1909, 1911, 1297, 98, 99,
	1294, 1784, 1295, 1296, 2763, 2764, 1497, 1297, 1750, 638,
	2133, 1497, 1297, 2763, 2762, 3058, 2743, 1716, 98, 99,
	2027, 2044, 2045, 1984, 2434, 1497, 1987, 1988, 3421, 1497,
	2246, 2541, 1596, 2522, 2515, 2516, 638, 1294, 1708, 1295,
	1296, 2455, 638, 2410, 2409, 2270, 1497, 2099, 2100, 2101,
	2102, 2094, 1698, 2095, 2096, 2097, 2098, 1694, 2406, 1690,
	2084, 2744, 1689, 890, 2003, 2455, 2066, 2015, 1688, 2105,
	2106, 2107, 2108, 97, 1297, 1855, 1497, 2700, 1297, 1294,
	2026, 1295, 1296, 1596, 1595, 2746, 1541, 1540, 2964, 638,
	2161, 3419, 1497, 2029, 638, 2115, 3417, 1497, 638, 638,
	1297, 2088, 1508, 2741, 2456, 1297, 2085, 1105, 2519, 2047,
	2497, 2426, 924, 2121, 2458, 2072, 923, 2071, 2070, 2426,
	2757, 2758, 2087, 2730, 2086, 103, 2089, 2742, 2456, 2173,
	2966, 2270, 1294, 2246, 1295, 1296, 189, 3371, 2246, 3344,
	2410, 2433, 1294, 189, 1295, 1296, 2434, 1294, 2131, 1295,
	1296, 2925, 189, 189, 2765, 2673, 189, 2073, 189, 3481,
	2748, 2270, 3292, 1497, 2326, 189, 3015, 2302, 2301, 2172,
	2116, 2155, 189, 2042, 2166, 2111, 2112, 2169, 1501, 2170,
	2134, 2130, 2142, 2434, 3290, 1497, 1297, 2172, 2158, 3287,
	1497, 2964, 1297, 2006, 1293, 977, 2434, 1855, 189, 1801,
	2165, 1739, 2168, 638, 978, 2116, 2164, 1528, 2265, 1294,
	960, 1295, 1296, 1294, 1634, 1295, 1296, 3016, 3017, 3018,
	2187, 2190, 2789, 959, 89, 2191, 2192, 2756, 1313, 3447,
	879, 1309, 3386, 1310, 1297, 1294, 3257, 1295, 1296, 2759,
	1294, 2186, 1295, 1296, 1504, 3223, 3144, 1311, 1325, 1326,
	1308, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1321,
	1323, 1324, 2197, 3031, 3028, 3009, 2888, 2263, 1340, 2489,
	1983, 2268, 2887, 1598, 2271, 1050, 2273, 3328, 2114, 2834,
	1297, 2280, 1982, 2791, 1981, 2282, 2283, 2284, 2256, 2787,
	2258, 2523, 2110, 2104, 2103, 2290, 2291, 2292, 2293, 2294,
	2295, 2296, 2297, 2298, 2299, 1723, 1297, 1669, 89, 2264,
	1629, 2232, 2233, 2225, 1625, 1823, 2235, 1297, 3273, 1497,
	1594, 1294, 115, 1295, 1296, 2236, 2285, 1294, 2262, 1295,
	1296, 2306, 2307, 2308, 2309, 2310, 2838, 2312, 2488, 1297,
	2257, 2314, 3258, 2300, 1297, 2319, 2320, 2129, 2321, 2019,
	2745, 2324, 2982, 2325, 2976, 2977, 3019, 2328, 1670, 1671,
	1672, 2332, 1297, 2272, 2984, 2337, 2338, 2339, 2340, 1294,
	2244, 1295, 1296, 3501, 1786, 1297, 3499, 3474, 2351, 2981,
	2354, 2355, 3352, 1665, 1297, 3278, 2489, 1824, 2357, 2359,
	2940, 1497, 2979, 2783, 2255, 2362, 2363, 2364, 2365, 2366,
	1297, 2933, 1497, 3020, 3021, 3022, 2373, 2374, 1297, 2375,
	2782, 2781, 2378, 2380, 2028, 1294, 2382, 1295, 1296, 189,
	2700, 1297, 2502, 2930, 1497, 2226, 2394, 189, 2928, 1497,
	1666, 1667, 1668, 1852, 2277, 2722, 1787, 2720, 638, 2719,
	2723, 1294, 2721, 1295, 1296, 2718, 2893, 1497, 2724, 638,
	2443, 2444, 1294, 3348, 1295, 1296, 3259, 2033, 2025, 2876,
	1497, 1505, 2690, 2692, 2970, 2678, 2677, 3312, 2381, 1497,
	1297, 2693, 2393, 189, 1294, 1297, 1295, 1296, 189, 1294,
	3123, 1295, 1296, 3125, 2379, 1497, 1297, 2957, 2311, 3114,
	2430, 3113, 2358, 1497, 2960, 2956, 894, 1294, 2687, 1295,
	1296, 1738, 39, 865, 895, 2341, 1497, 2761, 2473, 1297,
	1294, 2448, 1295, 1296, 2450, 1297, 2493, 1878, 2396, 1294,
	2398, 1295, 1296, 1016, 1015, 2749, 1270, 2411, 2853, 2753,
	95, 1879, 2488, 95, 2570, 1294, 2752, 1295, 1296, 3112,
	97, 96, 638, 1294, 96, 1295, 1296, 2529, 189, 123,
	2962, 104, 1297, 97, 2935, 189, 1294, 2407, 1295, 1296,
	3230, 2420, 103, 3513, 102, 2449, 2779, 1850, 1471, 638,
	2754, 3033, 2383, 97, 2395, 2750, 638, 2044, 2045, 2229,
	2751, 3426, 1297, 3329, 3253, 638, 1297, 2760, 2476, 2478,
	2403, 2408, 2447, 2931, 2514, 1297, 1465, 2423, 2030, 2333,
	1497, 1340, 1297, 2469, 2453, 1294, 1297, 1295, 1296, 2218,
	1294, 1297, 1295, 1296, 189, 189, 189, 189, 189, 2538,
	2217, 1294, 2460, 1295, 1296, 2457, 102, 1495, 1491, 2491,
	2467, 3300, 902, 903, 2494, 2495, 2903, 2121, 189, 189,
	2676, 2216, 1492, 2215, 1294, 2470, 1295, 1296, 2675, 2942,
	1294, 2481, 1295, 1296, 1297, 2214, 2250, 3299, 3281, 189,
	3131, 2536, 104, 1495, 1491, 2490, 2899, 2023, 2024, 1494,
	2885, 1493, 3129, 103, 103, 102, 3128, 1297, 1492, 2884,
	638, 2503, 2504, 2505, 2498, 3121, 2881, 1294, 2499, 1295,
	1296, 2484, 3029, 1297, 2961, 2377, 2606, 2607, 2608, 2609,
	2610, 1297, 2959, 1488, 1489, 1494, 2792, 1493, 2156, 2535,
	1612, 2524, 2525, 901, 1617, 2615, 104, 1294, 2597, 1295,
	1296, 1294, 2580, 1295, 1296, 3120, 1297, 103, 638, 2534,
	1294, 2950, 1295, 1296, 2426, 3102, 2406, 1294, 2376, 1295,
	1296, 1294, 2618, 1295, 1296, 2303, 1294, 2595, 1295, 1296,
	2017, 2599, 3503, 3502, 3503, 1522, 2611, 1514, 2559, 108,
	109, 2372, 3502, 3318, 2562, 2995, 638, 2578, 892, 3,
	91, 1, 2579, 2999, 638, 3436, 2568, 2371, 2628, 2569,
	2630, 600, 2007, 1469, 3475, 2370, 3432, 3433, 1709, 1294,
	1699, 1295, 1296, 3061, 1942, 3254, 2641, 2642, 2643, 2644,
	2795, 2162, 3027, 2119, 968, 638, 148, 2596, 2652, 1297,
	2369, 2082, 1294, 2657, 1295, 1296, 2083, 3399, 112, 189,
	2654, 926, 111, 638, 971, 1078, 647, 2157, 1294, 3051,
	1295, 1296, 2474, 2091, 1547, 1545, 1294, 638, 1295, 1296,
	1546, 1340, 2709, 1544, 638, 638, 1340, 189, 189, 189,
	189, 189, 1971, 1549, 1971, 2620, 1548, 2062, 2626, 189,
	2727, 1294, 2861, 1295, 1296, 189, 2304, 189, 2904, 2712,
	189, 189, 189, 1790, 634, 2446, 2657, 628, 186, 1297,
	1536, 1515, 881, 2917, 1749, 2062, 2062, 2062, 2062, 2062,
	2598, 1010, 2729, 2368, 2653, 2697, 2655, 2656, 2680, 590,
	2768, 2703, 2195, 596, 1345, 2062, 2703, 1785, 2062, 2674,
	2461, 2681, 921, 2668, 913, 189, 2018, 2397, 2706, 2636,
	2637, 2638, 2639, 2640, 920, 3231, 2708, 2679, 638, 900,
	2954, 1340, 906, 906, 2686, 2688, 638, 2682, 2694, 2695,
	2413, 189, 2691, 2684, 1294, 2672, 1295, 1296, 3311, 2714,
	2715, 2713, 2717, 3122, 2716, 189, 883, 3384, 2471, 2731,
	1511, 2815, 2732, 2367, 2924, 2276, 2725, 882, 1867, 2733,
	1335, 2669, 2670, 2671, 189, 1297, 2059, 189, 3097, 1816,
	656, 655, 98, 99, 653, 2711, 2855, 2399, 2739, 2427,
	1300, 2794, 803, 2769, 2387, 2772, 2773, 2771, 1297, 2770,
	1523, 2438, 2436, 2435, 2227, 2067, 2872, 2873, 2874, 2978,
	1297, 2877, 2879, 2974, 1294, 2823, 1295, 1296, 1297, 3428,
	2061, 2057, 1297, 2405, 754, 2886, 2822, 1297, 753, 665,
	2890, 2891, 2892, 2894, 2895, 2896, 2897, 657, 2814, 2898,
	2121, 2900, 2901, 2902, 649, 752, 2906, 2907, 2908, 2909,
	2910, 2911, 2912, 2913, 2914, 2915, 2829, 751, 638, 2356,
	2992, 2821, 3412, 2849, 2922, 2544, 2835, 2926, 2848, 2927,
	2929, 2546, 2932, 2934, 2846, 2936, 2937, 2938, 2939, 1297,
	2793, 2472, 2350, 2945, 2856, 2863, 2864, 189, 2865, 2857,
	2866, 2867, 2831, 2869, 2349, 2871, 1278, 2875, 1487, 643,
	2919, 939, 2348, 1297, 2858, 3335, 2347, 2923, 2249, 2882,
	1294, 2346, 1295, 1296, 1486, 1897, 1898, 3342, 2967, 2968,
	2803, 3045, 2972, 2784, 2851, 2852, 2520, 1297, 2149, 65,
	43, 3306, 3372, 1294, 750, 1295, 1296, 747, 1297, 3099,
	3100, 3101, 2648, 189, 2649, 1294, 3355, 1295, 1296, 3356,
	746, 3357, 1297, 1294, 1925, 1295, 1296, 1294, 1297, 1295,
	1296, 1275, 1294, 2345, 1295, 1296, 3449, 2943, 2944, 1792,
	90, 34, 189, 2948, 2946, 33, 32, 31, 30, 25,
	24, 2062, 2951, 2958, 1297, 23, 184, 2344, 22, 21,
	27, 189, 20, 2963, 189, 189, 189, 2983, 19, 1297,
	2980, 18, 2806, 3470, 638, 638, 2973, 3512, 117, 52,
	123, 2343, 2985, 49, 1294, 47, 1295, 1296, 1297, 125,
	124, 50, 2342, 166, 1297, 2987, 2988, 3049, 2823, 3034,
	3035, 46, 1053, 2993, 2994, 2986, 2336, 44, 1294, 2822,
	1295, 1296, 2335, 29, 3055, 3056, 28, 17, 16, 15,
	14, 638, 638, 638, 638, 3010, 1297, 3012, 13, 12,
	3004, 3005, 1294, 814, 1295, 1296, 81, 1297, 2334, 3068,
	11, 7, 3072, 1294, 6, 1295, 1296, 37, 36, 163,
	35, 1795, 164, 2331, 26, 1297, 4, 1294, 2507, 1295,
	1296, 2151, 0, 1294, 0, 1295, 1296, 0, 0, 0,
	3084, 3057, 2330, 0, 1297, 183, 0, 0, 2329, 0,
	0, 1297, 3038, 0, 0, 3088, 3042, 3043, 3044, 1294,
	0, 1295, 1296, 0, 0, 0, 1297, 3096, 0, 0,
	0, 0, 0, 1297, 1294, 3103, 1295, 1296, 0, 0,
	2327, 0, 0, 878, 0, 81, 0, 0, 3086, 0,
	0, 2323, 3078, 1294, 3074, 1295, 1296, 3073, 189, 1294,
	0, 1295, 1296, 0, 878, 0, 0, 0, 0, 2322,
	0, 0, 0, 0, 0, 0, 0, 1340, 0, 938,
	0, 0, 638, 0, 638, 3117, 3095, 0, 2318, 0,
	0, 1294, 0, 1295, 1296, 2316, 0, 0, 0, 0,
	1852, 0, 1294, 0, 1295, 1296, 0, 3138, 0, 0,
	2281, 0, 0, 0, 0, 0, 167, 2269, 0, 39,
	1294, 0, 1295, 1296, 0, 173, 0, 3140, 0, 3142,
	3118, 0, 3127, 3126, 3136, 0, 0, 2703, 0, 1294,
	3134, 1295, 1296, 0, 638, 0, 1294, 0, 1295, 1296,
	0, 0, 0, 0, 0, 2706, 3245, 189, 0, 2706,
	638, 1294, 3150, 1295, 1296, 3252, 0, 0, 1294, 3232,
	1295, 1296, 0, 638, 0, 1298, 0, 0, 0, 3147,
	3148, 0, 0, 0, 0, 0, 3262, 3263, 0, 3265,
	3228, 3266, 3267, 0, 3227, 0, 3270, 3271, 3272, 0,
	3274, 3277, 3244, 3229, 1353, 0, 0, 0, 0, 0,
	1852, 0, 3256, 0, 0, 3249, 3286, 3288, 3289, 3291,
	3293, 3294, 3296, 3248, 638, 0, 3236, 0, 638, 638,
	0, 0, 0, 0, 1850, 0, 2439, 2442, 2443, 2444,
	2440, 3146, 2441, 2445, 158, 0, 3239, 3240, 3241, 0,
	0, 0, 0, 3280, 0, 0, 0, 638, 0, 0,
	3326, 0, 3282, 0, 0, 0, 3285, 0, 0, 0,
	3310, 0, 0, 0, 0, 3275, 3303, 3276, 3304, 3301,
	3302, 0, 3322, 0, 0, 2439, 2442, 2443, 2444, 2440,
	0, 2441, 2445, 0, 3319, 2976, 2977, 0, 0, 0,
	0, 0, 0, 3325, 0, 0, 0, 0, 0, 0,
	0, 0, 3321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 638, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 3279, 189, 0, 0, 0, 0, 0, 0, 0,
	0, 3327, 0, 0, 0, 0, 0, 0, 0, 0,
	638, 189, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3351, 0, 0, 0,
	0, 0, 3343, 0, 0, 3346, 0, 3338, 0, 0,
	0, 3341, 0, 0, 39, 0, 3367, 0, 0, 0,
	0, 0, 3368, 3369, 0, 0, 159, 0, 0, 0,
	0, 638, 3350, 171, 3334, 0, 0, 0, 1513, 0,
	3360, 1340, 0, 638, 3380, 3361, 0, 0, 3362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3370, 0, 3377, 0, 0, 638, 1983, 0,
	3406, 3407, 0, 0, 179, 1599, 0, 0, 3385, 0,
	0, 0, 0, 0, 3416, 3418, 3420, 3413, 3414, 638,
	39, 3398, 3387, 3390, 3395, 3392, 3391, 3389, 3394, 3393,
	0, 2703, 0, 189, 638, 3382, 3256, 3401, 0, 3448,
	0, 0, 0, 3424, 0, 160, 165, 162, 168, 169,
	170, 172, 174, 175, 176, 177, 3445, 3435, 0, 3440,
	3427, 178, 180, 181, 182, 0, 0, 3455, 0, 3413,
	3414, 0, 0, 0, 3453, 0, 0, 0, 638, 3466,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3464, 0, 0, 3469, 0, 0, 0,
	638, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 3488, 3490, 3492, 0, 1348, 1749, 638, 3484,
	638, 1113, 0, 1113, 1113, 3482, 1852, 3485, 0, 3493,
	3494, 3498, 1751, 0, 0, 3500, 0, 0, 3496, 0,
	0, 0, 0, 0, 3511, 3508, 0, 3413, 3414, 0,
	0, 0, 3514, 0, 0, 0, 0, 3520, 3522, 0,
	3523, 3524, 0, 0, 0, 0, 0, 0, 0, 0,
	878, 1337, 1342, 1343, 0, 1346, 0, 1347, 1349, 1350,
	1351, 1852, 1354, 1355, 1357, 1357, 3530, 1357, 1361, 1361,
	1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372,
	1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382,
	1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392,
	1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402,
	1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 1426, 1427, 3531, 3532, 0, 3276, 1428,
	1850, 1430, 1431, 1432, 1433, 1434, 0, 3497, 0, 0,
	0, 0, 0, 0, 1361, 1361, 1361, 1361, 1361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1440, 1441,
	1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451,
	1452, 1453, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 1467,
	0, 0, 3529, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 1812, 1813, 1814, 0, 0, 0, 0, 0, 0,
	0, 0, 1473, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 878, 0, 0, 0, 0, 0, 878, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1858,
	1859, 3468, 0, 0, 1861, 0, 0, 0, 1866, 0,
	0, 1564, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 0, 0, 0, 0, 1919,
	1920, 1921, 1922, 1923, 1924, 1926, 0, 1931, 0, 1933,
	1934, 1935, 0, 1937, 1938, 1939, 0, 1945, 1946, 1947,
	1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957,
	1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967,
	0, 1969, 0, 1976, 1977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1989, 1990, 1991,
	1992, 1993, 1994, 1995, 1996, 0, 1998, 1999, 2000, 2001,
	2002, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1564, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 184, 2040, 2041, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 123,
	0, 0, 2079, 0, 0, 0, 1113, 0, 0, 0,
	0, 0, 166, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 0,
	0, 0, 0, 0, 0, 2468, 0, 0, 0, 0,
	0, 2117, 0, 0, 0, 0, 0, 0, 163, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1552, 0, 0, 0, 183, 0, 3168, 3170, 3169, 3187,
	3188, 3189, 3190, 3191, 3192, 3193, 704, 1578, 1581, 1582,
	1583, 1584, 1585, 1586, 798, 1587, 1588, 1589, 1590, 1591,
	1566, 1567, 1568, 1569, 1550, 1551, 1579, 0, 1553, 0,
	1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 0,
	0, 1563, 1570, 1571, 1572, 1573, 0, 1574, 1575, 1576,
	1577, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1113, 1113, 617, 1565, 0, 0, 0, 0, 637, 81,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 0, 0, 0, 0,
	0, 0, 0, 0, 173, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	637, 0, 1578, 1581, 1582, 1583, 1584, 1585, 1586, 0,
	1587, 1588, 1589, 1590, 1591, 1566, 1567, 1568, 1569, 1550,
	1551, 1579, 0, 1553, 0, 1554, 1555, 1556, 1557, 1558,
	1559, 1560, 1561, 1562, 0, 0, 1563, 1570, 1571, 1572,
	1573, 0, 1574, 1575, 1576, 1577, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3174, 0, 0, 0, 0, 0,
	0, 906, 0, 158, 0, 0, 2279, 0, 0, 3182,
	3183, 0, 0, 0, 0, 0, 0, 2286, 2287, 2288,
	2289, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1353, 0, 0, 0, 0, 0, 0, 0,
	0, 770, 0, 683, 774, 685, 771, 772, 0, 681,
	684, 773, 0, 0, 0, 0, 1580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 702, 703, 3167,
	3171, 3172, 3173, 3184, 3185, 3186, 3194, 3196, 735, 3195,
	3197, 3198, 3199, 3202, 3203, 3204, 3205, 3200, 3201, 3206,
	3151, 3155, 3152, 3153, 3154, 3166, 3156, 3157, 3158, 3159,
	3160, 3161, 3162, 3163, 3164, 3165, 3207, 3208, 3209, 3210,
	3211, 3212, 3177, 3181, 3180, 3178, 3179, 3175, 3176, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	938, 775, 0, 776, 0, 159, 780, 0, 0, 1513,
	782, 781, 171, 783, 749, 748, 0, 0, 777, 778,
	0, 779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 938, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 179, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3213, 3214, 3215, 3216,
	3217, 3218, 3219, 3220, 160, 165, 162, 168, 169, 170,
	172, 174, 175, 176, 177, 0, 80, 41, 42, 82,
	178, 180, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 86, 0, 0, 0,
	45, 71, 72, 0, 69, 73, 0, 0, 0, 0,
	0, 0, 0, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 58, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2575, 2251,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 1266, 637, 637, 0, 0, 0, 0,
	0, 2600, 2601, 0, 0, 2603, 0, 0, 2605, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 2261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2612, 2613,
	2614, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2619, 0, 1339, 2621, 2622, 2623, 0, 0, 0, 2624,
	2625, 0, 0, 1945, 2627, 0, 0, 2629, 0, 0,
	2631, 2632, 2633, 2634, 0, 0, 0, 0, 2635, 1945,
	1945, 1945, 1945, 1945, 0, 0, 0, 0, 0, 0,
	0, 0, 48, 51, 54, 53, 56, 0, 68, 0,
	0, 77, 74, 0, 2658, 2659, 2660, 2661, 2662, 2663,
	0, 0, 0, 2664, 2665, 0, 2666, 0, 2667, 0,
	0, 0, 0, 0, 57, 85, 84, 0, 0, 66,
	67, 55, 0, 0, 0, 0, 1472, 75, 76, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2360, 0, 0, 0, 0, 0,
	0, 0, 0, 2698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 59, 60,
	0, 61, 62, 63, 64, 0, 2392, 0, 2728, 0,
	0, 0, 585, 0, 1339, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 878, 0, 0, 0, 0, 0,
	868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2431, 2432, 0, 0, 0,
	0, 0, 0, 0, 2060, 0, 0, 878, 2451, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2790, 0,
	0, 934, 0, 0, 0, 637, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	83, 0, 0, 0, 0, 0, 1593, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1602, 0, 0, 0,
	0, 0, 0, 0, 0, 906, 0, 0, 0, 0,
	0, 2880, 0, 0, 0, 0, 0, 2527, 0, 637,
	0, 1628, 0, 0, 0, 2889, 0, 0, 0, 1637,
	0, 0, 1339, 1639, 0, 0, 1642, 1643, 637, 637,
	0, 637, 88, 637, 637, 0, 637, 637, 637, 637,
	637, 637, 0, 0, 0, 0, 0, 0, 0, 1339,
	1674, 1675, 1339, 637, 1339, 0, 1680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1742, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3030, 0, 0, 2645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3054, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2060, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2707, 0, 81, 0, 0, 2060, 2060,
	2060, 2060, 2060, 3075, 0, 3076, 0, 0, 3077, 0,
	0, 3080, 3081, 0, 0, 0, 0, 0, 2060, 0,
	3085, 2060, 0, 0, 756, 0, 0, 0, 0, 0,
	3087, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 637, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 3104, 0, 0, 3105, 0, 3106, 3107, 0,
	3108, 0, 3109, 0, 0, 0, 0, 3110, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 187, 0, 0,
	586, 0, 0, 0, 2812, 0, 0, 0, 0, 0,
	0, 0, 3135, 0, 2820, 0, 0, 0, 586, 0,
	0, 0, 637, 3143, 0, 0, 3145, 0, 0, 1054,
	0, 1060, 1339, 888, 1062, 0, 0, 0, 3149, 0,
	0, 1860, 0, 637, 0, 0, 0, 0, 0, 1339,
	907, 907, 0, 0, 0, 0, 3224, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 816,
	0, 0, 0, 804, 817, 818, 819, 820, 805, 0,
	0, 806, 807, 0, 808, 0, 0, 3309, 0, 0,
	0, 0, 637, 0, 0, 0, 0, 0, 813, 821,
	822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 2060, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 2824, 2825, 2991, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 0, 0, 2139, 2140,
	2141, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3349, 0, 0, 0, 0, 0, 0, 637, 2826,
	0, 0, 0, 0, 637, 1637, 0, 0, 1637, 0,
	1637, 0, 0, 0, 3363, 0, 2171, 3364, 0, 3365,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1525, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 1542, 0, 637, 0, 0, 0,
	637, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2827, 2828, 0, 0, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3111, 0, 3115, 3116, 0,
	0, 0, 0, 3446, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2707, 0, 81, 0, 2707, 0, 0, 1679, 0, 636,
	0, 0, 0, 0, 3461, 0, 3462, 0, 3463, 0,
	0, 0, 770, 0, 0, 774, 0, 771, 772, 0,
	0, 0, 773, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 1724, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 930,
	0, 937, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3237, 0, 0, 1758, 0, 0, 586, 0, 586,
	0, 1762, 586, 0, 0, 0, 3509, 0, 3510, 0,
	0, 0, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 0,
	1339, 0, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 2707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1363, 1364, 1365, 1366, 1367,
	1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377,
	1378, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390,
	1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400,
	1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410,
	1411, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421,
	1422, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448,
	1449, 1450, 1451, 1452, 1453, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3336,
	637, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 637, 0, 0, 0, 0, 0, 81, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1341, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2465, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3381, 0,
	0, 586, 0, 81, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 637, 0, 0, 0, 0, 0,
	0, 888, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 637, 0, 0, 586, 0, 0, 0, 637, 0,
	0, 0, 1637, 1637, 0, 0, 0, 637, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1339, 2537, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3465, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 1341, 0, 1341, 586, 0, 0, 0, 0,
	0, 2046, 637, 0, 0, 0, 0, 0, 0, 2050,
	0, 2053, 0, 0, 1804, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1748, 0, 0, 0,
	637, 0, 0, 1115, 0, 1115, 1115, 0, 0, 0,
	0, 0, 586, 0, 0, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 1273, 0, 0, 1771, 1772,
	586, 586, 586, 586, 586, 586, 586, 0, 637, 0,
	0, 0, 0, 0, 0, 0, 637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	0, 0, 0, 1339, 0, 0, 637, 637, 1339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 0, 0, 0, 2206, 0, 0,
	0, 0, 0, 0, 0, 0, 2223, 2224, 2775, 0,
	2228, 0, 0, 0, 0, 0, 0, 0, 0, 2231,
	0, 0, 0, 0, 0, 0, 2234, 0, 0, 0,
	637, 0, 0, 1339, 0, 0, 0, 0, 637, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 2237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1475, 1476, 0, 2854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1341, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 0, 1519, 0, 0, 0, 0, 184, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1537, 2513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 123, 0, 145, 0, 0, 0, 0, 0, 0,
	637, 0, 0, 0, 166, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	930, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 156, 0, 0, 0, 1645,
	1645, 144, 1645, 0, 1645, 1645, 0, 1654, 1645, 1645,
	1645, 1645, 1645, 0, 0, 0, 0, 0, 0, 0,
	163, 0, 0, 164, 930, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1696, 0, 0,
	0, 0, 1620, 1621, 155, 154, 183, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1722,
	0, 0, 0, 2998, 0, 0, 888, 0, 0, 0,
	0, 0, 0, 0, 0, 1746, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 1748, 586, 0, 586,
	0, 586, 2069, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 637, 637, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1115, 0,
	0, 0, 0, 0, 0, 0, 89, 0, 0, 816,
	0, 0, 2452, 804, 817, 818, 819, 820, 805, 0,
	0, 806, 807, 0, 808, 149, 1622, 152, 0, 1619,
	0, 150, 151, 637, 637, 637, 637, 167, 813, 821,
	822, 0, 0, 0, 0, 0, 173, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2500, 0, 0, 2824, 2825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2549, 2550,
	2551, 2552, 2553, 0, 0, 0, 0, 0, 0, 1339,
	0, 0, 1115, 1115, 637, 158, 637, 0, 586, 0,
	1793, 0, 1804, 2563, 0, 586, 0, 0, 0, 2826,
	0, 0, 0, 0, 586, 586, 0, 0, 586, 0,
	2230, 0, 0, 2571, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 586, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 637, 0, 0, 0,
	586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 637, 153, 1862, 0, 0, 0, 0, 0,
	0, 2827, 2828, 0, 0, 637, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1895, 1896, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1341, 0, 1748, 0, 146, 0, 637, 147, 0, 907,
	637, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 159, 0, 637,
	0, 0, 0, 0, 171, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2020, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1519, 0, 0, 1115, 637, 0,
	0, 0, 0, 0, 0, 0, 160, 165, 162, 168,
	169, 170, 172, 174, 175, 176, 177, 930, 0, 0,
	0, 0, 178, 180, 181, 182, 0, 0, 0, 2780,
	0, 586, 637, 0, 0, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2830,
	0, 0, 937, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 637, 0, 586, 0, 0, 2847, 0,
	586, 2850, 0, 1339, 0, 637, 0, 0, 0, 930,
	0, 0, 0, 0, 0, 937, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 637,
	637, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	184, 637, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1616, 930, 0, 0, 0, 637, 1846, 0, 0,
	586, 1846, 1846, 0, 123, 0, 145, 2506, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 166, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	637, 2947, 0, 0, 0, 0, 0, 0, 156, 0,
	0, 0, 0, 1341, 144, 0, 0, 0, 0, 0,
	0, 0, 637, 0, 0, 0, 586, 586, 586, 586,
	586, 0, 0, 163, 0, 0, 164, 0, 0, 0,
	637, 0, 637, 0, 0, 0, 0, 0, 0, 0,
	586, 586, 0, 0, 0, 1620, 1621, 155, 154, 183,
	0, 0, 0, 0, 0, 0, 2238, 0, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3008, 0, 0, 0,
	0, 0, 816, 0, 1975, 0, 0, 817, 0, 0,
	0, 0, 0, 0, 0, 3023, 0, 1851, 3024, 3025,
	3026, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 149, 1622,
	152, 0, 1619, 0, 150, 151, 0, 0, 0, 0,
	167, 0, 0, 0, 0, 0, 0, 0, 0, 173,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 586, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1341, 0, 0, 0, 0, 1341, 586,
	586, 586, 586, 586, 0, 0, 0, 0, 0, 0,
	0, 2726, 0, 0, 0, 0, 0, 1696, 0, 586,
	0, 0, 586, 2734, 1748, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 158, 0,
	0, 2400, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 586, 0, 0,
	0, 0, 0, 0, 0, 0, 153, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 586, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 907, 0, 0, 0, 0, 0, 0,
	0, 0, 2032, 0, 0, 0, 0, 146, 0, 2521,
	147, 0, 0, 0, 0, 0, 0, 0, 2526, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	159, 0, 0, 0, 0, 0, 0, 171, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 586,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 179, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 586, 0, 0, 0, 160,
	165, 162, 168, 169, 170, 172, 174, 175, 176, 177,
	0, 0, 0, 0, 0, 178, 180, 181, 182, 0,
	0, 0, 0, 0, 586, 3347, 0, 0, 0, 0,
	0, 1846, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 586, 586, 586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 816, 0, 0, 0, 0, 817, 0, 0, 2646,
	0, 0, 0, 0, 0, 0, 1851, 1115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1645, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2683, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1115, 0, 0, 0, 0, 0, 0, 2710, 1645, 823,
	824, 825, 826, 827, 828, 829, 830, 831, 832, 833,
	834, 835, 836, 837, 838, 839, 840, 841, 842, 843,
	844, 845, 846, 847, 848, 849, 850, 851, 852, 853,
	854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
	864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1696, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1341,
	0, 930, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2918, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1696, 0, 0, 2032, 2032, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 586, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3062, 3063, 3064, 3065, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1341, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3400, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1696, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3139, 0, 3141, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1748, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2032, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3247, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3297, 0, 0,
	0, 3297, 3297, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2032, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3374, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3378, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1115, 1115, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3422, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3374, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2032, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	380, 2918, 0, 3430, 1249, 1234, 496, 0, 1177, 1252,
	1146, 1165, 1262, 1168, 1171, 1213, 1125, 1191, 399, 1162,
	1118, 1150, 1120, 1157, 1121, 1148, 1179, 257, 1145, 1236,
	1195, 1251, 350, 254, 1127, 1151, 413, 1167, 196, 1215,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 1258, 354, 1201, 0, 476, 384,
	0, 0, 0, 1181, 1240, 1189, 1227, 1176, 1214, 1135,
	1200, 1253, 1163, 1210, 1254, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 3402, 800, 0, 0,
	0, 0, 3403, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 1159, 1207, 1248, 1160, 1209, 252,
	307, 259, 251, 501, 1259, 1239, 1124, 1188, 1247, 0,
	0, 219, 1250, 1183, 0, 1212, 0, 1265, 1119, 1203,
	0, 1122, 1126, 1261, 1243, 1154, 262, 0, 0, 0,
	0, 0, 0, 0, 1180, 1190, 1224, 1228, 1174, 0,
	0, 0, 0, 0, 0, 0, 1152, 0, 1199, 0,
	0, 0, 1131, 1123, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1178, 0, 0, 0,
	0, 1134, 0, 1153, 1225, 0, 1117, 284, 1128, 385,
	244, 0, 1232, 1242, 1175, 541, 1246, 1173, 1172, 1219,
	1132, 1238, 1166, 349, 1130, 316, 191, 215, 0, 1164,
	395, 441, 453, 1237, 1149, 1158, 242, 1156, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 1198, 1217,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 561, 218, 536, 210, 1129, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	1144, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 1233, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 1222, 1264, 408, 452, 230, 522, 475, 1139,
	1143, 1137, 1204, 1138, 1193, 1194, 1140, 1255, 1256, 1257,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 1226,
	1133, 0, 1141, 1142, 1235, 1244, 1245, 581, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 1197, 190, 211,
	352, 1260, 434, 275, 559, 532, 527, 197, 213, 1136,
	249, 1147, 1155, 0, 1161, 1169, 1170, 1182, 1184, 1185,
	1186, 1187, 1205, 1206, 1208, 1216, 1218, 1221, 1223, 1230,
	1241, 1263, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	556, 557, 286, 516, 545, 0, 0, 362, 1196, 1202,
	365, 268, 291, 306, 1211, 531, 481, 217, 446, 277,
	240, 1229, 1231, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 1192, 1220, 360,
	497, 498, 302, 380, 0, 0, 0, 1249, 1234, 496,
	0, 1177, 1252, 1146, 1165, 1262, 1168, 1171, 1213, 1125,
	1191, 399, 1162, 1118, 1150, 1120, 1157, 1121, 1148, 1179,
	257, 1145, 1236, 1195, 1251, 350, 254, 1127, 1151, 413,
	1167, 196, 1215, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 1258, 354, 1201,
	0, 476, 384, 0, 0, 0, 1181, 1240, 1189, 1227,
	1176, 1214, 1135, 1200, 1253, 1163, 1210, 1254, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 1159, 1207, 1248,
	1160, 1209, 252, 307, 259, 251, 501, 1259, 1239, 1124,
	1188, 1247, 0, 0, 219, 1250, 1183, 0, 1212, 0,
	1265, 1119, 1203, 0, 1122, 1126, 1261, 1243, 1154, 262,
	0, 0, 0, 0, 0, 0, 0, 1180, 1190, 1224,
	1228, 1174, 0, 0, 0, 0, 0, 2735, 0, 1152,
	0, 1199, 0, 0, 0, 1131, 1123, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1178,
	0, 0, 0, 0, 1134, 0, 1153, 1225, 0, 1117,
	284, 1128, 385, 244, 0, 1232, 1242, 1175, 541, 1246,
	1173, 1172, 1219, 1132, 1238, 1166, 349, 1130, 316, 191,
	215, 0, 1164, 395, 441, 453, 1237, 1149, 1158, 242,
	1156, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 1198, 1217, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 1129, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 1144, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 1233, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 1222, 1264, 408, 452, 230,
	522, 475, 1139, 1143, 1137, 1204, 1138, 1193, 1194, 1140,
	1255, 1256, 1257, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 1226, 1133, 0, 1141, 1142, 1235, 1244, 1245,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	1197, 190, 211, 352, 1260, 434, 275, 559, 532, 527,
	197, 213, 1136, 249, 1147, 1155, 0, 1161, 1169, 1170,
	1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216, 1218,
	1221, 1223, 1230, 1241, 1263, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 1196, 1202, 365, 268, 291, 306, 1211, 531, 481,
	217, 446, 277, 240, 1229, 1231, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	1192, 1220, 360, 497, 498, 302, 380, 0, 0, 0,
	1249, 1234, 496, 0, 1177, 1252, 1146, 1165, 1262, 1168,
	1171, 1213, 1125, 1191, 399, 1162, 1118, 1150, 1120, 1157,
	1121, 1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254,
	1127, 1151, 413, 1167, 196, 1215, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	1258, 354, 1201, 0, 476, 384, 0, 0, 0, 1181,
	1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210,
	1254, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	1159, 1207, 1248, 1160, 1209, 252, 307, 259, 251, 501,
	1259, 1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183,
	0, 1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261,
	1243, 1154, 262, 0, 0, 0, 0, 0, 0, 0,
	1180, 1190, 1224, 1228, 1174, 0, 0, 0, 0, 0,
	2696, 0, 1152, 0, 1199, 0, 0, 0, 1131, 1123,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1178, 0, 0, 0, 0, 1134, 0, 1153,
	1225, 0, 1117, 284, 1128, 385, 244, 0, 1232, 1242,
	1175, 541, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349,
	1130, 316, 191, 215, 0, 1164, 395, 441, 453, 1237,
	1149, 1158, 242, 1156, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 1198, 1217, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 1129, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 1144, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 1233,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 1222, 1264,
	408, 452, 230, 522, 475, 1139, 1143, 1137, 1204, 1138,
	1193, 1194, 1140, 1255, 1256, 1257, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 1226, 1133, 0, 1141, 1142,
	1235, 1244, 1245, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 1197, 190, 211, 352, 1260, 434, 275,
	559, 532, 527, 197, 213, 1136, 249, 1147, 1155, 0,
	1161, 1169, 1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206,
	1208, 1216, 1218, 1221, 1223, 1230, 1241, 1263, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 1196, 1202, 365, 268, 291, 306,
	1211, 531, 481, 217, 446, 277, 240, 1229, 1231, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 1192, 1220, 360, 497, 498, 302, 380,
	0, 0, 0, 1249, 1234, 496, 0, 1177, 1252, 1146,
	1165, 1262, 1168, 1171, 1213, 1125, 1191, 399, 1162, 1118,
	1150, 1120, 1157, 1121, 1148, 1179, 257, 1145, 1236, 1195,
	1251, 350, 254, 1127, 1151, 413, 1167, 196, 1215, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 1258, 354, 1201, 0, 476, 384, 0,
	0, 0, 1181, 1240, 1189, 1227, 1176, 1214, 1135, 1200,
	1253, 1163, 1210, 1254, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 800, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 1159, 1207, 1248, 1160, 1209, 252, 307,
	259, 251, 501, 1259, 1239, 1124, 1188, 1247, 0, 0,
	219, 1250, 1183, 0, 1212, 0, 1265, 1119, 1203, 0,
	1122, 1126, 1261, 1243, 1154, 262, 0, 0, 0, 0,
	0, 0, 0, 1180, 1190, 1224, 1228, 1174, 0, 0,
	0, 0, 0, 2048, 0, 1152, 0, 1199, 0, 0,
	0, 1131, 1123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1178, 0, 0, 0, 0,
	1134, 0, 1153, 1225, 0, 1117, 284, 1128, 385, 244,
	0, 1232, 1242, 1175, 541, 1246, 1173, 1172, 1219, 1132,
	1238, 1166, 349, 1130, 316, 191, 215, 0, 1164, 395,
	441, 453, 1237, 1149, 1158, 242, 1156, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 1198, 1217, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 1129, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 1144,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 1233, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 1222, 1264, 408, 452, 230, 522, 475, 1139, 1143,
	1137, 1204, 1138, 1193, 1194, 1140, 1255, 1256, 1257, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 1226, 1133,
	0, 1141, 1142, 1235, 1244, 1245, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 1197, 190, 211, 352,
	1260, 434, 275, 559, 532, 527, 197, 213, 1136, 249,
	1147, 1155, 0, 1161, 1169, 1170, 1182, 1184, 1185, 1186,
	1187, 1205, 1206, 1208, 1216, 1218, 1221, 1223, 1230, 1241,
	1263, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 1196, 1202, 365,
	268, 291, 306, 1211, 531, 481, 217, 446, 277, 240,
	1229, 1231, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 1192, 1220, 360, 497,
	498, 302, 380, 0, 0, 0, 1249, 1234, 496, 0,
	1177, 1252, 1146, 1165, 1262, 1168, 1171, 1213, 1125, 1191,
	399, 1162, 1118, 1150, 1120, 1157, 1121, 1148, 1179, 257,
	1145, 1236, 1195, 1251, 350, 254, 1127, 1151, 413, 1167,
	196, 1215, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 1258, 354, 1201, 0,
	476, 384, 0, 0, 0, 1181, 1240, 1189, 1227, 1176,
	1214, 1135, 1200, 1253, 1163, 1210, 1254, 309, 237, 311,
	195, 396, 477, 273, 0, 89, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 1159, 1207, 1248, 1160,
	1209, 252, 307, 259, 251, 501, 1259, 1239, 1124, 1188,
	1247, 0, 0, 219, 1250, 1183, 0, 1212, 0, 1265,
	1119, 1203, 0, 1122, 1126, 1261, 1243, 1154, 262, 0,
	0, 0, 0, 0, 0, 0, 1180, 1190, 1224, 1228,
	1174, 0, 0, 0, 0, 0, 0, 0, 1152, 0,
	1199, 0, 0, 0, 1131, 1123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1178, 0,
	0, 0, 0, 1134, 0, 1153, 1225, 0, 1117, 284,
	1128, 385, 244, 0, 1232, 1242, 1175, 541, 1246, 1173,
	1172, 1219, 1132, 1238, 1166, 349, 1130, 316, 191, 215,
	0, 1164, 395, 441, 453, 1237, 1149, 1158, 242, 1156,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	1198, 1217, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 1129, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 1144, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 1233, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 1222, 1264, 408, 452, 230, 522,
	475, 1139, 1143, 1137, 1204, 1138, 1193, 1194, 1140, 1255,
	1256, 1257, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 1226, 1133, 0, 1141, 1142, 1235, 1244, 1245, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 1197,
	190, 211, 352, 1260, 434, 275, 559, 532, 527, 197,
	213, 1136, 249, 1147, 1155, 0, 1161, 1169, 1170, 1182,
	1184, 1185, 1186, 1187, 1205, 1206, 1208, 1216, 1218, 1221,
	1223, 1230, 1241, 1263, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	1196, 1202, 365, 268, 291, 306, 1211, 531, 481, 217,
	446, 277, 240, 1229, 1231, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 1192,
	1220, 360, 497, 498, 302, 380, 0, 0, 0, 1249,
	1234, 496, 0, 1177, 1252, 1146, 1165, 1262, 1168, 1171,
	1213, 1125, 1191, 399, 1162, 1118, 1150, 1120, 1157, 1121,
	1148, 1179, 257, 1145, 1236, 1195, 1251, 350, 254, 1127,
	1151, 413, 1167, 196, 1215, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 1258,
	354, 1201, 0, 476, 384, 0, 0, 0, 1181, 1240,
	1189, 1227, 1176, 1214, 1135, 1200, 1253, 1163, 1210, 1254,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 1159,
	1207, 1248, 1160, 1209, 252, 307, 259, 251, 501, 1259,
	1239, 1124, 1188, 1247, 0, 0, 219, 1250, 1183, 0,
	1212, 0, 1265, 1119, 1203, 0, 1122, 1126, 1261, 1243,
	1154, 262, 0, 0, 0, 0, 0, 0, 0, 1180,
	1190, 1224, 1228, 1174, 0, 0, 0, 0, 0, 0,
	0, 1152, 0, 1199, 0, 0, 0, 1131, 1123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1178, 0, 0, 0, 0, 1134, 0, 1153, 1225,
	0, 1117, 284, 1128, 385, 244, 0, 1232, 1242, 1175,
	541, 1246, 1173, 1172, 1219, 1132, 1238, 1166, 349, 1130,
	316, 191, 215, 0, 1164, 395, 441, 453, 1237, 1149,
	1158, 242, 1156, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 1198, 1217, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	1129, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 1144, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 1233, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 1222, 1264, 408,
	452, 230, 522, 475, 1139, 1143, 1137, 1204, 1138, 1193,
	1194, 1140, 1255, 1256, 1257, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 1226, 1133, 0, 1141, 1142, 1235,
	1244, 1245, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 1197, 190, 211, 352, 1260, 434, 275, 559,
	532, 527, 197, 213, 1136, 249, 1147, 1155, 0, 1161,
	1169, 1170, 1182, 1184, 1185, 1186, 1187, 1205, 1206, 1208,
	1216, 1218, 1221, 1223, 1230, 1241, 1263, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 1196, 1202, 365, 268, 291, 306, 1211,
	531, 481, 217, 446, 277, 240, 1229, 1231, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 1192, 1220, 360, 497, 498, 302, 380, 0,
	0, 0, 1249, 1234, 496, 0, 1177, 1252, 1146, 1165,
	1262, 1168, 1171, 1213, 1125, 1191, 399, 1162, 1118, 1150,
	1120, 1157, 1121, 1148, 1179, 257, 1145, 1236, 1195, 1251,
	350, 254, 1127, 1151, 413, 1167, 196, 1215, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 1258, 354, 1201, 0, 476, 384, 0, 0,
	0, 1181, 1240, 1189, 1227, 1176, 1214, 1135, 1200, 1253,
	1163, 1210, 1254, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 1159, 1207, 1248, 1160, 1209, 252, 307, 259,
	251, 501, 1259, 1239, 1124, 1188, 1247, 0, 0, 219,
	1250, 1183, 0, 1212, 0, 1265, 1119, 1203, 0, 1122,
	1126, 1261, 1243, 1154, 262, 0, 0, 0, 0, 0,
	0, 0, 1180, 1190, 1224, 1228, 1174, 0, 0, 0,
	0, 0, 0, 0, 1152, 0, 1199, 0, 0, 0,
	1131, 1123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1178, 0, 0, 0, 0, 1134,
	0, 1153, 1225, 0, 1117, 284, 1128, 385, 244, 0,
	1232, 1242, 1175, 541, 1246, 1173, 1172, 1219, 1132, 1238,
	1166, 349, 1130, 316, 191, 215, 0, 1164, 395, 441,
	453, 1237, 1149, 1158, 242, 1156, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 1198, 1217, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 1129, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 1144, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 1233, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	1222, 1264, 408, 452, 230, 522, 475, 1139, 1143, 1137,
	1204, 1138, 1193, 1194, 1140, 1255, 1256, 1257, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 1226, 1133, 0,
	1141, 1142, 1235, 1244, 1245, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 1197, 190, 211, 352, 1260,
	434, 275, 559, 532, 527, 197, 213, 1136, 249, 1147,
	1155, 0, 1161, 1169, 1170, 1182, 1184, 1185, 1186, 1187,
	1205, 1206, 1208, 1216, 1218, 1221, 1223, 1230, 1241, 1263,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 1196, 1202, 365, 268,
	291, 306, 1211, 531, 481, 217, 446, 277, 240, 1229,
	1231, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 1192, 1220, 360, 497, 498,
	302, 380, 0, 0, 0, 1249, 1234, 496, 0, 1177,
	1252, 1146, 1165, 1262, 1168, 1171, 1213, 1125, 1191, 399,
	1162, 1118, 1150, 1120, 1157, 1121, 1148, 1179, 257, 1145,
	1236, 1195, 1251, 350, 254, 1127, 1151, 413, 1167, 196,
	1215, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 1258, 354, 1201, 0, 476,
	384, 0, 0, 0, 1181, 1240, 1189, 1227, 1176, 1214,
	1135, 1200, 1253, 1163, 1210, 1254, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 1159, 1207, 1248, 1160, 1209,
	252, 307, 259, 251, 501, 1259, 1239, 1124, 1188, 1247,
	0, 0, 219, 1250, 1183, 0, 1212, 0, 1265, 1119,
	1203, 0, 1122, 1126, 1261, 1243, 1154, 262, 0, 0,
	0, 0, 0, 0, 0, 1180, 1190, 1224, 1228, 1174,
	0, 0, 0, 0, 0, 0, 0, 1152, 0, 1199,
	0, 0, 0, 1131, 1123, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1178, 0, 0,
	0, 0, 1134, 0, 1153, 1225, 0, 1117, 284, 1128,
	385, 244, 0, 1232, 1242, 1175, 541, 1246, 1173, 1172,
	1219, 1132, 1238, 1166, 349, 1130, 316, 191, 215, 0,
	1164, 395, 441, 453, 1237, 1149, 1158, 242, 1156, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 1198,
	1217, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 1129, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 1144, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 1233, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 1222, 1264, 408, 452, 230, 522, 475,
	1139, 1143, 1137, 1204, 1138, 1193, 1194, 1140, 1255, 1256,
	1257, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	1226, 1133, 0, 1141, 1142, 1235, 1244, 1245, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 1197, 190,
	211, 352, 1260, 434, 275, 559, 532, 527, 197, 213,
	1136, 249, 1147, 1155, 0, 1161, 1169, 1170, 1182, 1184,
	1185, 1186, 1187, 1205, 1206, 1208, 1216, 1218, 1221, 1223,
	1230, 1241, 1263, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 1196,
	1202, 365, 268, 291, 306, 1211, 531, 481, 217, 446,
	277, 240, 1229, 1231, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 1192, 1220,
	360, 497, 498, 302, 380, 0, 0, 0, 0, 0,
	496, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 666, 0, 0,
	0, 257, 671, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 678, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 89, 0, 0,
	816, 800, 766, 767, 804, 817, 818, 819, 820, 805,
	0, 228, 806, 807, 235, 808, 0, 765, 706, 708,
	707, 725, 726, 727, 728, 729, 730, 731, 704, 813,
	821, 822, 0, 252, 307, 259, 251, 501, 0, 0,
	1927, 1928, 1929, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 648, 663, 0, 677, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 661, 0, 0,
	0, 0, 760, 0, 662, 0, 0, 670, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 759, 0, 0, 541,
	0, 0, 757, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	810, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 811, 812, 243, 561, 712, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 720, 721, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 770, 758, 683, 774, 685, 771, 772,
	680, 681, 684, 773, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 761, 669, 668, 0, 676, 0, 702,
	703, 705, 709, 710, 711, 722, 723, 724, 732, 734,
	735, 733, 736, 737, 738, 741, 742, 743, 744, 739,
	740, 745, 686, 690, 687, 688, 689, 701, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 784, 785,
	786, 787, 788, 789, 715, 719, 718, 716, 717, 713,
	714, 667, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 775, 249, 776, 0, 0, 780, 0,
	0, 0, 782, 781, 0, 783, 749, 748, 0, 0,
	777, 778, 0, 779, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 790, 791,
	792, 793, 794, 795, 796, 797, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 815, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 679,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 666, 0, 0, 0, 257, 671,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 678, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 674, 675, 0, 0,
	0, 0, 0, 0, 2077, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 89, 0, 0, 816, 800, 766,
	767, 804, 817, 818, 819, 820, 805, 0, 228, 806,
	807, 235, 808, 0, 765, 706, 708, 707, 725, 726,
	727, 728, 729, 730, 731, 704, 813, 821, 822, 2078,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	648, 663, 0, 677, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 660, 661, 0, 0, 0, 0, 760,
	0, 662, 0, 0, 670, 823, 824, 825, 826, 827,
	828, 829, 830, 831, 832, 833, 834, 835, 836, 837,
	838, 839, 840, 841, 842, 843, 844, 845, 846, 847,
	848, 849, 850, 851, 852, 853, 854, 855, 856, 857,
	858, 859, 860, 861, 862, 863, 864, 673, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 759, 0, 0, 541, 0, 0, 757,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 810, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 811,
	812, 243, 561, 712, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 720, 721,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	770, 758, 683, 774, 685, 771, 772, 680, 681, 684,
	773, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	761, 669, 668, 0, 676, 0, 702, 703, 705, 709,
	710, 711, 722, 723, 724, 732, 734, 735, 733, 736,
	737, 738, 741, 742, 743, 744, 739, 740, 745, 686,
	690, 687, 688, 689, 701, 691, 692, 693, 694, 695,
	696, 697, 698, 699, 700, 784, 785, 786, 787, 788,
	789, 715, 719, 718, 716, 717, 713, 714, 667, 190,
	211, 352, 0, 434, 275, 559, 532, 527, 197, 213,
	775, 249, 776, 0, 0, 780, 0, 0, 0, 782,
	781, 0, 783, 749, 748, 0, 0, 777, 778, 0,
	779, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 790, 791, 792, 793, 794,
	795, 796, 797, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 815, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 0, 380,
	360, 497, 498, 302, 80, 496, 0, 679, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 666, 0, 0, 0, 257, 671, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 678, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 674, 675, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 89, 0, 0, 816, 800, 766, 767, 804,
	817, 818, 819, 820, 805, 0, 228, 806, 807, 235,
	808, 0, 765, 706, 708, 707, 725, 726, 727, 728,
	729, 730, 731, 704, 813, 821, 822, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 648, 663,
	0, 677, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 660, 661, 0, 0, 0, 0, 760, 0, 662,
	0, 0, 670, 823, 824, 825, 826, 827, 828, 829,
	830, 831, 832, 833, 834, 835, 836, 837, 838, 839,
	840, 841, 842, 843, 844, 845, 846, 847, 848, 849,
	850, 851, 852, 853, 854, 855, 856, 857, 858, 859,
	860, 861, 862, 863, 864, 673, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 759, 0, 0, 541, 0, 0, 757, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 810, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 811, 812, 243,
	561, 712, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 720, 721, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 770, 758,
	683, 774, 685, 771, 772, 680, 681, 684, 773, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 761, 669,
	668, 0, 676, 0, 702, 703, 705, 709, 710, 711,
	722, 723, 724, 732, 734, 735, 733, 736, 737, 738,
	741, 742, 743, 744, 739, 740, 745, 686, 690, 687,
	688, 689, 701, 691, 692, 693, 694, 695, 696, 697,
	698, 699, 700, 784, 785, 786, 787, 788, 789, 715,
	719, 718, 716, 717, 713, 714, 667, 190, 211, 352,
	88, 434, 275, 559, 532, 527, 197, 213, 775, 249,
	776, 0, 0, 780, 0, 0, 0, 782, 781, 0,
	783, 749, 748, 0, 0, 777, 778, 0, 779, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 790, 791, 792, 793, 794, 795, 796,
	797, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	815, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 679, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 666,
	0, 0, 0, 257, 671, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	678, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 674, 675, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 89,
	0, 0, 816, 800, 766, 767, 804, 817, 818, 819,
	820, 805, 0, 228, 806, 807, 235, 808, 0, 765,
	706, 708, 707, 725, 726, 727, 728, 729, 730, 731,
	704, 813, 821, 822, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 648, 663, 0, 677, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 660, 661,
	0, 0, 0, 0, 760, 0, 662, 0, 0, 670,
	823, 824, 825, 826, 827, 828, 829, 830, 831, 832,
	833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
	843, 844, 845, 846, 847, 848, 849, 850, 851, 852,
	853, 854, 855, 856, 857, 858, 859, 860, 861, 862,
	863, 864, 673, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 759, 0,
	0, 541, 0, 0, 757, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 810, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 3388, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 811, 812, 243, 561, 712, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 720, 721, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 770, 758, 683, 774, 685,
	771, 772, 680, 681, 684, 773, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 761, 669, 668, 0, 676,
	0, 702, 703, 705, 709, 710, 711, 722, 723, 724,
	732, 734, 735, 733, 736, 737, 738, 741, 742, 743,
	744, 739, 740, 745, 686, 690, 687, 688, 689, 701,
	691, 692, 693, 694, 695, 696, 697, 698, 699, 700,
	784, 785, 786, 787, 788, 789, 715, 719, 718, 716,
	717, 713, 714, 667, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 775, 249, 776, 0, 0,
	780, 0, 0, 0, 782, 781, 0, 783, 749, 748,
	0, 0, 777, 778, 0, 779, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	790, 791, 792, 793, 794, 795, 796, 797, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 815, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 679, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 666, 0, 0, 0,
	257, 671, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 678, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 674, 675,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 89, 0, 1497, 816,
	800, 766, 767, 804, 817, 818, 819, 820, 805, 0,
	228, 806, 807, 235, 808, 0, 765, 706, 708, 707,
	725, 726, 727, 728, 729, 730, 731, 704, 813, 821,
	822, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 648, 663, 0, 677, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 660, 661, 0, 0, 0,
	0, 760, 0, 662, 0, 0, 670, 823, 824, 825,
	826, 827, 828, 829, 830, 831, 832, 833, 834, 835,
	836, 837, 838, 839, 840, 841, 842, 843, 844, 845,
	846, 847, 848, 849, 850, 851, 852, 853, 854, 855,
	856, 857, 858, 859, 860, 861, 862, 863, 864, 673,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 759, 0, 0, 541, 0,
	0, 757, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 810,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 811, 812, 243, 561, 712, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	720, 721, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 770, 758, 683, 774, 685, 771, 772, 680,
	681, 684, 773, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 761, 669, 668, 0, 676, 0, 702, 703,
	705, 709, 710, 711, 722, 723, 724, 732, 734, 735,
	733, 736, 737, 738, 741, 742, 743, 744, 739, 740,
	745, 686, 690, 687, 688, 689, 701, 691, 692, 693,
	694, 695, 696, 697, 698, 699, 700, 784, 785, 786,
	787, 788, 789, 715, 719, 718, 716, 717, 713, 714,
	667, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 775, 249, 776, 0, 0, 780, 0, 0,
	0, 782, 781, 0, 783, 749, 748, 0, 0, 777,
	778, 0, 779, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 790, 791, 792,
	793, 794, 795, 796, 797, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 815, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 666, 0, 0, 0, 257, 671, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 678, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 674, 675, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 89, 0, 0, 816, 800, 766, 767,
	804, 817, 818, 819, 820, 805, 0, 228, 806, 807,
	235, 808, 0, 765, 706, 708, 707, 725, 726, 727,
	728, 729, 730, 731, 704, 813, 821, 822, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 648,
	663, 0, 677, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 660, 661, 905, 0, 0, 0, 760, 0,
	662, 0, 0, 670, 823, 824, 825, 826, 827, 828,
	829, 830, 831, 832, 833, 834, 835, 836, 837, 838,
	839, 840, 841, 842, 843, 844, 845, 846, 847, 848,
	849, 850, 851, 852, 853, 854, 855, 856, 857, 858,
	859, 860, 861, 862, 863, 864, 673, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 759, 0, 0, 541, 0, 0, 757, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 810, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 811, 812,
	243, 561, 712, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 720, 721, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 770,
	758, 683, 774, 685, 771, 772, 680, 681, 684, 773,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 761,
	669, 668, 0, 676, 0, 702, 703, 705, 709, 710,
	711, 722, 723, 724, 732, 734, 735, 733, 736, 737,
	738, 741, 742, 743, 744, 739, 740, 745, 686, 690,
	687, 688, 689, 701, 691, 692, 693, 694, 695, 696,
	697, 698, 699, 700, 784, 785, 786, 787, 788, 789,
	715, 719, 718, 716, 717, 713, 714, 667, 190, 211,
	352, 0, 434, 275, 559, 532, 527, 197, 213, 775,
	249, 776, 0, 0, 780, 0, 0, 0, 782, 781,
	0, 783, 749, 748, 0, 0, 777, 778, 0, 779,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 790, 791, 792, 793, 794, 795,
	796, 797, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 815, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 679, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	666, 0, 0, 0, 257, 671, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 678, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 674, 675, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	89, 0, 0, 816, 800, 766, 767, 804, 817, 818,
	819, 820, 805, 0, 228, 806, 807, 235, 808, 0,
	765, 706, 708, 707, 725, 726, 727, 728, 729, 730,
	731, 704, 813, 821, 822, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 648, 663, 0, 677,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 660,
	661, 0, 0, 0, 0, 760, 0, 662, 0, 0,
	670, 823, 824, 825, 826, 827, 828, 829, 830, 831,
	832, 833, 834, 835, 836, 837, 838, 839, 840, 841,
	842, 843, 844, 845, 846, 847, 848, 849, 850, 851,
	852, 853, 854, 855, 856, 857, 858, 859, 860, 861,
	862, 863, 864, 673, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 759,
	0, 0, 541, 0, 0, 757, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 810, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 558,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 203, 485, 515, 229, 463, 0,
	0, 560, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 811, 812, 243, 561, 712,
	536, 210, 0, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 720, 721, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 562, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 555, 554, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 522, 475, 770, 758, 683, 774,
	685, 771, 772, 680, 681, 684, 773, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 0, 761, 669, 668, 0,
	676, 0, 702, 703, 705, 709, 710, 711, 722, 723,
	724, 732, 734, 735, 733, 736, 737, 738, 741, 742,
	743, 744, 739, 740, 745, 686, 690, 687, 688, 689,
	701, 691, 692, 693, 694, 695, 696, 697, 698, 699,
	700, 784, 785, 786, 787, 788, 789, 715, 719, 718,
	716, 717, 713, 714, 667, 190, 211, 352, 0, 434,
	275, 559, 532, 527, 197, 213, 775, 249, 776, 0,
	0, 780, 0, 0, 0, 782, 781, 0, 783, 749,
	748, 0, 0, 777, 778, 0, 779, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 790, 791, 792, 793, 794, 795, 796, 797, 286,
	516, 545, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 531, 481, 217, 446, 277, 240, 815, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 679, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 666, 0, 0,
	0, 257, 671, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 678, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 674,
	675, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 89, 0, 0,
	816, 800, 766, 767, 804, 817, 818, 819, 820, 805,
	0, 228, 806, 807, 235, 808, 0, 765, 706, 708,
	707, 725, 726, 727, 728, 729, 730, 731, 704, 813,
	821, 822, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 663, 0, 677, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 660, 661, 0, 0,
	0, 0, 760, 0, 662, 0, 0, 670, 823, 824,
	825, 826, 827, 828, 829, 830, 831, 832, 833, 834,
	835, 836, 837, 838, 839, 840, 841, 842, 843, 844,
	845, 846, 847, 848, 849, 850, 851, 852, 853, 854,
	855, 856, 857, 858, 859, 860, 861, 862, 863, 864,
	673, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 759, 0, 0, 541,
	0, 0, 757, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	810, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 811, 812, 243, 561, 712, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 720, 721, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 770, 758, 683, 774, 685, 771, 772,
	680, 681, 684, 773, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 761, 669, 668, 0, 676, 0, 702,
	703, 705, 709, 710, 711, 722, 723, 724, 732, 734,
	735, 733, 736, 737, 738, 741, 742, 743, 744, 739,
	740, 745, 686, 690, 687, 688, 689, 701, 691, 692,
	693, 694, 695, 696, 697, 698, 699, 700, 784, 785,
	786, 787, 788, 789, 715, 719, 718, 716, 717, 713,
	714, 667, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 775, 249, 776, 0, 0, 780, 0,
	0, 0, 782, 781, 0, 783, 749, 748, 0, 0,
	777, 778, 0, 779, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 790, 791,
	792, 793, 794, 795, 796, 797, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 815, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 1313, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1314, 1315, 1316, 1317, 1318, 1319, 1320, 1322, 1321, 1323,
	1324, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 559, 532, 527, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 976, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 975, 541, 0, 0, 0, 0, 0, 972,
	973, 349, 933, 316, 191, 215, 966, 970, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 1460, 800, 0, 0, 1457, 0, 0, 0, 0,
	1455, 0, 228, 1456, 1454, 235, 1459, 0, 765, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 559,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 0, 380, 360, 497, 498, 302, 80, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 89, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 88, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	2064, 0, 0, 2063, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	1516, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 1518, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 1520, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 1294, 0, 1295, 1296, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 561, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 559, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	556, 557, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 0, 380, 360,
	497, 498, 302, 80, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 89, 0, 1497, 0, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 88,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 89, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 559,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 2064, 0, 0, 2063, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 2014, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 1697, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 2012, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 559, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 927, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 933, 316, 191, 215, 931, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 559, 532, 527, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 2014, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 1697, 188, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 1497, 0,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 3298, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 1847, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 561, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 559, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	556, 557, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 2416, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2417, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 558,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 203, 485, 515, 229, 463, 0,
	0, 560, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 510, 511, 243, 561, 218,
	536, 210, 0, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 562, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 555, 554, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 522, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 368, 465, 519, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 533, 534,
	538, 442, 443, 444, 445, 279, 528, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 0, 434,
	275, 559, 532, 527, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 287, 288, 426, 427, 300, 301, 556, 557, 286,
	516, 545, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 531, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	0, 627, 0, 0, 0, 0, 2401, 0, 0, 0,
	0, 228, 0, 0, 235, 2402, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 561, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 556, 557, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 1539,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 1538, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 559, 532, 527, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 629, 630, 631, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 3423, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 559,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 1697, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 559, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 3298, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 559, 532, 527, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 89,
	0, 0, 0, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 2065, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	188, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 1520, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 561, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 559, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	556, 557, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	0, 0, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 558,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 203, 485, 515, 229, 463, 0,
	0, 560, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 510, 511, 243, 561, 218,
	536, 210, 0, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 562, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 555, 554, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 522, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 368, 465, 519, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 533, 534,
	538, 442, 443, 444, 445, 279, 528, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 1802, 434,
	275, 559, 532, 527, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 287, 288, 426, 427, 300, 301, 556, 557, 286,
	516, 545, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 531, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	0, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	1794, 627, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 561, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 556, 557, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 1664, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 0, 0, 0, 0, 627, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 559, 532, 527, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 1662, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 627, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	286, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 1660, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 627, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 559,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 1658, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 627,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 0, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 559, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 1656,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 559, 532, 527, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 392, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 1652, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 1650, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	1648, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 0, 627, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 561, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 559, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	556, 557, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 380, 0, 360,
	497, 498, 302, 496, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 399, 0, 0, 0, 0,
	0, 0, 0, 0, 257, 0, 0, 0, 0, 350,
	254, 0, 0, 413, 0, 196, 0, 466, 241, 361,
	358, 504, 269, 260, 256, 239, 303, 369, 411, 486,
	405, 0, 354, 0, 0, 476, 384, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 309, 237, 311, 195, 396, 477, 273, 0,
	1623, 0, 0, 0, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 228, 0, 0, 235, 0, 0,
	0, 335, 344, 343, 324, 325, 327, 329, 334, 341,
	347, 0, 0, 0, 0, 0, 252, 307, 259, 251,
	501, 0, 0, 0, 0, 0, 0, 0, 219, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 284, 0, 385, 244, 0, 0,
	0, 0, 541, 0, 0, 0, 0, 0, 0, 0,
	349, 0, 316, 191, 215, 0, 0, 395, 441, 453,
	0, 0, 0, 242, 0, 451, 409, 520, 223, 271,
	438, 415, 449, 422, 274, 0, 0, 450, 356, 506,
	432, 517, 542, 543, 250, 389, 529, 490, 537, 558,
	216, 247, 403, 483, 523, 473, 381, 502, 503, 315,
	472, 282, 194, 353, 548, 214, 459, 355, 232, 221,
	508, 526, 276, 436, 203, 485, 515, 229, 463, 0,
	0, 560, 205, 513, 482, 377, 312, 313, 204, 0,
	437, 255, 280, 245, 398, 510, 511, 243, 561, 218,
	536, 210, 0, 535, 391, 505, 514, 378, 367, 209,
	512, 376, 366, 320, 339, 340, 267, 293, 429, 359,
	430, 292, 294, 387, 386, 388, 198, 524, 0, 199,
	0, 478, 525, 562, 224, 225, 227, 0, 266, 270,
	278, 281, 289, 290, 299, 351, 402, 428, 424, 433,
	0, 500, 518, 530, 540, 546, 547, 549, 550, 551,
	552, 553, 555, 554, 390, 297, 474, 319, 357, 0,
	0, 408, 452, 230, 522, 475, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 563, 564, 565,
	566, 567, 568, 569, 570, 571, 572, 573, 574, 575,
	576, 577, 578, 579, 580, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 581, 368, 465, 519, 321, 333,
	336, 326, 345, 0, 346, 322, 323, 328, 330, 331,
	332, 337, 338, 342, 348, 238, 201, 374, 382, 499,
	298, 206, 207, 208, 492, 493, 494, 495, 533, 534,
	538, 442, 443, 444, 445, 279, 528, 295, 448, 447,
	317, 318, 363, 431, 0, 190, 211, 352, 0, 434,
	275, 559, 532, 527, 197, 213, 0, 249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 192,
	193, 200, 212, 222, 226, 233, 248, 263, 265, 272,
	285, 296, 304, 305, 308, 314, 364, 370, 371, 372,
	373, 392, 393, 394, 397, 400, 401, 404, 406, 407,
	410, 414, 418, 419, 420, 421, 423, 425, 435, 440,
	454, 455, 456, 457, 458, 461, 462, 467, 468, 469,
	470, 471, 479, 480, 484, 507, 509, 521, 539, 544,
	460, 287, 288, 426, 427, 300, 301, 556, 557, 286,
	516, 545, 0, 0, 362, 0, 0, 365, 268, 291,
	306, 0, 531, 481, 217, 446, 277, 240, 0, 0,
	202, 236, 220, 246, 261, 264, 310, 375, 383, 412,
	417, 283, 258, 234, 439, 231, 464, 487, 488, 489,
	491, 379, 253, 416, 380, 0, 360, 497, 498, 302,
	496, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 399, 0, 0, 0, 0, 0, 0, 0,
	1524, 257, 0, 0, 0, 0, 350, 254, 0, 0,
	413, 0, 196, 0, 466, 241, 361, 358, 504, 269,
	260, 256, 239, 303, 369, 411, 486, 405, 0, 354,
	0, 0, 476, 384, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 309,
	237, 311, 195, 396, 477, 273, 0, 0, 0, 0,
	0, 188, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 228, 0, 0, 235, 0, 0, 0, 335, 344,
	343, 324, 325, 327, 329, 334, 341, 347, 0, 0,
	0, 0, 0, 252, 307, 259, 251, 501, 0, 0,
	0, 0, 0, 0, 0, 219, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 284, 0, 385, 244, 0, 0, 0, 0, 541,
	0, 0, 0, 0, 0, 0, 0, 349, 0, 316,
	191, 215, 0, 0, 395, 441, 453, 0, 0, 0,
	242, 0, 451, 409, 520, 223, 271, 438, 415, 449,
	422, 274, 0, 0, 450, 356, 506, 432, 517, 542,
	543, 250, 389, 529, 490, 537, 558, 216, 247, 403,
	483, 523, 473, 381, 502, 503, 315, 472, 282, 194,
	353, 548, 214, 459, 355, 232, 221, 508, 526, 276,
	436, 203, 485, 515, 229, 463, 0, 0, 560, 205,
	513, 482, 377, 312, 313, 204, 0, 437, 255, 280,
	245, 398, 510, 511, 243, 561, 218, 536, 210, 0,
	535, 391, 505, 514, 378, 367, 209, 512, 376, 366,
	320, 339, 340, 267, 293, 429, 359, 430, 292, 294,
	387, 386, 388, 198, 524, 0, 199, 0, 478, 525,
	562, 224, 225, 227, 0, 266, 270, 278, 281, 289,
	290, 299, 351, 402, 428, 424, 433, 0, 500, 518,
	530, 540, 546, 547, 549, 550, 551, 552, 553, 555,
	554, 390, 297, 474, 319, 357, 0, 0, 408, 452,
	230, 522, 475, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 563, 564, 565, 566, 567, 568,
	569, 570, 571, 572, 573, 574, 575, 576, 577, 578,
	579, 580, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 581, 368, 465, 519, 321, 333, 336, 326, 345,
	0, 346, 322, 323, 328, 330, 331, 332, 337, 338,
	342, 348, 238, 201, 374, 382, 499, 298, 206, 207,
	208, 492, 493, 494, 495, 533, 534, 538, 442, 443,
	444, 445, 279, 528, 295, 448, 447, 317, 318, 363,
	431, 0, 190, 211, 352, 0, 434, 275, 559, 532,
	527, 197, 213, 0, 249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 193, 200, 212,
	222, 226, 233, 248, 263, 265, 272, 285, 296, 304,
	305, 308, 314, 364, 370, 371, 372, 373, 392, 393,
	394, 397, 400, 401, 404, 406, 407, 410, 414, 418,
	419, 420, 421, 423, 425, 435, 440, 454, 455, 456,
	457, 458, 461, 462, 467, 468, 469, 470, 471, 479,
	480, 484, 507, 509, 521, 539, 544, 460, 287, 288,
	426, 427, 300, 301, 556, 557, 286, 516, 545, 0,
	0, 362, 0, 0, 365, 268, 291, 306, 0, 531,
	481, 217, 446, 277, 240, 0, 0, 202, 236, 220,
	246, 261, 264, 310, 375, 383, 412, 417, 283, 258,
	234, 439, 231, 464, 487, 488, 489, 491, 379, 253,
	416, 380, 0, 360, 497, 498, 302, 496, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 399,
	0, 0, 0, 0, 0, 0, 0, 0, 257, 0,
	0, 0, 0, 350, 254, 0, 0, 413, 0, 196,
	0, 466, 241, 361, 358, 504, 269, 260, 256, 239,
	303, 369, 411, 486, 405, 0, 354, 0, 0, 476,
	384, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 309, 237, 311, 195,
	396, 477, 273, 0, 89, 0, 0, 0, 800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 228, 0,
	0, 235, 0, 0, 0, 335, 344, 343, 324, 325,
	327, 329, 334, 341, 347, 0, 0, 0, 0, 0,
	252, 307, 259, 251, 501, 0, 0, 0, 0, 0,
	0, 0, 219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 284, 0,
	385, 244, 0, 0, 0, 0, 541, 0, 0, 0,
	0, 0, 0, 0, 349, 0, 316, 191, 215, 0,
	0, 395, 441, 453, 0, 0, 0, 242, 0, 451,
	409, 520, 223, 271, 438, 415, 449, 422, 274, 0,
	0, 450, 356, 506, 432, 517, 542, 543, 250, 389,
	529, 490, 537, 558, 216, 247, 403, 483, 523, 473,
	381, 502, 503, 315, 472, 282, 194, 353, 548, 214,
	459, 355, 232, 221, 508, 526, 276, 436, 203, 485,
	515, 229, 463, 0, 0, 560, 205, 513, 482, 377,
	312, 313, 204, 0, 437, 255, 280, 245, 398, 510,
	511, 243, 561, 218, 536, 210, 0, 535, 391, 505,
	514, 378, 367, 209, 512, 376, 366, 320, 339, 340,
	267, 293, 429, 359, 430, 292, 294, 387, 386, 388,
	198, 524, 0, 199, 0, 478, 525, 562, 224, 225,
	227, 0, 266, 270, 278, 281, 289, 290, 299, 351,
	402, 428, 424, 433, 0, 500, 518, 530, 540, 546,
	547, 549, 550, 551, 552, 553, 555, 554, 390, 297,
	474, 319, 357, 0, 0, 408, 452, 230, 522, 475,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 563, 564, 565, 566, 567, 568, 569, 570, 571,
	572, 573, 574, 575, 576, 577, 578, 579, 580, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 581, 368,
	465, 519, 321, 333, 336, 326, 345, 0, 346, 322,
	323, 328, 330, 331, 332, 337, 338, 342, 348, 238,
	201, 374, 382, 499, 298, 206, 207, 208, 492, 493,
	494, 495, 533, 534, 538, 442, 443, 444, 445, 279,
	528, 295, 448, 447, 317, 318, 363, 431, 0, 190,
	211, 352, 0, 434, 275, 559, 532, 527, 197, 213,
	0, 249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 193, 200, 212, 222, 226, 233,
	248, 263, 265, 272, 285, 296, 304, 305, 308, 314,
	364, 370, 371, 372, 373, 392, 393, 394, 397, 400,
	401, 404, 406, 407, 410, 414, 418, 419, 420, 421,
	423, 425, 435, 440, 454, 455, 456, 457, 458, 461,
	462, 467, 468, 469, 470, 471, 479, 480, 484, 507,
	509, 521, 539, 544, 460, 287, 288, 426, 427, 300,
	301, 556, 557, 286, 516, 545, 0, 0, 362, 0,
	0, 365, 268, 291, 306, 0, 531, 481, 217, 446,
	277, 240, 0, 0, 202, 236, 220, 246, 261, 264,
	310, 375, 383, 412, 417, 283, 258, 234, 439, 231,
	464, 487, 488, 489, 491, 379, 253, 416, 380, 0,
	360, 497, 498, 302, 496, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 399, 0, 0, 0,
	0, 0, 0, 0, 0, 257, 0, 0, 0, 0,
	350, 254, 0, 0, 413, 0, 196, 0, 466, 241,
	361, 358, 504, 269, 260, 256, 239, 303, 369, 411,
	486, 405, 0, 354, 0, 0, 476, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 309, 237, 311, 195, 396, 477, 273,
	0, 0, 0, 0, 0, 188, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 228, 0, 0, 235, 0,
	0, 0, 335, 344, 343, 324, 325, 327, 329, 334,
	341, 347, 0, 0, 0, 0, 0, 252, 307, 259,
	251, 501, 0, 0, 0, 0, 0, 0, 0, 219,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1277, 0, 284, 0, 385, 244, 0,
	0, 0, 0, 541, 0, 0, 0, 0, 0, 0,
	0, 349, 0, 316, 191, 215, 0, 0, 395, 441,
	453, 0, 0, 0, 242, 0, 451, 409, 520, 223,
	271, 438, 415, 449, 422, 274, 0, 0, 450, 356,
	506, 432, 517, 542, 543, 250, 389, 529, 490, 537,
	558, 216, 247, 403, 483, 523, 473, 381, 502, 503,
	315, 472, 282, 194, 353, 548, 214, 459, 355, 232,
	221, 508, 526, 276, 436, 203, 485, 515, 229, 463,
	0, 0, 560, 205, 513, 482, 377, 312, 313, 204,
	0, 437, 255, 280, 245, 398, 510, 511, 243, 561,
	218, 536, 210, 0, 535, 391, 505, 514, 378, 367,
	209, 512, 376, 366, 320, 339, 340, 267, 293, 429,
	359, 430, 292, 294, 387, 386, 388, 198, 524, 0,
	199, 0, 478, 525, 562, 224, 225, 227, 0, 266,
	270, 278, 281, 289, 290, 299, 351, 402, 428, 424,
	433, 0, 500, 518, 530, 540, 546, 547, 549, 550,
	551, 552, 553, 555, 554, 390, 297, 474, 319, 357,
	0, 0, 408, 452, 230, 522, 475, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 563, 564,
	565, 566, 567, 568, 569, 570, 571, 572, 573, 574,
	575, 576, 577, 578, 579, 580, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 581, 368, 465, 519, 321,
	333, 336, 326, 345, 0, 346, 322, 323, 328, 330,
	331, 332, 337, 338, 342, 348, 238, 201, 374, 382,
	499, 298, 206, 207, 208, 492, 493, 494, 495, 533,
	534, 538, 442, 443, 444, 445, 279, 528, 295, 448,
	447, 317, 318, 363, 431, 0, 190, 211, 352, 0,
	434, 275, 559, 532, 527, 197, 213, 0, 249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	192, 193, 200, 212, 222, 226, 233, 248, 263, 265,
	272, 285, 296, 304, 305, 308, 314, 364, 370, 371,
	372, 373, 392, 393, 394, 397, 400, 401, 404, 406,
	407, 410, 414, 418, 419, 420, 421, 423, 425, 435,
	440, 454, 455, 456, 457, 458, 461, 462, 467, 468,
	469, 470, 471, 479, 480, 484, 507, 509, 521, 539,
	544, 460, 287, 288, 426, 427, 300, 301, 556, 557,
	1276, 516, 545, 0, 0, 362, 0, 0, 365, 268,
	291, 306, 0, 531, 481, 217, 446, 277, 240, 0,
	0, 202, 236, 220, 246, 261, 264, 310, 375, 383,
	412, 417, 283, 258, 234, 439, 231, 464, 487, 488,
	489, 491, 379, 253, 416, 380, 0, 360, 497, 498,
	302, 496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 399, 0, 0, 0, 0, 0, 0,
	0, 0, 257, 0, 0, 0, 0, 350, 254, 0,
	0, 413, 0, 196, 0, 466, 241, 361, 358, 504,
	269, 260, 256, 239, 303, 369, 411, 486, 405, 0,
	354, 0, 0, 476, 384, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	309, 237, 311, 195, 396, 477, 273, 0, 0, 0,
	0, 0, 188, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 228, 0, 0, 235, 0, 0, 0, 335,
	344, 343, 324, 325, 327, 329, 334, 341, 347, 0,
	0, 0, 0, 0, 252, 307, 259, 251, 501, 0,
	0, 0, 0, 0, 0, 0, 219, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 284, 0, 385, 244, 0, 0, 0, 0,
	541, 0, 0, 0, 0, 0, 0, 0, 349, 0,
	316, 191, 215, 0, 0, 395, 441, 453, 0, 0,
	0, 242, 0, 451, 409, 520, 223, 271, 438, 415,
	449, 422, 274, 0, 0, 450, 356, 506, 432, 517,
	542, 543, 250, 389, 529, 490, 537, 558, 216, 247,
	403, 483, 523, 473, 381, 502, 503, 315, 472, 282,
	194, 353, 548, 214, 459, 355, 232, 221, 508, 526,
	276, 436, 203, 485, 515, 229, 463, 0, 0, 560,
	205, 513, 482, 377, 312, 313, 204, 0, 437, 255,
	280, 245, 398, 510, 511, 243, 561, 218, 536, 210,
	0, 535, 391, 505, 514, 378, 367, 209, 512, 376,
	366, 320, 339, 340, 267, 293, 429, 359, 430, 292,
	294, 387, 386, 388, 198, 524, 0, 199, 0, 478,
	525, 562, 224, 225, 227, 0, 266, 270, 278, 281,
	289, 290, 299, 351, 402, 428, 424, 433, 0, 500,
	518, 530, 540, 546, 547, 549, 550, 551, 552, 553,
	555, 554, 390, 297, 474, 319, 357, 0, 0, 408,
	452, 230, 522, 475, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 563, 564, 565, 566, 567,
	568, 569, 570, 571, 572, 573, 574, 575, 576, 577,
	578, 579, 580, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 581, 368, 465, 519, 321, 333, 336, 326,
	345, 0, 346, 322, 323, 328, 330, 331, 332, 337,
	338, 342, 348, 238, 201, 374, 382, 499, 298, 206,
	207, 208, 492, 493, 494, 495, 533, 534, 538, 442,
	443, 444, 445, 279, 528, 295, 448, 447, 317, 318,
	363, 431, 0, 190, 211, 352, 0, 434, 275, 559,
	532, 527, 197, 213, 0, 249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 886, 0, 0, 0, 192, 193, 200,
	212, 222, 226, 233, 248, 263, 265, 272, 285, 296,
	304, 305, 308, 314, 364, 370, 371, 372, 373, 392,
	393, 394, 397, 400, 401, 404, 406, 407, 410, 414,
	418, 419, 420, 421, 423, 425, 435, 440, 454, 455,
	456, 457, 458, 461, 462, 467, 468, 469, 470, 471,
	479, 480, 484, 507, 509, 521, 539, 544, 460, 287,
	288, 426, 427, 300, 301, 556, 557, 286, 516, 545,
	0, 0, 362, 0, 0, 365, 268, 291, 306, 0,
	531, 481, 217, 446, 277, 240, 0, 0, 202, 236,
	220, 246, 261, 264, 310, 375, 383, 412, 417, 283,
	258, 234, 439, 231, 464, 487, 488, 489, 491, 379,
	253, 416, 380, 0, 360, 497, 498, 302, 496, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	399, 0, 0, 0, 0, 0, 0, 0, 0, 257,
	0, 0, 0, 0, 350, 254, 0, 0, 413, 0,
	196, 0, 466, 241, 361, 358, 504, 269, 260, 256,
	239, 303, 369, 411, 486, 405, 0, 354, 0, 0,
	476, 384, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 309, 237, 311,
	195, 396, 477, 273, 0, 0, 0, 0, 0, 188,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 228,
	0, 0, 235, 0, 0, 0, 335, 344, 343, 324,
	325, 327, 329, 334, 341, 347, 0, 0, 0, 0,
	0, 252, 307, 259, 251, 501, 0, 0, 0, 0,
	0, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 262, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 284,
	0, 385, 244, 0, 0, 584, 0, 541, 0, 0,
	0, 0, 0, 0, 0, 349, 0, 316, 191, 215,
	0, 0, 395, 441, 453, 0, 0, 0, 242, 0,
	451, 409, 520, 223, 271, 438, 415, 449, 422, 274,
	0, 0, 450, 356, 506, 432, 517, 542, 543, 250,
	389, 529, 490, 537, 558, 216, 247, 403, 483, 523,
	473, 381, 502, 503, 315, 472, 282, 194, 353, 548,
	214, 459, 355, 232, 221, 508, 526, 276, 436, 203,
	485, 515, 229, 463, 0, 0, 560, 205, 513, 482,
	377, 312, 313, 204, 0, 437, 255, 280, 245, 398,
	510, 511, 243, 561, 218, 536, 210, 0, 535, 391,
	505, 514, 378, 367, 209, 512, 376, 366, 320, 339,
	340, 267, 293, 429, 359, 430, 292, 294, 387, 386,
	388, 198, 524, 0, 199, 0, 478, 525, 562, 224,
	225, 227, 0, 266, 270, 278, 281, 289, 290, 299,
	351, 402, 428, 424, 433, 0, 500, 518, 530, 540,
	546, 547, 549, 550, 551, 552, 553, 555, 554, 390,
	297, 474, 319, 357, 0, 0, 408, 452, 230, 522,
	475, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 563, 564, 565, 566, 567, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 581,
	368, 465, 519, 321, 333, 336, 326, 345, 0, 346,
	322, 323, 328, 330, 331, 332, 337, 338, 342, 348,
	238, 201, 374, 382, 499, 298, 206, 207, 208, 492,
	493, 494, 495, 533, 534, 538, 442, 443, 444, 445,
	279, 528, 295, 448, 447, 317, 318, 363, 431, 0,
	190, 211, 352, 0, 434, 275, 559, 532, 527, 197,
	213, 0, 249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 192, 193, 200, 212, 222, 226,
	233, 248, 263, 265, 272, 285, 296, 304, 305, 308,
	314, 364, 370, 371, 372, 373, 392, 393, 394, 397,
	400, 401, 404, 406, 407, 410, 414, 418, 419, 420,
	421, 423, 425, 435, 440, 454, 455, 456, 457, 458,
	461, 462, 467, 468, 469, 470, 471, 479, 480, 484,
	507, 509, 521, 539, 544, 460, 287, 288, 426, 427,
	300, 301, 556, 557, 286, 516, 545, 0, 0, 362,
	0, 0, 365, 268, 291, 306, 0, 531, 481, 217,
	446, 277, 240, 0, 0, 202, 236, 220, 246, 261,
	264, 310, 375, 383, 412, 417, 283, 258, 234, 439,
	231, 464, 487, 488, 489, 491, 379, 253, 416, 380,
	0, 360, 497, 498, 302, 496, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 399, 0, 0,
	0, 0, 0, 0, 0, 0, 257, 0, 0, 0,
	0, 350, 254, 0, 0, 413, 0, 196, 0, 466,
	241, 361, 358, 504, 269, 260, 256, 239, 303, 369,
	411, 486, 405, 0, 354, 0, 0, 476, 384, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 309, 237, 311, 195, 396, 477,
	273, 0, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 228, 0, 0, 235,
	0, 0, 0, 335, 344, 343, 324, 325, 327, 329,
	334, 341, 347, 0, 0, 0, 0, 0, 252, 307,
	259, 251, 501, 0, 0, 0, 0, 0, 0, 0,
	219, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 284, 0, 385, 244,
	0, 0, 0, 0, 541, 0, 0, 0, 0, 0,
	0, 0, 349, 0, 316, 191, 215, 0, 0, 395,
	441, 453, 0, 0, 0, 242, 0, 451, 409, 520,
	223, 271, 438, 415, 449, 422, 274, 0, 0, 450,
	356, 506, 432, 517, 542, 543, 250, 389, 529, 490,
	537, 558, 216, 247, 403, 483, 523, 473, 381, 502,
	503, 315, 472, 282, 194, 353, 548, 214, 459, 355,
	232, 221, 508, 526, 276, 436, 203, 485, 515, 229,
	463, 0, 0, 560, 205, 513, 482, 377, 312, 313,
	204, 0, 437, 255, 280, 245, 398, 510, 511, 243,
	561, 218, 536, 210, 0, 535, 391, 505, 514, 378,
	367, 209, 512, 376, 366, 320, 339, 340, 267, 293,
	429, 359, 430, 292, 294, 387, 386, 388, 198, 524,
	0, 199, 0, 478, 525, 562, 224, 225, 227, 0,
	266, 270, 278, 281, 289, 290, 299, 351, 402, 428,
	424, 433, 0, 500, 518, 530, 540, 546, 547, 549,
	550, 551, 552, 553, 555, 554, 390, 297, 474, 319,
	357, 0, 0, 408, 452, 230, 522, 475, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 563,
	564, 565, 566, 567, 568, 569, 570, 571, 572, 573,
	574, 575, 576, 577, 578, 579, 580, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 581, 368, 465, 519,
	321, 333, 336, 326, 345, 0, 346, 322, 323, 328,
	330, 331, 332, 337, 338, 342, 348, 238, 201, 374,
	382, 499, 298, 206, 207, 208, 492, 493, 494, 495,
	533, 534, 538, 442, 443, 444, 445, 279, 528, 295,
	448, 447, 317, 318, 363, 431, 0, 190, 211, 352,
	0, 434, 275, 559, 532, 527, 197, 213, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 193, 200, 212, 222, 226, 233, 248, 263,
	265, 272, 285, 296, 304, 305, 308, 314, 364, 370,
	371, 372, 373, 3431, 393, 394, 397, 400, 401, 404,
	406, 407, 410, 414, 418, 419, 420, 421, 423, 425,
	435, 440, 454, 455, 456, 457, 458, 461, 462, 467,
	468, 469, 470, 471, 479, 480, 484, 507, 509, 521,
	539, 544, 460, 287, 288, 426, 427, 300, 301, 556,
	557, 286, 516, 545, 0, 0, 362, 0, 0, 365,
	268, 291, 306, 0, 531, 481, 217, 446, 277, 240,
	0, 0, 202, 236, 220, 246, 261, 264, 310, 375,
	383, 412, 417, 283, 258, 234, 439, 231, 464, 487,
	488, 489, 491, 379, 253, 416, 380, 0, 360, 497,
	498, 302, 496, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 399, 0, 0, 0, 0, 0,
	0, 0, 0, 257, 0, 0, 0, 0, 350, 254,
	0, 0, 413, 0, 196, 0, 466, 241, 361, 358,
	504, 269, 260, 256, 239, 303, 369, 411, 486, 405,
	0, 354, 0, 0, 476, 384, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 309, 237, 311, 195, 396, 477, 273, 0, 0,
	0, 0, 0, 627, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 228, 0, 0, 235, 0, 0, 0,
	335, 344, 343, 324, 325, 327, 329, 334, 341, 347,
	0, 0, 0, 0, 0, 252, 307, 259, 251, 501,
	0, 0, 0, 0, 0, 0, 0, 219, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 284, 0, 385, 244, 0, 0, 0,
	0, 541, 0, 0, 0, 0, 0, 0, 0, 349,
	0, 316, 191, 215, 0, 0, 395, 441, 453, 0,
	0, 0, 242, 0, 451, 409, 520, 223, 271, 438,
	415, 449, 422, 274, 0, 0, 450, 356, 506, 432,
	517, 542, 543, 250, 389, 529, 490, 537, 558, 216,
	247, 403, 483, 523, 473, 381, 502, 503, 315, 472,
	282, 194, 353, 548, 214, 459, 355, 232, 221, 508,
	526, 276, 436, 203, 485, 515, 229, 463, 0, 0,
	560, 205, 513, 482, 377, 312, 313, 204, 0, 437,
	255, 280, 245, 398, 510, 511, 243, 561, 218, 536,
	210, 0, 535, 391, 505, 514, 378, 367, 209, 512,
	376, 366, 320, 339, 340, 267, 293, 429, 359, 430,
	292, 294, 387, 386, 388, 198, 524, 0, 199, 0,
	478, 525, 562, 224, 225, 227, 0, 266, 270, 278,
	281, 289, 290, 299, 351, 402, 428, 424, 433, 0,
	500, 518, 530, 540, 546, 547, 549, 550, 551, 552,
	553, 555, 554, 390, 297, 474, 319, 357, 0, 0,
	408, 452, 230, 522, 475, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 563, 564, 565, 566,
	567, 568, 569, 570, 571, 572, 573, 574, 575, 576,
	577, 578, 579, 580, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 581, 368, 465, 519, 321, 333, 336,
	326, 345, 0, 346, 322, 323, 328, 330, 331, 332,
	337, 338, 342, 348, 238, 201, 374, 382, 499, 298,
	206, 207, 208, 492, 493, 494, 495, 533, 534, 538,
	442, 443, 444, 445, 279, 528, 295, 448, 447, 317,
	318, 363, 431, 0, 190, 211, 352, 0, 434, 275,
	559, 532, 527, 197, 213, 0, 249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 193,
	200, 212, 222, 226, 233, 248, 263, 265, 272, 285,
	296, 304, 305, 308, 314, 364, 370, 371, 372, 373,
	392, 393, 394, 397, 400, 401, 404, 406, 407, 410,
	414, 418, 419, 420, 421, 423, 425, 435, 440, 454,
	455, 456, 457, 458, 461, 462, 467, 468, 469, 470,
	471, 479, 480, 484, 507, 509, 521, 539, 544, 460,
	287, 288, 426, 427, 300, 301, 556, 557, 286, 516,
	545, 0, 0, 362, 0, 0, 365, 268, 291, 306,
	0, 531, 481, 217, 446, 277, 240, 0, 0, 202,
	236, 220, 246, 261, 264, 310, 375, 383, 412, 417,
	283, 258, 234, 439, 231, 464, 487, 488, 489, 491,
	379, 253, 416, 380, 0, 360, 497, 498, 302, 496,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 399, 0, 0, 0, 0, 0, 0, 0, 0,
	257, 0, 0, 0, 0, 350, 254, 0, 0, 413,
	0, 196, 0, 466, 241, 361, 358, 504, 269, 260,
	256, 239, 303, 369, 411, 486, 405, 0, 354, 0,
	0, 476, 384, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 309, 237,
	311, 195, 396, 477, 273, 0, 0, 0, 0, 0,
	800, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	228, 0, 0, 235, 0, 0, 0, 335, 344, 343,
	324, 325, 327, 329, 334, 341, 347, 0, 0, 0,
	0, 0, 252, 307, 259, 251, 501, 0, 0, 0,
	0, 0, 0, 0, 219, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	284, 0, 385, 244, 0, 0, 0, 0, 541, 0,
	0, 0, 0, 0, 0, 0, 349, 0, 316, 191,
	215, 0, 0, 395, 441, 453, 0, 0, 0, 242,
	0, 451, 409, 520, 223, 271, 438, 415, 449, 422,
	274, 0, 0, 450, 356, 506, 432, 517, 542, 543,
	250, 389, 529, 490, 537, 558, 216, 247, 403, 483,
	523, 473, 381, 502, 503, 315, 472, 282, 194, 353,
	548, 214, 459, 355, 232, 221, 508, 526, 276, 436,
	203, 485, 515, 229, 463, 0, 0, 560, 205, 513,
	482, 377, 312, 313, 204, 0, 437, 255, 280, 245,
	398, 510, 511, 243, 561, 218, 536, 210, 0, 535,
	391, 505, 514, 378, 367, 209, 512, 376, 366, 320,
	339, 340, 267, 293, 429, 359, 430, 292, 294, 387,
	386, 388, 198, 524, 0, 199, 0, 478, 525, 562,
	224, 225, 227, 0, 266, 270, 278, 281, 289, 290,
	299, 351, 402, 428, 424, 433, 0, 500, 518, 530,
	540, 546, 547, 549, 550, 551, 552, 553, 555, 554,
	390, 297, 474, 319, 357, 0, 0, 408, 452, 230,
	522, 475, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 563, 564, 565, 566, 567, 568, 569,
	570, 571, 572, 573, 574, 575, 576, 577, 578, 579,
	580, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	581, 368, 465, 519, 321, 333, 336, 326, 345, 0,
	346, 322, 323, 328, 330, 331, 332, 337, 338, 342,
	348, 238, 201, 374, 382, 499, 298, 206, 207, 208,
	492, 493, 494, 495, 533, 534, 538, 442, 443, 444,
	445, 279, 528, 295, 448, 447, 317, 318, 363, 431,
	0, 190, 211, 352, 0, 434, 275, 559, 532, 527,
	197, 213, 0, 249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 192, 193, 200, 212, 222,
	226, 233, 248, 263, 265, 272, 285, 296, 304, 305,
	308, 314, 364, 370, 371, 372, 373, 392, 393, 394,
	397, 400, 401, 404, 406, 407, 410, 414, 418, 419,
	420, 421, 423, 425, 435, 440, 454, 455, 456, 457,
	458, 461, 462, 467, 468, 469, 470, 471, 479, 480,
	484, 507, 509, 521, 539, 544, 460, 287, 288, 426,
	427, 300, 301, 556, 557, 286, 516, 545, 0, 0,
	362, 0, 0, 365, 268, 291, 306, 0, 531, 481,
	217, 446, 277, 240, 0, 0, 202, 236, 220, 246,
	261, 264, 310, 375, 383, 412, 417, 283, 258, 234,
	439, 231, 464, 487, 488, 489, 491, 379, 253, 416,
	380, 0, 360, 497, 498, 302, 496, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 399, 0,
	0, 0, 0, 0, 0, 0, 0, 257, 0, 0,
	0, 0, 350, 254, 0, 0, 413, 0, 196, 0,
	466, 241, 361, 358, 504, 269, 260, 256, 239, 303,
	369, 411, 486, 405, 0, 354, 0, 0, 476, 384,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 309, 237, 311, 195, 396,
	477, 273, 0, 0, 0, 0, 0, 188, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 228, 0, 0,
	235, 0, 0, 0, 335, 344, 343, 324, 325, 327,
	329, 334, 341, 347, 0, 0, 0, 0, 0, 252,
	307, 259, 251, 501, 0, 0, 0, 0, 0, 0,
	0, 219, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 284, 0, 385,
	244, 0, 0, 0, 0, 541, 0, 0, 0, 0,
	0, 0, 0, 349, 0, 316, 191, 215, 0, 0,
	395, 441, 453, 0, 0, 0, 242, 0, 451, 409,
	520, 223, 271, 438, 415, 449, 422, 274, 0, 0,
	450, 356, 506, 432, 517, 542, 543, 250, 389, 529,
	490, 537, 558, 216, 247, 403, 483, 523, 473, 381,
	502, 503, 315, 472, 282, 194, 353, 548, 214, 459,
	355, 232, 221, 508, 526, 276, 436, 203, 485, 515,
	229, 463, 0, 0, 560, 205, 513, 482, 377, 312,
	313, 204, 0, 437, 255, 280, 245, 398, 510, 511,
	243, 561, 218, 536, 210, 0, 535, 391, 505, 514,
	378, 367, 209, 512, 376, 366, 320, 339, 340, 267,
	293, 429, 359, 430, 292, 294, 387, 386, 388, 198,
	524, 0, 199, 0, 478, 525, 562, 224, 225, 227,
	0, 266, 270, 278, 281, 289, 290, 299, 351, 402,
	428, 424, 433, 0, 500, 518, 530, 540, 546, 547,
	549, 550, 551, 552, 553, 555, 554, 390, 297, 474,
	319, 357, 0, 0, 408, 452, 230, 522, 475, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	563, 564, 565, 566, 567, 568, 569, 570, 571, 572,
	573, 574, 575, 576, 577, 578, 579, 580, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 581, 368, 465,
	519, 321, 333, 336, 326, 345, 0, 346, 322, 323,
	328, 330, 331, 332, 337, 338, 342, 348, 238, 201,
	374, 382, 499, 298, 206, 207, 208, 492, 493, 494,
	495, 533, 534, 538, 442, 443, 444, 445, 279, 528,
	295, 448, 447, 317, 318, 363, 431, 0, 190, 211,
	352, 0, 434, 275, 559, 532, 527, 197, 213, 0,
	249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 192, 193, 200, 212, 222, 226, 233, 248,
	263, 265, 272, 285, 296, 304, 305, 308, 314, 364,
	370, 371, 372, 373, 392, 393, 394, 397, 400, 401,
	404, 406, 407, 410, 414, 418, 419, 420, 421, 423,
	425, 435, 440, 454, 455, 456, 457, 458, 461, 462,
	467, 468, 469, 470, 471, 479, 480, 484, 507, 509,
	521, 539, 544, 460, 287, 288, 426, 427, 300, 301,
	556, 557, 286, 516, 545, 0, 0, 362, 0, 0,
	365, 268, 291, 306, 0, 531, 481, 217, 446, 277,
	240, 0, 0, 202, 236, 220, 246, 261, 264, 310,
	375, 383, 412, 417, 283, 258, 234, 439, 231, 464,
	487, 488, 489, 491, 379, 253, 416, 0, 0, 360,
	497, 498, 302,
}

var yyPact = [...]int{
	-1000, -1000, 4547, -1000, -439, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2100, 2133,
	-1000, -1000, -1000, -1000, 2336, -1000, 814, 1825, -1000, 2107,
	314, -1000, 46156, 568, -1000, 43568, 567, 323, 29334, -1000,
	225, -1000, 217, 44862, 229, -1000, -1000, -1000, -290, 18333,
	2048, 89, 83, 46156, -1000, -1000, -1000, -1000, 2298, 1811,
	-1000, 386, -1000, -1000, -1000, -1000, -1000, -1000, 42921, -1000,
	965, -1000, -1000, 2113, 2097, 2345, 713, 2043, -1000, 2195,
	1811, -1000, 18333, 2283, 2198, 17686, 17686, 470, -1000, -1000,
	343, -1000, -1000, 24805, 46156, 31922, 395, -1000, 2107, -1000,
	-1000, -1000, 111, -1000, 357, 1725, -1000, 1712, -1000, 937,
	948, 399, 525, 501, 398, 396, 394, 388, 384, 382,
	380, 364, 400, -1000, 759, 759, -118, -122, 2768, 549,
	455, 455, 794, 496, 2078, 2077, -1000, -1000, 759, 759,
	759, 393, 759, 759, 759, 759, 335, 334, 759, 759,
	759, 759, 759, 759, 759, 759, 759, 759, 759, 759,
	759, 759, 759, 759, 759, 512, 2107, 309, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 46156, 269, 46156, -1000, 633, 46156, 869, 869,
	97, 869, 869, 869, 869, 239, 650, 81, -1000, 220,
	327, 214, 302, 865, 237, -1000, -1000, 299, 865, 1607,
	-1000, 728, 186, -1000, 869, 869, -1000, 11838, 163, 11838,
	11838, -1000, 2083, -1000, -1000, -1000, -1000, -1000, 1135, -1000,
	-1000, -1000, -1000, -1000, 493, -1000, -1000, -1000, -1000, 44862,
	42274, -1000, -1000, 59, -1000, -1000, 1334, 1137, 18333, 1190,
	-1000, 1678, 688, -1000, -1000, -1000, -1000, -1000, 600, -1000,
	18980, 18980, 18980, 18980, -1000, -1000, 1727, 41627, 1727, 1727,
	18980, 1727, -1000, 18980, 1727, 1727, 1727, 18333, 1727, 1727,
	1727, 1727, -1000, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, -1000, -1000, -1000, -1000, 1727, 629, 1727, 1727, 1727,
	1727, 1727, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1727, 1727, 1727, 1727, 1727, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 20921,
	1351, 1345, 1343, -1000, 15745, 1727, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 46156, -1000, 1727, 255,
	44862, 44862, 368, 2195, 1811, -1000, 2298, 2244, 386, -1000,
	2229, 1410, 1471, 1267, 1811, 1680, 46156, -1000, 1747, -1000,
	-1000, -1000, -1000, 1989, 1213, 1602, -1000, -1000, -1000, -1000,
	1311, 18333, -1000, -1000, 2332, -1000, 22216, 627, 2330, 40980,
	-1000, 470, 470, 1709, 460, 47, -1000, -1000, -1000, -1000,
	777, 28687, -1000, -1000, -1000, -1000, 1588, 46156, -1000, -1000,
	3863, 978, -1000, 1823, -1000, 1585, -1000, 1776, 18333, 1783,
	552, 978, 530, 528, 519, -1000, -14, -1000, -1000, -1000,
	-1000, -1000, -1000, 759, 759, 759, -1000, 391, 2280, 314,
	7422, -1000, -1000, -1000, 40333, 1817, 978, -1000, 1813, -1000,
	880, 556, 657, 657, 978, -1000, -1000, 45509, 978, 872,
	856, 978, 978, 44862, 44862, -1000, 39686, -1000, 39039, 38392,
	1113, 44862, 37745, 37098, 36451, 35804, 35157, -1000, 1941, -1000,
	1865, -1000, -1000, -1000, 45509, 978, 978, 45509, 44862, 45509,
	46156, 978, -1000, -1000, 420, -1000, -1000, 1106, 1103, 1101,
	759, 759, 1091, 1568, 1562, 1559, 759, 759, 1088, 1557,
	30628, 1552, 304, 1082, 1076, 1072, 1078, 1538, 202, 1517,
	1063, 1034, 1065, 44862, 1808, 46156, -1000, 285, 789, 574,
	776, 2107, 2046, 1703, 491, 551, 978, 462, 462, 44862,
	-1000, 12491, -1000, -1000, 1508, 18333, -1000, 898, 865, 865,
	-1000, -1000, -1000, -1000, -1000, -1000, 869, 46156, 898, -1000,
	-1000, -1000, 865, 869, 46156, 869, 869, 869, 869, 865,
	865, 865, 869, 46156, 46156, 46156, 46156, 46156, 46156, 46156,
	46156, 46156, 11838, 728, 869, -307, -1000, 1501, -1000, 1949,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 11838, 11838, -1000, -1000,
	-1000, -1000, 216, -1000, 34510, 392, 770, -1000, 1701, 33863,
	-1000, -311, -314, -319, -320, -1000, -1000, -1000, -322, -328,
	-1000, -1000, -1000, 18333, 18333, 18333, 18333, -155, -1000, 1028,
	18980, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 222, 896,
	18980, 18980, 18980, 18980, 18980, 18980, 18980, 18980, 18980, 18980,
	18980, 18980, 18980, 18980, 18980, -1000, -1000, 26746, 8021, 8021,
	688, 688, 688, 688, -1000, -77, 1699, 45509, -1000, -1000,
	-1000, 618, 18333, 18333, 688, -1000, 978, 15745, 19627, -1000,
	-1000, 18333, 792, 1137, 45509, 18333, -1000, 1267, -1000, -1000,
	-1000, 1109, -1000, 847, 2082, 2082, 2082, 2082, 18333, 18333,
	18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333, 2082, 44862,
	44862, 1144, 18333, 18333, 18333, 18333, 18333, 18333, 14450, 18333,
	18333, 18980, 18333, 18333, 18333, 1267, 18333, 18333, 18333, 18333,
	18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333,
	18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333,
	18333, 18333, 18333, 1267, 18333, 1320, 18333, 18333, -1000, 13797,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333, 1267, 18333,
	18333, 18333, 18333, 18333, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1507, 1420, 1243, 18333, -1000, 1695,
	-1000, -96, 24158, 18333, 1465, 2325, 1861, 44862, -1000, -1000,
	-1000, 2195, -1000, 2195, 1507, 2193, 1988, -1000, -1000, -1000,
	2193, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1512,
	-1000, 46156, 1680, 2162, 44862, 1984, 1447, 390, -1000, 18333,
	18333, 1675, -1000, 1583, 46156, -1000, -155, -1000, 33216, -1000,
	-1000, 11185, 46156, 362, 46156, -1000, 23511, 32569, 389, 47,
	-1000, 1659, -1000, 57, 53, 15097, 687, -1000, -1000, -1000,
	2768, 20274, 1627, 687, 153, -1000, -1000, -1000, 1776, -1000,
	1776, 1776, 1776, 1776, 390, 390, 390, 390, -1000, -1000,
	-1000, -1000, -1000, 1797, 1796, -1000, 1776, 1776, 1776, 1776,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1795, 1795, 1795,
	1781, 1781, 442, -1000, 18333, 306, 31922, 2139, 1061, 1295,
	285, 467, 1859, 978, 978, 978, 467, -1000, 1207, 1184,
	1182, -1000, -428, 1673, -1000, -1000, 2278, -1000, -1000, 730,
	904, 903, 801, 44862, 267, 356, -1000, 448, -1000, 31922,
	978, 844, 657, 978, -1000, 978, -1000, -1000, -1000, -1000,
	-1000, 978, -1000, -1000, 1671, -1000, 1689, 941, 857, 932,
	829, 1671, -1000, -1000, -89, 1671, -1000, 1671, -1000, 1671,
	-1000, 1671, -1000, 1671, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 781, 227, -214, 44862, 267, 487, -1000,
	474, 26746, -1000, -1000, -1000, 26746, 26746, -1000, -1000, -1000,
	-1000, 1445, 1441, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -414, 46156, -1000, 281, 769, 340, 381, 333,
	46156, 342, 2221, 2209, 2207, 2186, 2175, 308, 317, 46156,
	46156, 462, 1938, 46156, 2142, 46156, -1000, -1000, -1000, -1000,
	-1000, 1137, 46156, -1000, -1000, 869, 869, -1000, -1000, 46156,
	869, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 869,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 46156, -1000, -1000, -1000, -1000,
	44862, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-98, 164, 51, 366, -1000, -1000, -1000, -1000, -1000, 2223,
	-1000, 1137, 830, 821, -1000, 1727, -1000, -1000, 1031, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 222, 18980, 18980, 18980,
	1238, 490, 1318, 1120, 1075, 1139, 1139, 735, 735, 692,
	692, 692, 692, 692, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1433, -1000, 1727, 45509, 1577, 13797, 1772, 1038,
	1267, 2919, -1000, 1547, 17686, 1547, 1415, 815, -1000, 18333,
	1267, 2912, -1000, -1000, 1267, 1267, 1267, 18333, -1000, -1000,
	18333, 18333, 18333, 18333, 1295, 1295, 1295, 1295, 1295, 1295,
	1295, 1295, 1295, 1295, 18333, 1670, 1669, 2320, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1488,
	1295, 1295, 1295, 1295, 1295, 18333, 1077, -1000, -1000, -1000,
	1373, 2897, 1156, 2890, 1295, 1295, -1000, 1295, 2871, 2853,
	1267, 1334, 1267, 1666, -1000, 2842, 1295, 2810, 2804, 2785,
	2101, 2770, 2744, 2738, 1295, 1295, 1295, 2007, 2724, 2713,
	2689, 2665, 2613, 2608, 2604, 2596, 2584, 1295, -157, 1295,
	1267, -1000, -1000, -1000, -1000, -1000, 2561, 1994, 1267, 1663,
	1727, 617, -1000, -1000, 1547, 1267, 1267, 1547, 1547, 2465,
	2395, 2312, 2287, 2279, 2263, 1295, 1295, -1000, 1295, 2240,
	2197, 1986, 1970, 1267, -1000, 1243, 46156, -1000, -286, -1000,
	26, 725, 1727, -1000, 30628, 1267, -1000, 7492, -1000, 1042,
	-1000, -1000, -1000, -1000, -1000, 28040, 1633, 2193, -1000, -1000,
	1727, 1545, -1000, -1000, 390, 128, 27393, 644, 644, 155,
	1137, 1137, 18333, -1000, -1000, -1000, -1000, -1000, -1000, 616,
	2308, 372, 1727, -1000, 1698, 3059, -1000, -1000, -1000, 2156,
	21569, -1000, -1000, 1727, 1727, 46156, 1640, 1616, -1000, 615,
	-1000, 1122, 1659, 47, 40, -1000, -1000, -1000, -1000, 1137,
	-1000, 1165, 363, 3917, -1000, 436, -1000, -1000, -1000, -1000,
	2057, 133, -1000, -1000, -1000, 243, 390, -1000, -1000, -1000,
	-1000, -1000, -1000, 1426, 1426, -1000, -1000, -1000, -1000, -1000,
	1050, -1000, -1000, -1000, 1046, -1000, -1000, 2192, 1894, 306,
	-1000, -1000, 759, 1423, -1000, -1000, 2066, 759, 759, 44862,
	-1000, -1000, 1611, 2139, 281, 46156, 810, 1935, -1000, 1859,
	1859, 1859, 46156, -1000, -1000, -1000, -1000, -1000, -1000, -418,
	85, 397, -1000, -1000, -1000, 6669, 44862, 1536, -1000, 260,
	-1000, 1609, -1000, 44862, -1000, 1534, 1794, 978, 978, -1000,
	-1000, -1000, 44862, 1727, -1000, -1000, -1000, -1000, 532, 2105,
	297, -1000, -1000, -181, -1000, -1000, 267, 260, 45509, 978,
	687, -1000, -1000, -1000, -1000, -1000, -419, 1532, 517, 271,
	365, 46156, 46156, 46156, 46156, 46156, 580, -1000, -1000, 67,
	-1000, -1000, 245, -1000, -1000, -1000, -1000, 245, -1000, -1000,
	-1000, -1000, 307, 473, -1000, 46156, 46156, 606, -1000, -1000,
	-1000, 865, -1000, -1000, 865, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2090, 46156, 39, -382, -1000,
	-378, 18333, -1000, -1000, -1000, -1000, 1095, 489, 1318, 18980,
	18980, 18980, -1000, -1000, -1000, 826, 826, 26746, -1000, 18333,
	-1000, -1000, -1000, -1000, 18333, 18333, 782, -1000, 18333, 1211,
	-1000, 18333, -1000, -1000, -1000, 1243, 1295, 1295, 1295, 1295,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1696, 18333, 18333, 18333, 1267, 349, -1000, -1000, -1000, -1000,
	-1000, 2317, -1000, 18333, -1000, 26746, 18333, 18333, 18333, -1000,
	-1000, -1000, 18333, 18333, -1000, -1000, 18333, 18333, -1000, 18333,
	18333, 18333, -1000, 18333, 18333, 18333, 18333, -1000, -1000, -1000,
	-1000, 18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333, 18333,
	18333, -1000, -1000, 31922, 108, -157, 1320, 108, 1320, -1000,
	-1000, 13144, -1000, -1000, -1000, -1000, -1000, 18333, 18333, 18333,
	18333, 18333, 18333, -1000, -1000, -1000, 18333, 18333, -1000, 18333,
	-1000, 18333, -1000, -1000, -1000, -1000, -1000, 725, -1000, 657,
	657, 657, 44862, -1000, -1000, -1000, -1000, 1657, -1000, 2215,
	-1000, 1998, 1997, 2311, 2308, -1000, 23511, 2193, -1000, -1000,
	44862, -280, -1000, 2041, 2004, 644, 644, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 10532, 2195, 18333, 1933, 45509, 151,
	-1000, 22864, 44862, 45509, 23511, 23511, 23511, 23511, 23511, -1000,
	1968, 1962, -1000, 1960, 1958, 1971, 46156, -1000, 1507, 1526,
	-1000, 18333, 25452, 1635, 23511, -1000, -1000, 23511, 46156, 9879,
	-1000, -1000, 36, 21, -1000, -1000, -1000, -1000, 2768, -1000,
	-1000, 1574, 2151, 2055, -1000, -1000, -1000, -1000, -1000, 1515,
	-1000, 1506, 1656, 1477, 227, -1000, 1777, 2088, 759, 759,
	-1000, 1044, -1000, 978, 1418, 1412, -1000, -1000, -1000, 513,
	-1000, 2129, 46156, 1924, 1923, 1906, -1000, -433, 1032, 1792,
	1730, 18333, 1786, 2276, 1642, 44862, -1000, -1000, 45509, -1000,
	282, -1000, 306, 44862, -1000, -1000, -1000, 356, 46156, -1000,
	6789, -1000, -1000, -1000, 260, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 46156, 287, -1000, 1782, 1131, -1000, -1000, 1848,
	-1000, -1000, -1000, -1000, 248, 329, 1403, 240, 1382, 240,
	-1000, 46156, 605, 1894, 46156, -1000, -1000, -1000, 869, 869,
	-1000, -1000, 2084, -1000, 978, 1295, 18980, 18980, -1000, 688,
	324, -137, 1776, 1776, -1000, 1776, 1781, -1000, 1776, 209,
	1776, 206, 1776, -1000, -1000, 1267, 1267, 1243, 17686, -1000,
	1961, 1356, -1000, 1137, 18333, 2188, -1000, -1000, -1000, -1000,
	-1000, -21, 2181, 2172, 1295, -1000, 1775, 1769, 18333, 1295,
	1267, 1948, 1295, 1295, 1295, 1295, -1000, 1137, 1243, 2168,
	1243, 1295, 1295, 2138, 326, 1295, 1459, 1459, 1459, 1459,
	1459, 1243, 1243, 1243, 1243, 44862, -1000, -157, -1000, -1000,
	-199, -201, -1000, 1267, -157, 1653, 1267, -1000, 1930, 1925,
	2095, 1903, 1295, 2056, 1295, 1295, 1295, 1892, -1000, 2216,
	2216, 2216, 1430, 1042, 46156, -1000, -1000, -1000, -1000, 2308,
	2304, 1648, -1000, -1000, 128, 461, -1000, 2029, 2004, -1000,
	2272, 2034, 2264, -1000, -1000, -1000, -1000, -1000, 1137, -1000,
	2109, 1590, -1000, 767, 1632, -1000, -1000, 17039, 1457, 1996,
	613, 1430, 1693, 3059, 1867, 1905, 3108, -1000, -1000, -1000,
	-1000, 1902, -1000, 1875, -1000, -1000, 1747, -1000, 1866, 362,
	23511, 1685, 1685, -1000, 597, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 944, 5429, 2342, -1000, 1374, -1000, 1121, 207,
	1029, -1000, -1000, 759, 759, -1000, 842, 832, -1000, 46156,
	1768, -1000, 390, 1370, 390, 1026, -1000, 1017, -1000, -1000,
	-1000, -1000, 1724, 1914, -1000, -1000, -1000, -1000, 46156, -1000,
	-1000, 46156, 46156, 46156, 1767, 2262, -1000, 18333, 1766, 763,
	2072, 44862, 44862, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 472, 759, -397, 315, 312, 759,
	759, 759, -434, -1000, -1000, 1368, 1359, -1000, -120, -1000,
	18333, -1000, -1000, -1000, 1110, 1110, 1351, 1345, 1343, -1000,
	1747, -1000, -1000, -1000, 1516, -1000, -1000, -97, 44862, 44862,
	44862, 44862, -1000, -1000, 977, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 688, 1267, 350,
	-100, 1267, -1000, -1000, 390, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 18333, -1000, 18333, -1000,
	1137, 18333, 2195, 1337, 18333, 18333, -1000, 1015, 1011, 1295,
	-1000, -1000, -1000, 18333, -1000, -1000, -1000, -1000, -1000, 18333,
	-1000, -1000, -1000, 18333, 212, 826, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1267, 359, -1000, -1000,
	-1000, -1000, 2310, -1000, 1267, 18333, -1000, -1000, 18333, -1000,
	18333, 18333, -1000, 18333, -1000, 18333, -1000, -1000, -1000, -1000,
	18333, 1727, 2062, 1727, 1727, 25452, -1000, -1000, 2304, 2297,
	2255, 2016, 2020, 2020, 2029, -1000, 2246, 2242, -1000, 1336,
	2230, 1333, 828, -1000, 45509, 18333, 151, -1000, 385, 44862,
	151, 44862, -1000, 2245, -1000, -1000, 18333, 1749, -1000, 18333,
	-1000, -1000, -1000, -1000, 8021, 2308, 1685, -1000, -1000, 700,
	-1000, 18333, -1000, -1000, -1000, 3938, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1307, 1300, -1000, -1000, 1748, 18333,
	-1000, -1000, -1000, 1472, 1460, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1747, -1000, -1000, -1000, -1000, 356, -423,
	2061, 44862, 994, -1000, 1332, 1642, 345, 151, 1291, 759,
	759, 759, 988, 983, 30628, 1326, -1000, 44862, 403, -1000,
	356, -1000, -132, -133, 1295, -1000, -1000, 2148, -1000, -1000,
	13144, -1000, -1000, 1739, 1854, -1000, -1000, -1000, -1000, 1983,
	-81, -110, -1000, -1000, -1000, 1295, 1295, 973, 1267, -1000,
	1295, 1295, 1431, 1421, -1000, 1295, 1243, 1820, -1000, 212,
	1267, 1898, -1000, -1000, 8021, -1000, -1000, 2245, 2228, 108,
	-1000, -1000, 266, 108, 1137, 1691, 1295, 1686, 1664, 1295,
	1295, 26099, -1000, 2227, 2201, 31275, 31275, 725, 2297, -171,
	18333, 18333, 2002, 966, -1000, -1000, -1000, -1000, 1259, 1227,
	-1000, 1224, -1000, 2340, -1000, 1137, -1000, 151, -1000, 587,
	1632, -1000, 2195, 1137, 44862, 1137, 129, 2245, -1000, 1295,
	-1000, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727, 1727,
	1727, -1000, -1000, 44862, 1778, -1000, -1000, 2147, 1305, 78,
	-1000, 1306, 1642, -1000, -1000, 150, -1000, 18333, -1000, 30628,
	1204, 1140, -1000, -1000, -1000, -1000, -434, -1000, -1000, -1000,
	-1000, -1000, -1000, 386, 1641, -1000, 743, 44862, 46156, -1000,
	1980, -1000, -1000, -1000, 18333, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 18333, -1000, 1267, 1895, -1000, -271, -1000,
	-399, 18333, -157, -1000, -1000, -157, -1000, 18333, -1000, -1000,
	18333, -1000, 18333, -1000, -1000, 1297, -1000, -1000, -1000, -1000,
	-1000, 1297, 1297, -1000, -171, -1000, 1639, -1000, 44862, 1137,
	1334, -1000, 960, -1000, -1000, -1000, -1000, -1000, 45509, 1632,
	44862, -1000, 1288, 1267, 1727, 2195, -1000, 1266, -1000, 386,
	-1000, 1735, 1730, -1000, -1000, -1000, 16392, -1000, -1000, -1000,
	-1000, -1000, 181, -93, 13144, 9226, 1248, -1000, -92, 1295,
	1243, -1000, -367, -1000, -1000, -1000, -1000, 208, -1000, -1000,
	1334, -1000, -1000, 1598, 1593, 1530, 29981, -1000, -1000, -1000,
	-1000, -171, -1000, -1000, 2145, -1000, -1000, 1214, -1000, -1000,
	25452, 44215, -1000, -75, 274, -93, 18333, 1732, 1267, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 28, -1000, -1000,
	585, -1000, -1000, -1000, 1848, -108, -1000, -1000, -1000, 201,
	-385, -192, -193, -1000, -1000, 18980, -1000, 18333, -1000, 18333,
	-1000, 18333, -1000, -1000, -1000, 44862, 1727, -1000, 1212, -1000,
	3738, -212, 1890, -1000, -32, -1000, -1000, -1000, 917, 1138,
	-1000, -1000, -1000, -1000, -1000, -1000, 1660, 44862, -1000, 415,
	-1000, -1000, 12491, -97, -115, 819, -1000, -1000, -1000, -1000,
	-1000, 1451, 1250, 1295, -1000, 44862, -1000, 44215, -207, 687,
	8021, -1000, 1889, 1886, 2329, -1000, -1000, -1000, -1000, -1000,
	-1000, -436, 1192, 283, -1000, -1000, -1000, 201, -1000, 18333,
	-1000, 18333, -1000, 1267, -1000, -1000, 2126, 129, -1000, 2331,
	-1000, 2338, 734, 734, -1000, 981, -436, -1000, -1000, 1295,
	1295, -1000, -219, -1000, -1000, -1000, -1000, -1000, 404, 1074,
	-1000, -1000, -1000, -1000, -1000, 8021, -1000, -1000, -1000, 218,
	218, -1000, -1000,
}

var yyPgo = [...]int{
	0, 2881, 2878, 39, 1, 36, 35, 2876, 40, 125,
	209, 28, 216, 114, 2874, 2871, 2870, 2868, 2867, 2864,
	2861, 198, 194, 189, 2860, 2849, 2848, 2840, 2839, 2838,
	2837, 2836, 2833, 2827, 187, 181, 206, 2822, 2821, 2811,
	148, 213, 99, 102, 205, 2810, 2809, 89, 2805, 2803,
	2799, 201, 200, 197, 860, 2798, 199, 132, 63, 2797,
	2793, 2792, 2791, 2788, 2782, 2780, 2779, 2778, 2775, 2770,
	2769, 2768, 2767, 2766, 2765, 2761, 290, 2760, 2759, 20,
	2756, 95, 2751, 2744, 2741, 2740, 7, 2739, 2736, 13,
	42, 2734, 2732, 52, 2731, 2730, 2729, 2727, 2724, 17,
	2722, 21, 2721, 37, 2720, 2719, 137, 2718, 2716, 2713,
	44, 2711, 2710, 2707, 2706, 2705, 2704, 2699, 158, 2698,
	2695, 2694, 185, 212, 2691, 2689, 182, 126, 88, 2688,
	2686, 119, 203, 2682, 143, 2671, 2661, 2656, 169, 2655,
	2416, 2652, 2651, 80, 85, 2650, 50, 2647, 2635, 10,
	101, 74, 9, 139, 146, 2634, 2627, 79, 97, 2619,
	127, 2618, 2614, 113, 94, 2613, 106, 103, 2611, 2610,
	12, 4, 2609, 75, 6, 77, 73, 2603, 2599, 128,
	2595, 2594, 2593, 110, 2592, 2591, 4816, 2590, 100, 151,
	115, 86, 2584, 48, 83, 2582, 2580, 2579, 2577, 2574,
	56, 2571, 2570, 2569, 157, 38, 183, 2568, 46, 78,
	57, 150, 2566, 62, 111, 211, 184, 2560, 2558, 156,
	152, 2555, 2554, 71, 49, 45, 2550, 124, 144, 140,
	59, 123, 153, 2548, 2547, 69, 87, 2543, 2538, 2533,
	2532, 186, 2530, 2525, 84, 2524, 67, 2520, 188, 2516,
	27, 60, 2515, 53, 177, 2514, 90, 2507, 2506, 72,
	142, 81, 25, 2504, 173, 2502, 65, 179, 138, 175,
	2500, 2499, 2497, 2494, 208, 361, 2493, 2492, 145, 191,
	161, 165, 98, 2490, 352, 2489, 2481, 14, 2, 2480,
	68, 5765, 2473, 41, 180, 2471, 2470, 5314, 16, 47,
	29, 2468, 134, 2467, 2465, 2464, 2463, 217, 210, 129,
	178, 70, 2458, 2456, 2452, 15, 2446, 2443, 2433, 2430,
	2425, 2424, 92, 34, 33, 32, 251, 82, 18, 112,
	176, 93, 2423, 2422, 2419, 136, 154, 2417, 172, 170,
	149, 171, 2415, 192, 159, 133, 2414, 96, 31, 2412,
	2411, 2408, 2407, 109, 2406, 2401, 2396, 2394, 174, 160,
	135, 107, 2393, 105, 131, 168, 167, 51, 2392, 54,
	2391, 2390, 30, 204, 26, 2385, 23, 121, 166, 2384,
	4064, 202, 2383, 19, 351, 162, 2380, 2378, 3, 11,
	8, 2377, 2376, 2374, 2373, 155, 2372, 2371, 2365, 2363,
	24, 64, 22, 5, 130, 104, 2361, 2360, 2853, 0,
	147, 2359, 214,
}

//line sql.y:7884
type yySymType struct {
	union             any
	empty             struct{}
	LengthScaleOption LengthScaleOption
	tableName         TableName
	identifierCS      IdentifierCS
	str               string
	strs              []string
	vindexParam       VindexParam
	jsonObjectParam   *JSONObjectParam
	identifierCI      IdentifierCI
	joinCondition     *JoinCondition
	databaseOption    DatabaseOption
	columnType        ColumnType
	columnCharset     ColumnCharset
	yys               int
}

func (st *yySymType) JSONTableExprUnion() *JSONTableExpr {
	v, _ := st.union.(*JSONTableExpr)
	return v
}

func (st *yySymType) aliasedTableNameUnion() *AliasedTableExpr {
	v, _ := st.union.(*AliasedTableExpr)
	return v
}

func (st *yySymType) alterDatabaseUnion() *AlterDatabase {
	v, _ := st.union.(*AlterDatabase)
	return v
}

func (st *yySymType) alterMigrationUnion() *AlterMigration {
	v, _ := st.union.(*AlterMigration)
	return v
}

func (st *yySymType) alterOptionUnion() AlterOption {
	v, _ := st.union.(AlterOption)
	return v
}

func (st *yySymType) alterOptionsUnion() []AlterOption {
	v, _ := st.union.([]AlterOption)
	return v
}

func (st *yySymType) alterTableUnion() *AlterTable {
	v, _ := st.union.(*AlterTable)
	return v
}

func (st *yySymType) argumentLessWindowExprTypeUnion() ArgumentLessWindowExprType {
	v, _ := st.union.(ArgumentLessWindowExprType)
	return v
}

func (st *yySymType) boolValUnion() BoolVal {
	v, _ := st.union.(BoolVal)
	return v
}

func (st *yySymType) booleanUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) characteristicUnion() Characteristic {
	v, _ := st.union.(Characteristic)
	return v
}

func (st *yySymType) characteristicsUnion() []Characteristic {
	v, _ := st.union.([]Characteristic)
	return v
}

func (st *yySymType) colKeyOptUnion() ColumnKeyOption {
	v, _ := st.union.(ColumnKeyOption)
	return v
}

func (st *yySymType) colNameUnion() *ColName {
	v, _ := st.union.(*ColName)
	return v
}

func (st *yySymType) colNamesUnion() []*ColName {
	v, _ := st.union.([]*ColName)
	return v
}

func (st *yySymType) colTupleUnion() ColTuple {
	v, _ := st.union.(ColTuple)
	return v
}

func (st *yySymType) columnDefinitionUnion() *ColumnDefinition {
	v, _ := st.union.(*ColumnDefinition)
	return v
}

func (st *yySymType) columnDefinitionsUnion() []*ColumnDefinition {
	v, _ := st.union.([]*ColumnDefinition)
	return v
}

func (st *yySymType) columnFormatUnion() ColumnFormat {
	v, _ := st.union.(ColumnFormat)
	return v
}

func (st *yySymType) columnStorageUnion() ColumnStorage {
	v, _ := st.union.(ColumnStorage)
	return v
}

func (st *yySymType) columnTypeOptionsUnion() *ColumnTypeOptions {
	v, _ := st.union.(*ColumnTypeOptions)
	return v
}

func (st *yySymType) columnsUnion() Columns {
	v, _ := st.union.(Columns)
	return v
}

func (st *yySymType) comparisonExprOperatorUnion() ComparisonExprOperator {
	v, _ := st.union.(ComparisonExprOperator)
	return v
}

func (st *yySymType) constraintDefinitionUnion() *ConstraintDefinition {
	v, _ := st.union.(*ConstraintDefinition)
	return v
}

func (st *yySymType) constraintInfoUnion() ConstraintInfo {
	v, _ := st.union.(ConstraintInfo)
	return v
}

func (st *yySymType) convertTypeUnion() *ConvertType {
	v, _ := st.union.(*ConvertType)
	return v
}

func (st *yySymType) createDatabaseUnion() *CreateDatabase {
	v, _ := st.union.(*CreateDatabase)
	return v
}

func (st *yySymType) createTableUnion() *CreateTable {
	v, _ := st.union.(*CreateTable)
	return v
}

func (st *yySymType) cteUnion() *CommonTableExpr {
	v, _ := st.union.(*CommonTableExpr)
	return v
}

func (st *yySymType) ctesUnion() []*CommonTableExpr {
	v, _ := st.union.([]*CommonTableExpr)
	return v
}

func (st *yySymType) databaseOptionsUnion() []DatabaseOption {
	v, _ := st.union.([]DatabaseOption)
	return v
}

func (st *yySymType) definerUnion() *Definer {
	v, _ := st.union.(*Definer)
	return v
}

func (st *yySymType) derivedTableUnion() *DerivedTable {
	v, _ := st.union.(*DerivedTable)
	return v
}

func (st *yySymType) explainTypeUnion() ExplainType {
	v, _ := st.union.(ExplainType)
	return v
}

func (st *yySymType) exprUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) exprsUnion() Exprs {
	v, _ := st.union.(Exprs)
	return v
}

func (st *yySymType) firstOrLastValueExprTypeUnion() FirstOrLastValueExprType {
	v, _ := st.union.(FirstOrLastValueExprType)
	return v
}

func (st *yySymType) frameClauseUnion() *FrameClause {
	v, _ := st.union.(*FrameClause)
	return v
}

func (st *yySymType) framePointUnion() *FramePoint {
	v, _ := st.union.(*FramePoint)
	return v
}

func (st *yySymType) framePointTypeUnion() FramePointType {
	v, _ := st.union.(FramePointType)
	return v
}

func (st *yySymType) frameUnitTypeUnion() FrameUnitType {
	v, _ := st.union.(FrameUnitType)
	return v
}

func (st *yySymType) fromFirstLastClauseUnion() *FromFirstLastClause {
	v, _ := st.union.(*FromFirstLastClause)
	return v
}

func (st *yySymType) fromFirstLastTypeUnion() FromFirstLastType {
	v, _ := st.union.(FromFirstLastType)
	return v
}

func (st *yySymType) ignoreUnion() Ignore {
	v, _ := st.union.(Ignore)
	return v
}

func (st *yySymType) indexColumnUnion() *IndexColumn {
	v, _ := st.union.(*IndexColumn)
	return v
}

func (st *yySymType) indexColumnsUnion() []*IndexColumn {
	v, _ := st.union.([]*IndexColumn)
	return v
}

func (st *yySymType) indexDefinitionUnion() *IndexDefinition {
	v, _ := st.union.(*IndexDefinition)
	return v
}

func (st *yySymType) indexHintUnion() *IndexHint {
	v, _ := st.union.(*IndexHint)
	return v
}

func (st *yySymType) indexHintForTypeUnion() IndexHintForType {
	v, _ := st.union.(IndexHintForType)
	return v
}

func (st *yySymType) indexHintsUnion() IndexHints {
	v, _ := st.union.(IndexHints)
	return v
}

func (st *yySymType) indexInfoUnion() *IndexInfo {
	v, _ := st.union.(*IndexInfo)
	return v
}

func (st *yySymType) indexOptionUnion() *IndexOption {
	v, _ := st.union.(*IndexOption)
	return v
}

func (st *yySymType) indexOptionsUnion() []*IndexOption {
	v, _ := st.union.([]*IndexOption)
	return v
}

func (st *yySymType) insUnion() *Insert {
	v, _ := st.union.(*Insert)
	return v
}

func (st *yySymType) insertActionUnion() InsertAction {
	v, _ := st.union.(InsertAction)
	return v
}

func (st *yySymType) integerUnion() int {
	v, _ := st.union.(int)
	return v
}

func (st *yySymType) intervalTypeUnion() IntervalTypes {
	v, _ := st.union.(IntervalTypes)
	return v
}

func (st *yySymType) isExprOperatorUnion() IsExprOperator {
	v, _ := st.union.(IsExprOperator)
	return v
}

func (st *yySymType) isolationLevelUnion() IsolationLevel {
	v, _ := st.union.(IsolationLevel)
	return v
}

func (st *yySymType) joinTypeUnion() JoinType {
	v, _ := st.union.(JoinType)
	return v
}

func (st *yySymType) jsonObjectParamsUnion() []*JSONObjectParam {
	v, _ := st.union.([]*JSONObjectParam)
	return v
}

func (st *yySymType) jtColumnDefinitionUnion() *JtColumnDefinition {
	v, _ := st.union.(*JtColumnDefinition)
	return v
}

func (st *yySymType) jtColumnListUnion() []*JtColumnDefinition {
	v, _ := st.union.([]*JtColumnDefinition)
	return v
}

func (st *yySymType) jtOnResponseUnion() *JtOnResponse {
	v, _ := st.union.(*JtOnResponse)
	return v
}

func (st *yySymType) lagLeadExprTypeUnion() LagLeadExprType {
	v, _ := st.union.(LagLeadExprType)
	return v
}

func (st *yySymType) limitUnion() *Limit {
	v, _ := st.union.(*Limit)
	return v
}

func (st *yySymType) literalUnion() *Literal {
	v, _ := st.union.(*Literal)
	return v
}

func (st *yySymType) lockUnion() Lock {
	v, _ := st.union.(Lock)
	return v
}

func (st *yySymType) lockTypeUnion() LockType {
	v, _ := st.union.(LockType)
	return v
}

func (st *yySymType) matchActionUnion() MatchAction {
	v, _ := st.union.(MatchAction)
	return v
}

func (st *yySymType) matchExprOptionUnion() MatchExprOption {
	v, _ := st.union.(MatchExprOption)
	return v
}

func (st *yySymType) namedWindowUnion() *NamedWindow {
	v, _ := st.union.(*NamedWindow)
	return v
}

func (st *yySymType) namedWindowsUnion() NamedWindows {
	v, _ := st.union.(NamedWindows)
	return v
}

func (st *yySymType) nullTreatmentClauseUnion() *NullTreatmentClause {
	v, _ := st.union.(*NullTreatmentClause)
	return v
}

func (st *yySymType) nullTreatmentTypeUnion() NullTreatmentType {
	v, _ := st.union.(NullTreatmentType)
	return v
}

func (st *yySymType) optLikeUnion() *OptLike {
	v, _ := st.union.(*OptLike)
	return v
}

func (st *yySymType) optValUnion() Expr {
	v, _ := st.union.(Expr)
	return v
}

func (st *yySymType) orderUnion() *Order {
	v, _ := st.union.(*Order)
	return v
}

func (st *yySymType) orderByUnion() OrderBy {
	v, _ := st.union.(OrderBy)
	return v
}

func (st *yySymType) orderDirectionUnion() OrderDirection {
	v, _ := st.union.(OrderDirection)
	return v
}

func (st *yySymType) overClauseUnion() *OverClause {
	v, _ := st.union.(*OverClause)
	return v
}

func (st *yySymType) partDefUnion() *PartitionDefinition {
	v, _ := st.union.(*PartitionDefinition)
	return v
}

func (st *yySymType) partDefsUnion() []*PartitionDefinition {
	v, _ := st.union.([]*PartitionDefinition)
	return v
}

func (st *yySymType) partSpecUnion() *PartitionSpec {
	v, _ := st.union.(*PartitionSpec)
	return v
}

func (st *yySymType) partSpecsUnion() []*PartitionSpec {
	v, _ := st.union.([]*PartitionSpec)
	return v
}

func (st *yySymType) partitionByTypeUnion() PartitionByType {
	v, _ := st.union.(PartitionByType)
	return v
}

func (st *yySymType) partitionDefinitionOptionsUnion() *PartitionDefinitionOptions {
	v, _ := st.union.(*PartitionDefinitionOptions)
	return v
}

func (st *yySymType) partitionEngineUnion() *PartitionEngine {
	v, _ := st.union.(*PartitionEngine)
	return v
}

func (st *yySymType) partitionOptionUnion() *PartitionOption {
	v, _ := st.union.(*PartitionOption)
	return v
}

func (st *yySymType) partitionValueRangeUnion() *PartitionValueRange {
	v, _ := st.union.(*PartitionValueRange)
	return v
}

func (st *yySymType) partitionsUnion() Partitions {
	v, _ := st.union.(Partitions)
	return v
}

func (st *yySymType) referenceActionUnion() ReferenceAction {
	v, _ := st.union.(ReferenceAction)
	return v
}

func (st *yySymType) referenceDefinitionUnion() *ReferenceDefinition {
	v, _ := st.union.(*ReferenceDefinition)
	return v
}

func (st *yySymType) renameTablePairsUnion() []*RenameTablePair {
	v, _ := st.union.([]*RenameTablePair)
	return v
}

func (st *yySymType) revertMigrationUnion() *RevertMigration {
	v, _ := st.union.(*RevertMigration)
	return v
}

func (st *yySymType) scopeUnion() Scope {
	v, _ := st.union.(Scope)
	return v
}

func (st *yySymType) selStmtUnion() SelectStatement {
	v, _ := st.union.(SelectStatement)
	return v
}

func (st *yySymType) selectExprUnion() SelectExpr {
	v, _ := st.union.(SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() SelectExprs {
	v, _ := st.union.(SelectExprs)
	return v
}

func (st *yySymType) selectIntoUnion() *SelectInto {
	v, _ := st.union.(*SelectInto)
	return v
}

func (st *yySymType) setExprUnion() *SetExpr {
	v, _ := st.union.(*SetExpr)
	return v
}

func (st *yySymType) setExprsUnion() SetExprs {
	v, _ := st.union.(SetExprs)
	return v
}

func (st *yySymType) showFilterUnion() *ShowFilter {
	v, _ := st.union.(*ShowFilter)
	return v
}

func (st *yySymType) starExprUnion() StarExpr {
	v, _ := st.union.(StarExpr)
	return v
}

func (st *yySymType) statementUnion() Statement {
	v, _ := st.union.(Statement)
	return v
}

func (st *yySymType) subPartitionUnion() *SubPartition {
	v, _ := st.union.(*SubPartition)
	return v
}

func (st *yySymType) subPartitionDefinitionUnion() *SubPartitionDefinition {
	v, _ := st.union.(*SubPartitionDefinition)
	return v
}

func (st *yySymType) subPartitionDefinitionOptionsUnion() *SubPartitionDefinitionOptions {
	v, _ := st.union.(*SubPartitionDefinitionOptions)
	return v
}

func (st *yySymType) subPartitionDefinitionsUnion() SubPartitionDefinitions {
	v, _ := st.union.(SubPartitionDefinitions)
	return v
}

func (st *yySymType) subqueryUnion() *Subquery {
	v, _ := st.union.(*Subquery)
	return v
}

func (st *yySymType) tableAndLockTypeUnion() *TableAndLockType {
	v, _ := st.union.(*TableAndLockType)
	return v
}

func (st *yySymType) tableAndLockTypesUnion() TableAndLockTypes {
	v, _ := st.union.(TableAndLockTypes)
	return v
}

func (st *yySymType) tableExprUnion() TableExpr {
	v, _ := st.union.(TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() TableExprs {
	v, _ := st.union.(TableExprs)
	return v
}

func (st *yySymType) tableNamesUnion() TableNames {
	v, _ := st.union.(TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() *TableOption {
	v, _ := st.union.(*TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() TableOptions {
	v, _ := st.union.(TableOptions)
	return v
}

func (st *yySymType) tableSpecUnion() *TableSpec {
	v, _ := st.union.(*TableSpec)
	return v
}

func (st *yySymType) trimTypeUnion() TrimType {
	v, _ := st.union.(TrimType)
	return v
}

func (st *yySymType) updateExprUnion() *UpdateExpr {
	v, _ := st.union.(*UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() UpdateExprs {
	v, _ := st.union.(UpdateExprs)
	return v
}

func (st *yySymType) valTupleUnion() ValTuple {
	v, _ := st.union.(ValTuple)
	return v
}

func (st *yySymType) valuesUnion() Values {
	v, _ := st.union.(Values)
	return v
}

func (st *yySymType) variableUnion() *Variable {
	v, _ := st.union.(*Variable)
	return v
}

func (st *yySymType) variablesUnion() []*Variable {
	v, _ := st.union.([]*Variable)
	return v
}

func (st *yySymType) vindexParamsUnion() []VindexParam {
	v, _ := st.union.([]VindexParam)
	return v
}

func (st *yySymType) whenUnion() *When {
	v, _ := st.union.(*When)
	return v
}

func (st *yySymType) whensUnion() []*When {
	v, _ := st.union.([]*When)
	return v
}

func (st *yySymType) windowDefinitionUnion() *WindowDefinition {
	v, _ := st.union.(*WindowDefinition)
	return v
}

func (st *yySymType) windowDefinitionsUnion() WindowDefinitions {
	v, _ := st.union.(WindowDefinitions)
	return v
}

func (st *yySymType) windowSpecificationUnion() *WindowSpecification {
	v, _ := st.union.(*WindowSpecification)
	return v
}

func (st *yySymType) withUnion() *With {
	v, _ := st.union.(*With)
	return v
}

var yyR1 = [...]int{
	0, 406, 407, 407, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 256, 380,
	381, 381, 254, 254, 32, 71, 34, 34, 33, 33,
	36, 36, 35, 8, 8, 8, 9, 9, 9, 9,
	9, 9, 9, 9, 10, 10, 10, 10, 10, 11,
	11, 11, 11, 13, 13, 13, 13, 13, 19, 20,
	12, 12, 21, 21, 104, 104, 22, 23, 23, 23,
	23, 410, 410, 181, 181, 179, 179, 180, 180, 259,
	259, 24, 25, 25, 269, 269, 268, 268, 268, 270,
	270, 270, 270, 310, 310, 310, 26, 26, 26, 26,
	26, 124, 124, 383, 383, 382, 376, 376, 375, 375,
	374, 379, 379, 378, 378, 377, 38, 39, 48, 48,
	48, 48, 49, 50, 384, 384, 349, 55, 55, 54,
	54, 54, 54, 54, 54, 56, 56, 52, 52, 51,
	51, 53, 53, 351, 351, 337, 337, 350, 350, 350,
	350, 350, 350, 350, 336, 336, 135, 135, 233, 233,
	233, 233, 233, 233, 233, 233, 233, 233, 233, 233,
	233, 233, 233, 233, 233, 399, 399, 399, 398, 398,
	234, 234, 234, 234, 234, 234, 234, 234, 145, 145,
	157, 157, 157, 157, 157, 143, 143, 144, 142, 142,
	142, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	403, 403, 403, 403, 403, 403, 403, 403, 403, 403,
	156, 156, 152, 152, 152, 153, 153, 153, 154, 154,
	400, 400, 400, 400, 315, 315, 315, 315, 318, 318,
	316, 316, 316, 316, 316, 316, 316, 316, 316, 317,
	317, 317, 317, 317, 319, 319, 319, 319, 319, 320,
	320, 320, 320, 320, 320, 320, 320, 320, 320, 320,
	320, 320, 320, 320, 320, 321, 321, 321, 321, 321,
	321, 321, 321, 335, 335, 322, 322, 330, 330, 331,
	331, 331, 332, 332, 332, 333, 333, 327, 327, 327,
	327, 327, 327, 327, 327, 327, 329, 329, 328, 328,
	328, 338, 363, 363, 362, 362, 360, 360, 360, 360,
	360, 360, 360, 360, 347, 347, 357, 357, 357, 357,
	357, 346, 346, 342, 342, 342, 343, 343, 344, 344,
	341, 341, 345, 345, 359, 359, 358, 358, 339, 339,
	340, 340, 365, 401, 401, 401, 401, 401, 402, 402,
	366, 391, 393, 393, 393, 392, 392, 389, 390, 388,
	388, 388, 388, 388, 81, 81, 81, 282, 282, 283,
	283, 355, 355, 354, 354, 354, 356, 356, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 353,
	353, 353, 353, 353, 353, 353, 353, 353, 353, 277,
	277, 277, 387, 387, 387, 387, 387, 387, 386, 386,
	386, 352, 352, 352, 352, 385, 385, 57, 57, 214,
	214, 404, 404, 405, 405, 405, 45, 45, 45, 45,
	45, 45, 44, 44, 44, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 40, 40, 40, 40,
	40, 40, 40, 40, 40, 40, 46, 46, 41, 41,
	41, 41, 41, 41, 41, 41, 41, 41, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 27, 27, 27, 27,
	27, 27, 27, 27, 27, 27, 106, 106, 107, 107,
	107, 107, 109, 109, 109, 368, 368, 58, 58, 3,
	3, 169, 171, 172, 172, 170, 170, 170, 170, 170,
	170, 60, 60, 59, 59, 174, 173, 175, 175, 175,
	1, 1, 2, 2, 4, 4, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 373, 373,
	373, 373, 373, 373, 373, 373, 373, 373, 334, 334,
	334, 367, 367, 369, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 112, 111, 111, 110, 113, 113,
	113, 113, 113, 113, 113, 113, 371, 371, 371, 61,
	61, 372, 323, 324, 325, 5, 6, 348, 370, 120,
	120, 28, 37, 37, 29, 29, 29, 29, 30, 30,
	62, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 63,
	63, 63, 276, 276, 285, 285, 275, 275, 302, 302,
	302, 278, 278, 278, 279, 279, 397, 397, 397, 272,
	272, 64, 64, 64, 303, 303, 303, 303, 66, 66,
	67, 68, 68, 305, 305, 306, 306, 69, 70, 82,
	82, 82, 82, 82, 82, 82, 105, 105, 105, 15,
	15, 15, 15, 78, 78, 78, 14, 14, 65, 65,
	72, 394, 394, 395, 396, 396, 396, 396, 73, 75,
	31, 31, 31, 31, 31, 31, 130, 130, 118, 118,
	118, 118, 118, 118, 118, 118, 118, 118, 118, 118,
	125, 125, 125, 119, 119, 411, 76, 77, 77, 123,
	123, 123, 116, 116, 116, 122, 122, 122, 16, 16,
	17, 258, 258, 18, 18, 127, 127, 129, 129, 129,
	129, 129, 131, 131, 131, 131, 131, 131, 131, 126,
	126, 290, 289, 128, 128, 128, 128, 295, 295, 295,
	294, 294, 163, 163, 165, 164, 164, 166, 166, 167,
	167, 167, 167, 212, 212, 189, 189, 251, 251, 252,
	252, 250, 250, 257, 257, 253, 253, 253, 253, 260,
	260, 168, 168, 168, 168, 176, 176, 177, 177, 178,
	178, 304, 304, 300, 300, 300, 299, 299, 182, 182,
	182, 184, 183, 183, 183, 183, 185, 185, 187, 187,
	186, 186, 188, 193, 193, 192, 192, 190, 190, 190,
	190, 191, 191, 191, 191, 194, 194, 140, 140, 140,
	140, 140, 140, 140, 155, 155, 155, 155, 158, 158,
	158, 158, 158, 158, 158, 158, 158, 158, 158, 241,
	241, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 149,
	217, 217, 216, 216, 83, 83, 83, 84, 84, 85,
	85, 85, 85, 85, 86, 86, 86, 86, 86, 141,
	141, 88, 88, 87, 87, 207, 207, 292, 292, 89,
	90, 90, 93, 93, 92, 91, 91, 97, 97, 94,
	94, 96, 96, 95, 98, 98, 99, 100, 100, 273,
	273, 195, 195, 203, 203, 203, 203, 196, 196, 196,
	196, 196, 196, 196, 204, 204, 204, 211, 205, 205,
	201, 201, 199, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 200, 200,
	200, 200, 200, 200, 200, 200, 200, 200, 160, 160,
	160, 160, 222, 222, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 148,
	148, 161, 161, 161, 161, 162, 162, 162, 162, 162,
	162, 162, 312, 312, 115, 115, 115, 115, 115, 115,
	115, 115, 115, 115, 115, 115, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 412, 412, 326, 326, 326,
	326, 202, 202, 202, 202, 202, 121, 121, 121, 121,
	121, 309, 309, 309, 313, 313, 313, 311, 311, 311,
	311, 311, 311, 311, 311, 311, 311, 311, 311, 311,
	311, 311, 314, 314, 220, 220, 117, 117, 218, 218,
	219, 221, 221, 213, 213, 213, 213, 215, 215, 198,
	198, 198, 223, 223, 224, 224, 101, 102, 102, 103,
	103, 225, 225, 227, 226, 226, 228, 229, 229, 229,
	230, 230, 231, 231, 231, 47, 47, 47, 47, 47,
	42, 42, 42, 42, 43, 43, 43, 43, 132, 132,
	132, 132, 134, 134, 133, 133, 79, 79, 80, 80,
	80, 138, 138, 139, 139, 139, 136, 136, 137, 137,
	248, 248, 232, 232, 232, 239, 239, 239, 235, 235,
	237, 237, 237, 238, 238, 238, 236, 245, 245, 247,
	247, 246, 246, 242, 242, 243, 243, 244, 244, 244,
	240, 240, 197, 197, 197, 197, 197, 249, 249, 249,
	249, 261, 261, 208, 208, 210, 210, 209, 209, 159,
	262, 262, 266, 263, 263, 267, 267, 267, 267, 255,
	255, 255, 264, 264, 265, 265, 296, 296, 296, 271,
	271, 284, 284, 280, 280, 281, 281, 274, 274, 286,
	286, 286, 74, 206, 206, 364, 364, 361, 291, 291,
	293, 293, 297, 297, 301, 301, 298, 298, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 287, 287, 287,
	287, 287, 287, 287, 287, 287, 287, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 288,
	288, 288, 288, 288, 288, 288, 288, 288, 288, 408,
	409, 307, 308, 308, 308,
}

var yyR2 = [...]int{
	0, 3, 0, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 1,
	0, 1, 1, 1, 2, 3, 2, 3, 0, 1,
	3, 1, 4, 3, 3, 4, 3, 2, 3, 4,
	3, 4, 2, 7, 1, 3, 3, 3, 3, 1,
	2, 1, 1, 3, 2, 3, 3, 2, 5, 7,
	10, 9, 7, 8, 1, 1, 10, 11, 9, 8,
	8, 1, 1, 1, 3, 1, 3, 1, 3, 0,
	4, 3, 5, 4, 1, 3, 3, 2, 2, 2,
	2, 2, 1, 1, 1, 1, 2, 2, 6, 12,
	2, 0, 2, 0, 2, 1, 0, 2, 1, 3,
	3, 0, 1, 1, 3, 3, 6, 4, 7, 8,
	8, 8, 6, 3, 1, 1, 5, 0, 1, 1,
	1, 1, 2, 2, 2, 0, 1, 4, 4, 4,
	4, 4, 4, 2, 4, 1, 3, 1, 1, 3,
	4, 3, 3, 3, 5, 10, 0, 2, 0, 2,
	3, 5, 3, 4, 2, 3, 2, 3, 3, 3,
	3, 2, 2, 4, 4, 1, 1, 1, 1, 1,
	0, 2, 2, 3, 3, 2, 2, 2, 1, 1,
	2, 2, 2, 2, 2, 1, 1, 1, 1, 2,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 3, 1, 1, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 2, 2, 2, 2, 3,
	3, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 5, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 3, 0, 5, 0,
	3, 5, 0, 1, 1, 0, 1, 0, 3, 3,
	2, 2, 2, 1, 2, 2, 0, 1, 0, 2,
	2, 5, 0, 1, 1, 2, 1, 3, 2, 1,
	1, 3, 3, 3, 0, 1, 4, 3, 3, 4,
	2, 0, 2, 1, 1, 1, 1, 1, 0, 1,
	1, 1, 0, 1, 1, 3, 3, 4, 3, 1,
	3, 1, 7, 6, 7, 7, 8, 8, 0, 1,
	5, 2, 1, 1, 1, 0, 1, 3, 3, 1,
	1, 2, 2, 2, 0, 1, 1, 1, 2, 0,
	1, 0, 1, 1, 3, 2, 1, 2, 3, 3,
	3, 4, 4, 3, 3, 3, 3, 4, 4, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 5, 0,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 1, 0, 1, 0, 1, 0,
	2, 0, 2, 0, 2, 2, 0, 1, 5, 1,
	3, 7, 1, 3, 3, 1, 2, 2, 2, 5,
	5, 5, 6, 8, 5, 5, 4, 4, 4, 6,
	5, 5, 5, 2, 2, 2, 2, 3, 3, 3,
	4, 3, 3, 1, 3, 5, 1, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 3, 4,
	4, 2, 11, 3, 6, 8, 6, 6, 6, 13,
	8, 6, 10, 5, 5, 5, 7, 5, 5, 5,
	5, 5, 7, 7, 5, 5, 0, 6, 5, 6,
	4, 5, 0, 8, 9, 0, 3, 0, 1, 0,
	3, 8, 4, 1, 3, 3, 6, 7, 7, 8,
	4, 0, 1, 0, 1, 3, 3, 1, 1, 2,
	1, 1, 0, 2, 0, 2, 5, 3, 7, 4,
	4, 4, 4, 3, 3, 3, 7, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 0, 2,
	2, 1, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 3, 1, 3, 3, 0, 2,
	2, 2, 2, 2, 2, 2, 4, 4, 3, 0,
	1, 4, 3, 4, 4, 3, 3, 3, 2, 1,
	3, 3, 3, 5, 7, 7, 6, 5, 3, 2,
	3, 3, 3, 7, 3, 3, 3, 3, 4, 7,
	5, 2, 4, 4, 4, 4, 4, 5, 5, 4,
	4, 4, 4, 4, 4, 4, 4, 2, 2, 4,
	4, 4, 4, 4, 2, 3, 3, 3, 5, 2,
	3, 3, 2, 3, 4, 4, 4, 3, 4, 4,
	5, 3, 0, 1, 0, 1, 1, 1, 0, 2,
	2, 0, 2, 2, 0, 2, 0, 1, 1, 1,
	1, 2, 1, 3, 1, 1, 1, 1, 1, 2,
	1, 1, 5, 0, 1, 0, 1, 2, 3, 0,
	3, 3, 3, 3, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 0, 1, 1, 4, 4, 2, 2,
	3, 1, 3, 2, 1, 2, 1, 2, 2, 4,
	3, 3, 6, 4, 7, 6, 1, 3, 2, 2,
	2, 2, 1, 1, 1, 3, 2, 1, 1, 1,
	0, 1, 1, 0, 3, 0, 2, 0, 2, 1,
	2, 2, 0, 1, 1, 0, 1, 1, 5, 5,
	4, 0, 2, 4, 4, 0, 1, 0, 1, 2,
	3, 4, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 0, 0, 1, 2, 3, 5, 0, 1, 2,
	1, 1, 0, 1, 2, 1, 3, 1, 1, 1,
	4, 3, 1, 1, 2, 3, 7, 0, 3, 0,
	1, 1, 3, 1, 3, 1, 1, 3, 3, 1,
	3, 4, 4, 4, 3, 2, 4, 0, 1, 0,
	2, 0, 1, 0, 1, 2, 1, 1, 1, 2,
	2, 1, 2, 3, 2, 3, 2, 2, 2, 1,
	1, 3, 3, 0, 1, 1, 2, 6, 5, 6,
	6, 0, 2, 3, 3, 0, 2, 3, 3, 3,
	2, 3, 1, 6, 3, 4, 3, 1, 3, 4,
	5, 6, 3, 4, 5, 6, 3, 4, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 3, 1,
	1, 1, 2, 2, 2, 2, 1, 1, 2, 7,
	7, 6, 6, 2, 2, 1, 6, 3, 3, 3,
	1, 3, 1, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	1, 0, 1, 2, 5, 0, 3, 0, 1, 4,
	4, 2, 0, 1, 1, 2, 2, 1, 1, 2,
	2, 0, 1, 1, 1, 1, 5, 1, 3, 0,
	3, 1, 1, 1, 2, 1, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 4, 8, 6, 8, 6, 5, 4,
	10, 2, 2, 1, 2, 2, 2, 4, 5, 5,
	5, 5, 5, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 8, 8, 8, 6, 5, 4, 4,
	4, 4, 4, 7, 4, 4, 6, 6, 6, 8,
	6, 6, 4, 4, 3, 4, 6, 6, 4, 4,
	4, 6, 8, 6, 4, 6, 6, 8, 10, 7,
	8, 8, 9, 4, 4, 4, 4, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 6, 4, 4, 6,
	5, 9, 6, 9, 1, 1, 1, 1, 1, 1,
	1, 1, 0, 2, 6, 8, 10, 12, 14, 6,
	8, 8, 10, 12, 14, 6, 8, 10, 12, 6,
	8, 4, 4, 3, 4, 6, 6, 4, 6, 4,
	6, 8, 0, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 2, 0, 2, 3,
	3, 4, 4, 4, 4, 4, 0, 3, 4, 7,
	3, 1, 1, 1, 0, 5, 5, 2, 3, 1,
	2, 2, 1, 2, 1, 2, 2, 1, 2, 2,
	1, 1, 0, 1, 0, 1, 0, 2, 1, 2,
	4, 0, 2, 1, 1, 3, 5, 1, 1, 1,
	2, 2, 0, 3, 0, 2, 2, 1, 3, 0,
	1, 0, 1, 3, 1, 3, 2, 0, 1, 1,
	0, 1, 2, 4, 4, 0, 2, 2, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 3, 0, 3,
	3, 3, 0, 3, 1, 1, 0, 4, 0, 1,
	1, 0, 3, 1, 3, 2, 1, 1, 0, 1,
	2, 4, 9, 3, 5, 0, 3, 3, 0, 1,
	0, 2, 2, 0, 2, 2, 2, 0, 2, 1,
	2, 3, 3, 0, 2, 1, 2, 3, 4, 3,
	0, 1, 2, 1, 5, 4, 4, 1, 3, 3,
	5, 0, 5, 1, 3, 1, 2, 3, 4, 1,
	1, 3, 3, 1, 3, 3, 3, 3, 3, 1,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 0, 2, 0, 3, 0, 1, 0,
	1, 1, 5, 0, 1, 0, 1, 2, 1, 1,
	1, 1, 1, 1, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 0, 1, 1,
}

var yyChk = [...]int{
	-1000, -406, -76, -411, -7, -11, -19, -20, -21, -22,
	-23, -24, -25, -26, -27, -28, -29, -30, -62, -63,
	-64, -66, -67, -68, -69, -70, -14, -65, -31, -32,
	-71, -72, -73, -74, -75, -16, -17, -18, -9, -8,
	-13, 10, 11, -104, -33, 33, -38, -48, 225, -49,
	-39, 226, -50, 228, 227, 264, 229, 257, 75, 311,
	312, 314, 315, 316, 317, -105, 262, 263, 231, 37,
	46, 34, 35, 38, 235, 270, 271, 234, -10, -34,
	9, -408, 12, 443, 259, 258, 29, -12, 505, 87,
	-77, -407, 657, -248, -232, 23, 34, 30, -231, -227,
	-123, -232, 21, 19, 8, -76, -76, -76, 13, 14,
	-76, -349, -351, 87, 159, 87, -76, -55, -54, -52,
	-51, -53, -56, 32, -45, -46, -373, -44, -41, 230,
	227, 274, 123, 124, 264, 265, 266, 229, 248, 263,
	267, 262, 283, -40, 82, 34, 505, 508, -356, 226,
	232, 233, 228, 444, 126, 125, 76, -353, 366, 538,
	627, -56, 629, 101, 104, 628, 45, 238, 630, 631,
	632, 545, 633, 247, 634, 635, 636, 637, 643, 586,
	644, 645, 646, 127, 8, -76, -301, -297, 91, -288,
	502, 250, 536, 537, 299, 82, 42, 511, 363, 366,
	538, 473, 627, 311, 325, 319, 478, 479, 480, 346,
	338, 503, 539, 512, 302, 251, 287, 621, 336, 135,
	629, 306, 540, 265, 371, 372, 541, 373, 101, 314,
	410, 642, 305, 542, 640, 104, 628, 80, 472, 52,
	624, 45, 260, 334, 234, 330, 630, 288, 543, 514,
	281, 126, 123, 649, 37, 328, 51, 31, 639, 125,
	50, 631, 150, 544, 632, 545, 375, 353, 615, 49,
	376, 266, 546, 85, 271, 507, 309, 623, 377, 492,
	329, 378, 298, 638, 231, 547, 606, 598, 599, 379,
	380, 616, 358, 354, 359, 494, 548, 402, 477, 381,
	602, 603, 656, 53, 549, 550, 617, 124, 551, 79,
	633, 81, 323, 324, 552, 296, 249, 497, 498, 404,
	350, 455, 462, 463, 111, 112, 458, 113, 464, 114,
	465, 466, 467, 456, 115, 108, 457, 468, 469, 351,
	352, 116, 470, 110, 109, 459, 461, 117, 471, 247,
	36, 382, 504, 300, 59, 304, 275, 405, 47, 356,
	653, 46, 611, 499, 553, 614, 349, 345, 452, 54,
	554, 555, 556, 557, 474, 634, 348, 322, 344, 648,
	4, 293, 475, 635, 63, 233, 361, 360, 362, 282,
	401, 341, 558, 559, 560, 254, 83, 561, 331, 22,
	562, 563, 383, 289, 564, 57, 565, 566, 408, 263,
	567, 55, 636, 40, 568, 268, 650, 637, 569, 570,
	571, 572, 270, 573, 385, 574, 600, 601, 384, 355,
	357, 500, 277, 386, 506, 575, 310, 327, 267, 641,
	576, 255, 488, 489, 490, 491, 622, 496, 495, 269,
	274, 262, 409, 256, 577, 578, 579, 580, 581, 303,
	597, 582, 583, 315, 643, 453, 44, 584, 585, 586,
	587, 588, 297, 292, 403, 412, 62, 84, 368, 589,
	590, 620, 321, 290, 591, 312, 56, 644, 645, 646,
	284, 647, 481, 482, 483, 484, 10, 654, 655, 476,
	388, 127, 294, 295, 48, 342, 276, 592, 307, 593,
	332, 333, 347, 320, 343, 313, 607, 278, 389, 454,
	264, 594, 411, 291, 364, 369, 308, 510, 493, 283,
	390, 619, 509, 485, 486, 340, 337, 285, 487, 595,
	391, 239, 279, 280, 596, 608, 392, 393, 301, 394,
	395, 396, 397, 398, 400, 399, 604, 605, 286, 508,
	318, 335, 370, 424, 425, 426, 427, 428, 429, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 451, 237, -76, 237, -186, -297, 237, -264, 372,
	-285, 374, 387, 382, 392, 380, -276, 383, 385, 277,
	-397, 402, 237, 389, 225, 375, 384, 393, 394, 301,
	400, 395, 399, 286, 396, 397, 398, -380, 177, 632,
	647, 135, 339, 379, 377, 403, 611, 91, -303, 91,
	92, 93, -288, 313, -305, 318, -291, -380, -288, 316,
	-76, -307, -307, -125, 611, 613, -205, -140, 143, -155,
	-158, -146, -150, -199, -200, -201, -202, -156, -215, -254,
	166, 167, 174, 144, -211, -159, 27, 501, 445, 444,
	177, 32, -149, 220, 69, 70, 447, 146, 58, 12,
	420, 421, -157, 415, 422, 417, 472, 474, 475, 476,
	473, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 477, 449, 450, 118, 451, 108, 110, 109, 452,
	453, 454, 336, 499, 500, 494, 497, 498, 496, 495,
	351, 352, 455, 456, 457, 111, 112, 113, 114, 115,
	116, 117, 458, 461, 459, 460, 462, 463, 464, 469,
	470, 465, 466, 467, 468, 471, -85, -97, 527, 526,
	-98, -147, -148, -161, -162, -291, -297, 242, 414, 236,
	172, 443, -151, -144, -213, 107, 92, 93, -8, -209,
	413, 418, 419, 423, 416, 513, 515, 530, 531, 533,
	518, 523, 522, 525, 488, 489, 490, 491, 492, 493,
	598, 599, 600, 601, 602, 603, 604, 605, -380, -288,
	91, -153, -152, -195, 94, 99, 102, 103, 105, -403,
	260, 332, 333, 119, -408, 625, 90, 95, 96, 97,
	98, 120, 121, 178, 179, 180, 181, 182, 183, 184,
	185, 186, 187, 188, 189, 190, 191, 192, 193, 194,
	195, 196, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 45, 388, 388, -186, -76,
	-76, -76, -76, -225, -123, -227, -10, -8, -408, 9,
	-76, -8, -9, -13, -34, -36, 532, -35, -297, 100,
	-232, -248, 13, 162, 43, 51, -230, -231, -12, -8,
	-140, 20, 24, 25, -128, 168, -140, -297, -128, -274,
	241, -76, -76, -263, -310, 313, -267, 403, 611, 402,
	-255, -265, 91, -254, -264, 401, -350, 159, -336, -340,
	-291, 252, -366, 248, -186, -359, -358, -291, -408, -124,
	-284, 238, 246, 245, 136, -384, 139, 294, 414, 236,
	-51, -52, -53, -264, 176, 631, -106, 269, 273, 88,
	88, -340, -339, -338, -385, 273, 252, -365, -357, 244,
	253, -346, 245, 246, -341, 238, 137, -385, -341, 243,
	253, 248, 252, 273, 273, 127, 273, 127, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 268, -347, 151,
	-347, 509, 509, -353, -385, 248, 238, -385, -385, 244,
	-286, -341, 240, 26, 240, 36, 36, -347, -347, -347,
	-264, 176, -347, -347, -347, -347, 281, 281, -347, -347,
	-347, -347, -347, -347, -347, -347, -347, -347, -347, -347,
	-347, -347, -347, -347, -347, 237, -384, -132, 399, 301,
	82, -54, 283, -37, -186, -284, 238, 239, -384, 270,
	-186, 221, -186, -278, 159, 16, -278, -275, 388, 386,
	373, 378, -278, -278, -278, -278, 284, 371, -342, 238,
	36, 249, 388, 284, 371, 284, 285, 284, 285, 381,
	391, 284, -302, 15, 162, 414, 376, 380, 277, 237,
	278, 239, 390, 285, -302, 90, -279, 159, 388, 280,
	-278, -278, -308, -408, -293, -291, -287, 230, 24, 142,
	26, 28, 145, 177, 130, 20, 146, 38, 232, 339,
	248, 176, 244, 444, 225, 73, 513, 415, 417, 413,
	420, 446, 447, 414, 374, 32, 14, 515, 29, 258,
	25, 39, 170, 227, 149, 516, 261, 27, 259, 118,
	121, 518, 23, 76, 253, 15, 246, 41, 17, 519,
	520, 18, 242, 241, 162, 238, 71, 12, 220, 30,
	158, 67, 521, 137, 522, 523, 524, 525, 131, 69,
	159, 21, 651, 418, 419, 34, 612, 501, 272, 172,
	74, 60, 613, 143, 416, 526, 527, 119, 528, 122,
	77, 618, 139, 19, 72, 43, 529, 273, 530, 243,
	652, 531, 406, 532, 160, 228, 443, 70, 161, 625,
	533, 626, 236, 387, 9, 448, 33, 257, 245, 129,
	68, 534, 237, 148, 449, 450, 240, 132, 120, 8,
	136, 35, 13, 75, 78, 421, 422, 423, 58, 128,
	505, 147, 16, 535, 407, 141, -380, 614, -308, -308,
	33, 92, 240, -291, -186, -82, 606, 229, -130, 388,
	-118, 177, 632, 615, 616, 617, 614, 385, 622, 620,
	618, 284, 619, 88, 139, 141, 142, 4, -140, 158,
	-196, 151, 152, 153, 154, 155, 156, 157, 162, 143,
	145, 159, -241, 140, 163, 164, 165, 166, 167, 168,
	169, 171, 170, 172, 173, 160, 161, 176, 223, 224,
	-150, -150, -150, -150, -211, -217, -216, -408, -213, -380,
	-288, -297, -408, -408, -150, -273, -408, -408, -146, -408,
	-408, -408, -220, -140, -408, -408, -412, -408, -412, -412,
	-326, -408, -326, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, 221,
	-408, -408, -408, -408, -408, -326, -326, -326, -326, -326,
	-408, -408, -408, -408, -408, -408, -408, -408, -408, -408,
	-408, -408, -408, -408, 103, 99, 102, 94, -215, 105,
	90, 90, 90, 90, -8, -9, -205, -408, -307, -394,
	-395, -189, -186, -408, 301, -291, -291, 270, -230, -12,
	-8, -225, -231, -227, -8, -76, -116, -129, 64, 65,
	-131, 25, 39, 68, 66, 24, -409, 89, -409, -248,
	-409, 88, -36, -251, 87, 62, 44, 90, 90, 88,
	22, -226, -228, -140, 15, -295, 4, -294, 26, -291,
	90, 221, 15, -187, 30, -186, -274, -274, 88, 313,
	91, -269, -268, 404, 406, 151, -296, -291, 90, 32,
	89, 88, -186, -315, -318, -320, -319, -321, -316, -317,
	336, 337, 177, 340, 342, 343, 344, 345, 346, 347,
	348, 349, 350, 353, 33, 260, 332, 333, 334, 335,
	354, 355, 356, 357, 359, 360, 361, 362, 319, 338,
	503, 320, 321, 322, 323, 324, 325, 327, 328, 329,
	330, 331, -381, -380, 87, 89, 88, -322, 87, -140,
	-132, 237, -380, 238, 238, 238, -76, 443, -347, -347,
	-347, 268, 20, -44, -41, -373, 19, -40, -41, 230,
	123, 124, 227, 87, -336, 87, -345, -381, -380, 87,
	137, 243, 136, -344, -341, -344, -345, -380, -213, -380,
	137, 137, -380, -380, -260, -291, -260, -260, 24, -260,
	24, -260, 24, 96, -291, -260, 24, -260, 24, -260,
	24, -260, 24, -260, 24, 32, 79, 80, 81, 32,
	83, 84, 85, -213, -380, -380, -213, -336, -213, -186,
	-380, -264, 96, 96, 96, -347, -347, 96, 90, 90,
	90, -347, -347, 96, 90, -299, -297, 90, 90, -386,
	254, 298, 300, 96, 96, 96, 96, 32, 90, -387,
	32, 639, 638, 640, 641, 642, 90, 96, 32, 96,
	32, 96, -291, 87, -186, -138, 288, 225, 227, 230,
	77, 90, 304, 305, 302, 307, 308, 151, 45, 88,
	240, 237, -380, -280, 242, -280, -291, -298, -297, -287,
	90, -140, -343, 15, 162, -302, -302, -278, -186, -343,
	-302, -278, -186, -278, -278, -278, -278, -302, -302, -302,
	-278, -297, -297, -186, -186, -186, -186, -186, -186, -186,
	-308, -279, -278, 614, 90, -272, 15, 77, -308, -308,
	-306, 316, -78, -291, 90, -15, -11, -22, -21, -23,
	151, 88, 505, -179, -186, 614, 614, 614, 614, 614,
	614, -140, -140, -140, -140, 528, -203, 119, 143, 120,
	121, -158, -204, -209, -211, 106, 162, 145, 159, -241,
	-146, -150, -146, -146, -146, -146, -146, -146, -146, -146,
	-146, -146, -146, -146, -146, -309, -291, 90, 177, -154,
	-153, 105, -403, -154, 502, 88, -216, 221, -140, -140,
	-380, -140, -291, -126, -290, -126, -140, -218, -219, 147,
	-213, -140, -409, -409, 96, 105, 168, -122, 25, 39,
	-122, -122, -122, -122, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -122, -291, -291, -115, -114, 425,
	426, 427, 428, 430, 431, 432, 435, 436, 440, 441,
	424, 442, 429, 434, 437, 438, 439, 433, 335, -140,
	-140, -140, -140, -140, -140, -83, -140, 130, 131, 132,
	-205, -140, -146, -140, -140, -140, -409, -140, -140, -140,
	-206, -205, -379, -378, -377, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -409, -140,
	-160, -144, 96, -256, 105, 92, -140, -140, -127, -126,
	-293, -298, -287, -288, -126, -127, -127, -126, -126, -140,
	-140, -140, -140, -140, -140, -140, -140, -409, -140, -140,
	-140, -140, -140, -248, -409, -205, 88, -396, 406, 407,
	612, -300, 273, -299, 26, -206, 90, 15, -258, 78,
	-291, -230, -230, 64, 65, 60, -126, -131, -409, -35,
	26, -250, -291, 63, 90, -327, -264, 363, 364, 177,
	-140, -140, 88, -229, 28, 29, -186, -294, 168, -298,
	-186, -259, 273, -186, -164, -166, -167, -168, -189, -212,
	-408, -169, -8, 524, 521, 15, -179, -180, -188, -297,
	-267, -310, -269, 88, 405, 407, 408, 77, 122, -140,
	-328, 176, -355, -354, -353, -336, -338, -339, -340, 89,
	-328, -332, 369, 368, -322, -322, -322, -322, -322, -327,
	-327, -327, -327, 87, 87, -322, -322, -322, -322, -330,
	87, -330, -330, -331, 87, -331, -366, -140, -363, -362,
	-360, -361, 247, 101, 596, 552, 505, 545, 586, 78,
	-358, -229, 96, -409, -138, -281, 242, -364, -361, -380,
	-380, -380, -281, 91, 90, 91, 90, 91, 90, -107,
	-58, -1, 651, 652, 653, 88, 20, -337, -336, -57,
	298, -369, -370, 273, -365, -359, -345, 137, -344, -345,
	-345, -380, 88, 30, 127, 127, 127, 127, 505, 227,
	33, -282, 544, 143, 596, 552, -336, -57, 240, 240,
	-309, -309, -309, 90, 90, -277, 647, -179, -134, 290,
	151, 279, 279, 237, 237, 292, -186, 303, 306, 304,
	305, 302, 307, 308, 24, 24, 24, 24, 24, 291,
	293, 295, 281, -186, -186, -280, 77, -181, -186, 27,
	-297, -186, -278, -278, -186, -278, -278, -186, -291, 350,
	607, 608, 610, 609, -118, 406, 88, 505, 23, -119,
	23, -408, 119, 120, 121, -204, -146, -150, -146, 142,
	261, -408, -213, -409, -293, 26, 88, 78, -409, 88,
	88, -409, -128, -409, 88, 15, -221, -219, 149, -140,
	-409, 88, -409, -409, -409, -205, -140, -140, -140, -140,
	-409, -409, -409, -409, -409, -409, -409, -409, -409, -409,
	-205, 88, 88, 15, -313, 26, -409, -409, -409, -409,
	-409, -220, -409, 15, -409, 78, 88, 162, 88, -409,
	-409, -409, 88, 88, -409, -409, 88, 88, -409, 88,
	88, 88, -409, 88, 88, 88, 88, -409, -409, -409,
	-409, 88, 88, 88, 88, 88, 88, 88, 88, 88,
	88, -409, -90, 529, -409, -409, 88, -409, 88, -409,
	-408, 221, -409, -409, -409, -409, -409, 88, 88, 88,
	88, 88, 88, -409, -409, -409, 88, 88, -409, 88,
	-409, 88, -409, -395, 611, 407, -193, -192, -190, 75,
	241, 76, -408, -299, -409, -154, -256, -257, -256, -198,
	-291, 96, 105, -232, -163, -165, 15, -131, -211, 89,
	88, -327, -236, -242, -275, -291, 90, 177, -329, 177,
	-329, 363, 364, -228, 221, -194, 16, -197, 33, 58,
	-11, -408, -408, 33, 88, -182, -184, -183, -185, 67,
	71, 73, 68, 69, 70, 74, -304, 26, -8, -164,
	-8, -408, -186, -179, -410, 15, 78, -410, 88, 221,
	-268, -270, 409, 406, 412, -380, 90, -106, 88, -353,
	-340, -233, -135, 41, -333, 370, -327, 512, -327, -335,
	90, -335, 96, 96, 89, -47, -42, -43, 34, 82,
	-360, -347, 90, 40, -347, -347, -291, 89, -229, -134,
	-186, 143, 77, -364, -364, -364, -297, -2, 650, 656,
	137, 87, 373, 19, -250, 88, 89, -214, 299, 89,
	-108, -291, 89, 87, -345, -345, -291, -408, 237, 32,
	32, 596, 552, 544, -57, -214, -213, -380, -328, 649,
	648, 89, 239, 297, -139, 420, -136, 90, 91, -186,
	-186, -186, -186, -186, 230, 227, 396, -404, 309, -404,
	282, 240, -179, -186, 88, -81, 256, 251, -302, -302,
	34, -186, 406, 623, 621, -140, 142, 261, -158, -150,
	-146, -311, 177, 336, 260, 334, 330, 350, 341, 368,
	332, 369, 329, 328, 327, -311, -309, -205, -289, -290,
	-140, -140, 150, -140, 148, -140, -409, -409, -409, -409,
	-409, -225, -140, -140, -140, -409, 177, 336, 15, -140,
	-309, -140, -140, -140, -140, -140, -377, -140, -205, -140,
	-205, -140, -140, -140, -140, -140, -378, -378, -378, -378,
	-378, -205, -205, -205, -205, -408, -291, -93, -92, -91,
	579, 241, -90, -160, -93, -160, -127, -293, -140, -140,
	-140, -140, -140, -140, -140, -140, -140, -140, -190, -341,
	-341, -341, -260, 88, -271, 23, 15, 58, 58, -163,
	-194, -164, -131, -291, -239, 606, -245, 47, -243, -244,
	48, -240, 49, 57, -329, -329, 168, -230, -140, -261,
	77, -262, -266, -213, -208, -210, -209, -408, -249, -409,
	-291, -260, -262, -166, -167, -167, -166, -167, 67, 67,
	67, 72, 67, 72, 67, -183, -297, -409, -140, -300,
	78, -164, -164, -188, -297, 168, 406, 410, 411, -353,
	-402, 119, 143, 32, 77, 366, 101, -400, 176, 541,
	591, 596, 552, 545, 586, -401, 243, 136, 137, 255,
	26, 42, 89, 88, 89, 88, 89, 88, -283, -282,
	-43, -42, -347, -347, 96, -380, 90, 90, 239, 27,
	-186, 77, 77, 77, -109, 654, 96, 87, -3, 82,
	-140, 87, 20, -336, -213, -371, -323, -372, -324, -325,
	-5, -6, -348, -112, 58, 101, -61, 45, 238, 634,
	635, 127, -408, 647, -363, -250, -367, -369, -186, -143,
	-408, -142, -144, -151, 166, 167, 260, 332, 333, -214,
	-186, -133, 288, 296, 87, -137, 92, -383, 78, 279,
	366, 279, 90, -405, 310, 90, -405, -186, -81, -47,
	-186, -278, -278, 34, -380, -409, -158, -150, -121, 162,
	505, -314, 511, -322, -322, -322, -331, -322, 324, -322,
	324, -322, -409, -409, -409, -128, 88, -409, 23, -409,
	-140, 88, -117, 448, 88, 88, -409, 87, 87, -140,
	-409, -409, -409, 88, -409, -409, -409, -409, -409, 88,
	-409, -409, -409, 88, -312, 597, -409, -409, -409, -409,
	-409, -409, -409, -409, -409, -409, -89, -292, -291, -90,
	561, 561, -409, -90, -222, 88, -409, -409, 88, -409,
	88, 88, -409, 88, -409, 88, -409, -409, -409, -409,
	88, -191, 23, -191, -191, -409, -256, -186, -194, -223,
	17, -236, 52, 342, -247, -246, 56, 48, -244, 20,
	50, 20, 31, -261, 88, 151, 88, -409, -409, 88,
	58, 221, -409, -194, -177, -176, 77, 78, -178, 77,
	-176, 67, 67, -251, 88, -259, -164, -194, -194, 221,
	119, -408, -145, -157, -143, 13, 90, 90, -380, -399,
	638, 639, 32, 96, -347, -347, 137, 137, -186, 87,
	-327, 90, -327, 96, 96, 32, 83, 84, 85, 32,
	79, 80, 81, -186, -186, -186, -186, -368, 87, 20,
	-140, 87, 151, 89, -250, -250, 275, 162, -347, 632,
	281, 281, -347, -347, -347, -111, -110, 654, 89, -409,
	88, -334, 505, 508, -140, -152, -152, -251, 89, -376,
	505, -382, -291, -291, -291, -291, 96, 98, -409, 503,
	74, 506, -409, -327, -290, -140, -140, -140, -230, 90,
	-140, -140, 96, 96, -409, -140, -205, -140, -409, -174,
	-173, -175, 615, 119, 32, -311, -409, -207, 273, -96,
	-95, -94, 15, -409, -140, -140, -140, -140, -140, -140,
	-140, -408, 67, 19, 17, -408, -408, -300, -223, -224,
	18, 20, -237, 54, -235, 53, -235, -246, 20, 20,
	90, 20, 90, 137, -266, -140, -210, 58, -11, -291,
	-208, -291, -225, -140, 87, -140, -154, -194, -194, -140,
	-200, 472, 474, 475, 476, 473, 478, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 477, 451, 108, 110,
	109, 452, 453, 454, 336, 499, 500, 494, 497, 498,
	496, 495, 351, 352, 455, 456, 457, 111, 112, 113,
	114, 115, 116, 117, 458, 461, 459, 462, 463, 464,
	469, 470, 465, 466, 467, 468, 471, 488, 489, 490,
	491, 492, 493, 598, 599, 600, 601, 602, 603, 604,
	605, 90, 90, 87, -140, 89, 89, -251, -367, -58,
	89, -252, -250, 96, 89, 276, -209, -408, 90, -347,
	-347, -347, 96, 96, -299, -409, 88, -291, -401, -369,
	509, 509, -409, 26, -375, -374, -293, 87, 78, 63,
	504, 507, -409, -409, 88, -409, -409, -409, 89, 89,
	-409, -409, -409, 88, -409, -173, -175, -409, 77, -154,
	-225, 20, -93, 298, 300, -93, -409, 88, -409, -409,
	88, -409, 88, -409, -409, -253, -409, -291, 243, 20,
	20, -253, -253, -193, -224, -103, -102, -101, 535, -140,
	-205, -238, 55, 77, 122, 90, 90, 90, 13, -208,
	221, -230, -250, -171, 373, -225, -409, -250, 89, 26,
	89, 656, 137, 89, -209, -120, -408, 272, -299, 90,
	90, -110, -113, -11, 88, 151, -250, -186, 63, -140,
	-205, -409, 77, 516, 615, -88, -87, -84, 626, 652,
	-205, -90, -90, -140, -140, -140, 88, -409, -409, -409,
	-103, 88, -100, -99, -291, 77, 122, -262, -291, 89,
	-409, -408, -230, 89, -234, -11, 87, -3, 272, -323,
	-372, -324, -325, -5, -6, -348, -79, 505, -374, -352,
	-297, -293, 90, 96, 89, 505, -409, -409, -86, 145,
	624, 594, -141, -152, -149, 220, -409, 88, -409, 88,
	-409, 88, -291, 243, -101, 88, 26, -300, -172, -170,
	-291, 558, -392, -391, 501, -402, -398, 119, 143, 101,
	-400, 596, 552, 128, 129, -79, -140, 87, -409, -80,
	287, 611, 221, -383, 506, -86, 625, 572, 547, 572,
	547, -140, -140, -140, -99, -408, -409, 88, 23, -315,
	-60, 569, -389, -390, 77, -393, 379, 568, 589, 119,
	90, 89, -250, 248, -298, -376, 507, 142, -409, 88,
	-409, 88, -409, -89, -170, 565, -328, -154, -390, 77,
	-389, 77, 14, 13, -4, 655, 89, 289, -86, -140,
	-140, -409, -59, 27, -171, -388, 256, 251, 254, 33,
	-388, 96, -4, -409, -409, 569, 250, 32, 119, -154,
	-174, -173, -173,
}

var yyDef = [...]int{
	845, -2, -2, 847, 2, 4, 5, 6, 7, 8,
	9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
	19, 20, 21, 22, 23, 24, 25, 26, 27, 28,
	29, 30, 31, 32, 33, 34, 35, 36, 69, 71,
	72, 845, 845, 845, 0, 845, 0, 0, 845, -2,
	-2, 845, 1464, 0, 845, 0, 0, -2, 772, 778,
	0, 780, -2, 0, 0, 845, 2011, 2011, 840, 0,
	0, 0, 0, 0, 845, 845, 845, 845, 1321, 49,
	845, 0, 84, 85, 796, 797, 798, 64, 0, 2009,
	846, 1, 3, 70, 74, 0, 0, 0, 57, 1330,
	0, 77, 0, 0, 849, 0, 0, 1447, 845, 845,
	0, 116, 117, 0, 0, 0, -2, 120, -2, 149,
	150, 151, 0, 156, 586, 509, 561, 507, 546, -2,
	495, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 512, 384, 384, 0, 0, -2, 495,
	495, 495, 1449, 0, 0, 0, 543, 446, 384, 384,
	384, 0, 384, 384, 384, 384, 0, 0, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 1348, 155, 1465, 1462, 1463,
	1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666,
	1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676,
	1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696,
	1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706,
	1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716,
	1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726,
	1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736,
	1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746,
	1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756,
	1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766,
	1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776,
	1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786,
	1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796,
	1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806,
	1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816,
	1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826,
	1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836,
	1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896,
	1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906,
	1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916,
	1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926,
	1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936,
	1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
	1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
	1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966,
	1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976,
	1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986,
	1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996,
	1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
	2007, 2008, 0, 1441, 0, 699, 950, 0, 761, 761,
	0, 761, 761, 761, 761, 0, 0, 0, 711, 0,
	0, 0, 0, 758, 0, 727, 728, 0, 758, 0,
	734, 764, 0, 739, 761, 761, 742, 2012, 0, 2012,
	2012, 1432, 0, 755, 753, 767, 768, 39, 771, 774,
	775, 776, 777, 779, 0, 784, 787, 1458, 1459, 0,
	789, 808, 809, 0, 841, 842, 44, 1098, 0, 972,
	977, 988, 1003, 1004, 1005, 1006, 1007, 1009, 1010, 1011,
	0, 0, 0, 0, 1016, 1017, 0, 0, 0, 0,
	0, 1079, 1025, 0, 0, 0, 0, 1294, 0, 0,
	1255, 1255, 1113, 1255, 1257, 1257, 1665, 1801, 1809, 1926,
	1628, 1633, 1634, 1635, 1919, 1920, 1921, 1922, 1960, 1961,
	1965, 1725, 0, 0, 0, 2008, 1762, 1770, 1771, 1795,
	1892, 1946, 1645, 1790, 1858, 1722, 1744, 1745, 1874, 1875,
	1766, 1767, 1748, 1760, 1763, 1751, 1752, 1754, 1756, 1761,
	1768, 1774, 1753, 1773, 1772, 0, 1749, 1750, 1755, 1765,
	1769, 1757, 1758, 1759, 1764, 1775, 0, 0, 0, 0,
	0, 1194, 1195, 1196, 1197, 0, 0, 0, 0, 0,
	0, 0, 280, 281, 1307, 1308, 42, 43, 1097, 1419,
	1257, 1257, 1257, 1257, 1257, 1039, 1040, 1041, 1042, 1043,
	1067, 1068, 1074, 1075, 1869, 1870, 1871, 1872, 1706, 1955,
	1714, 1715, 1853, 1854, 1727, 1728, 1983, 1984, -2, -2,
	-2, 221, 222, 223, 224, 225, 226, 227, 228, 0,
	1669, 1937, 1938, 217, 0, 0, 285, 286, 282, 283,
	284, 1081, 1082, 238, 239, 240, 241, 242, 243, 244,
	245, 246, 247, 248, 249, 250, 251, 252, 253, 254,
	255, 256, 257, 258, 259, 260, 261, 262, 263, 264,
	265, 266, 267, 268, 269, 270, 271, 272, 273, 274,
	275, 276, 277, 278, 279, 2011, 0, 818, 0, 0,
	0, 0, 0, 1330, 0, 1322, 1321, 62, 0, 845,
	-2, 0, 0, 0, 0, 46, 0, 51, 907, 848,
	76, 75, 1370, 0, 0, 0, 58, 1331, 66, 68,
	1332, 0, 850, 851, 0, 883, 887, 0, 0, 0,
	1448, 1447, 1447, 101, 0, 0, 1423, 113, 114, 115,
	0, 0, 1429, 1430, 1434, 1435, 0, 0, 167, 168,
	0, 40, 411, 0, 163, 0, 404, 345, 0, 1348,
	0, 0, 0, 0, 0, 845, 0, 1442, 144, 145,
	152, 153, 154, 384, 384, 384, 558, 0, 0, 155,
	155, 516, 517, 518, 0, 0, -2, 409, 0, 496,
	0, 0, 398, 398, 402, 400, 401, 0, 0, 0,
	0, 0, 0, 0, 0, 535, 0, 536, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 647, 0, 385,
	0, 556, 557, 447, 0, 0, 0, 0, 0, 0,
	0, 0, 1450, 1451, 0, 533, 534, 0, 0, 0,
	384, 384, 0, 0, 0, 0, 384, 384, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 143, 1361, 0, 0,
	0, -2, 0, 691, 0, 0, 0, 1443, 1443, 0,
	698, 0, 700, 701, 0, 0, 702, 0, 758, 758,
	756, 757, 704, 705, 706, 707, 761, 0, 0, 393,
	394, 395, 758, 761, 0, 761, 761, 761, 761, 758,
	758, 758, 761, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2012, 764, 761, 0, 735, 0, 736, 737,
	740, 741, 743, 2013, 2014, 1460, 1461, 1468, 1469, 1470,
	1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480,
	1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490,
	1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500,
	1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510,
	1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520,
	1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530,
	1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540,
	1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550,
	1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560,
	1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570,
	1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580,
	1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590,
	1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600,
	1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610,
	1611, 1612, 1613, 1614, 1615, 1616, 2012, 2012, 747, 751,
	1433, 773, 785, 788, 803, 48, 1713, 795, 820, 821,
	826, 0, 0, 0, 0, 832, 833, 834, 0, 0,
	837, 838, 839, 0, 0, 0, 0, 0, 970, 0,
	0, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 989, 990, 0, 0, 0,
	1012, 1013, 1014, 1015, 1018, 0, 1030, 0, 1032, 1303,
	-2, 0, 0, 0, 1023, 1024, 0, 0, 0, 881,
	881, 0, 0, 1295, 0, 0, 1111, 0, 1112, 1114,
	1115, 0, 1116, 855, 855, 855, 855, 855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1453,
	131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, 0,
	881, -2, -2, 881, 881, 210, 211, 212, 213, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 230, 231, 232, 233, 234,
	287, 235, 236, 237, 1097, 0, 0, 0, 45, 810,
	811, 0, 933, 1453, 0, 0, 861, 0, 56, 65,
	67, 1330, 60, 1330, 0, 867, 0, 881, -2, -2,
	868, 874, 875, 876, 877, 878, 53, 2010, 54, 0,
	73, 0, 47, 0, 0, 0, 0, 357, 1373, 0,
	0, 1323, 1324, 1327, 0, 884, 1807, 888, 0, 890,
	891, 0, 0, 99, 0, 949, 0, 0, 0, 0,
	1431, 103, 104, 0, 0, 0, 368, 1436, 1437, 1438,
	-2, 391, 0, 368, 352, 295, 296, 297, 345, 299,
	345, 345, 345, 345, 357, 357, 357, 357, 328, 329,
	330, 331, 332, 0, 0, 314, 345, 345, 345, 345,
	335, 336, 337, 338, 339, 340, 341, 342, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 347, 347, 347,
	349, 349, 0, 41, 0, 372, 0, 1327, 0, 0,
	1361, 1445, 1455, 0, 0, 0, 1445, 122, 0, 0,
	0, 559, 597, 510, 547, 560, 0, 513, 514, -2,
	0, 0, 495, 0, 497, 0, 392, 0, -2, 0,
	402, 0, 398, 402, 399, 402, 390, 403, 537, 538,
	539, 0, 541, 542, 627, 919, 0, 0, 0, 0,
	0, 633, 634, 635, 0, 637, 638, 639, 640, 641,
	642, 643, 644, 645, 646, 548, 549, 550, 551, 552,
	553, 554, 555, 0, 0, 0, 0, 497, 0, 544,
	0, 0, 448, 449, 450, 0, 0, 453, 454, 455,
	456, 0, 0, 459, 460, 461, 936, 937, 462, 463,
	488, 489, 490, 464, 465, 466, 467, 468, 469, 470,
	482, 483, 484, 485, 486, 487, 471, 472, 473, 474,
	475, 476, 479, 0, 137, 1352, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1443, 0, 0, 0, 0, 864, 951, 1466, 1467,
	762, 763, 0, 396, 397, 761, 761, 708, 748, 0,
	761, 712, 749, 713, 715, 714, 716, 729, 730, 761,
	719, 759, 760, 720, 721, 722, 723, 724, 725, 726,
	744, 731, 732, 733, 765, 0, 769, 770, 745, 746,
	0, 786, 806, 804, 805, 807, 799, 800, 801, 802,
	0, 0, 0, 823, 95, 828, 829, 830, 831, 843,
	836, 1099, 967, 968, 969, 0, 971, 974, 0, 1083,
	1085, 976, 978, 1094, 1095, 1096, 0, 0, 0, 0,
	0, 982, 986, 991, 992, 993, 994, 995, 996, 997,
	998, 999, 1000, 1001, 1002, 1008, 1271, 1272, 1273, 1027,
	288, 289, 0, 1028, 0, 0, 0, 0, 0, 0,
	0, 1098, 1029, 0, 0, 0, 0, 1301, 1298, 0,
	0, 0, 1256, 1258, 0, 0, 0, 0, 856, 857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1234, 1235,
	1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245,
	1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1274,
	0, 0, 0, 0, 0, 1294, 0, 1034, 1035, 1036,
	0, 0, 0, 0, 0, 0, 1154, 0, 0, 0,
	0, 1454, 0, 132, 133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1198, 1199, 1200, 1201, 38, 0, 0, 0, 866,
	1305, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 1417, 0, 0, 813, 814, 816,
	0, 953, 0, 934, 0, 0, 819, 0, 860, 0,
	863, 59, 61, 872, 873, 0, 892, 869, 55, 50,
	0, 0, 911, 1371, 357, 1393, 0, 366, 366, 363,
	1333, 1334, 0, 1326, 1328, 1329, 78, 889, 885, 0,
	965, 0, 0, 948, 0, 895, 897, 898, 899, 931,
	0, 902, 903, 0, 0, 0, 0, 0, 97, 950,
	1424, 0, 102, 0, 0, 107, 108, 1425, 1426, 1427,
	1428, 0, 586, -2, 443, 169, 171, 172, 173, 164,
	-2, 355, 353, 354, 298, 357, 357, 322, 323, 324,
	325, 326, 327, 0, 0, 315, 316, 317, 318, 309,
	0, 310, 311, 312, 0, 313, 410, 0, 1335, 373,
	374, 376, 384, 0, 379, 380, 0, 384, 384, 0,
	405, 406, 0, 1327, 1352, 0, 0, 0, 1456, 1455,
	1455, 1455, 0, 157, 158, 159, 160, 161, 162, 622,
	0, 0, 598, 620, 621, 155, 0, 0, 165, 499,
	498, 0, 654, 0, 408, 0, 0, 402, 402, 387,
	388, 540, 0, 0, 629, 630, 631, 632, 0, 0,
	0, 526, 437, 0, 527, 528, 497, 499, 0, 0,
	368, 451, 452, 457, 458, 477, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 573, 574, 575,
	578, 580, 501, 584, 577, 579, 581, 501, 585, 1349,
	1350, 1351, 0, 0, 692, 0, 0, 434, 93, 1444,
	697, 758, 718, 750, 758, 710, 717, 738, 782, 790,
	791, 792, 793, 794, 827, 0, 0, 0, 0, 835,
	0, 0, 975, 1084, 1086, 979, 0, 983, 987, 0,
	0, 0, 1033, 1031, 1305, 0, 0, 0, 1080, 0,
	882, 1102, 881, 1103, 0, 0, 0, 1299, 0, 0,
	1109, 0, 1259, 1260, 1117, 0, 0, 0, 0, 0,
	1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
	1321, 0, 0, 0, 0, 0, 1138, 1139, 1140, 1141,
	1142, 0, 1144, 0, 1145, 0, 0, 0, 0, 1152,
	1153, 1155, 0, 0, 1158, 1159, 0, 0, 1160, 0,
	0, 0, 1164, 0, 0, 0, 0, 1173, 1174, 1175,
	1176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1187, 1188, 0, 1062, 0, 0, 1062, 0, 1100,
	-2, 0, 1261, 1262, 1263, 1264, 1265, 0, 0, 0,
	0, 0, 0, 1221, 1222, 1224, 0, 0, 1227, 0,
	1229, 0, 1418, 812, 815, 817, 905, 954, 955, 0,
	0, 0, 0, 935, 1452, 858, 859, 862, 913, 0,
	1309, 0, 0, 892, 965, 893, 0, 870, 52, 908,
	0, 1375, 1374, 1387, 1400, 366, 366, 360, 361, 367,
	362, 364, 365, 1325, 0, 1330, 0, 1411, 0, 0,
	1403, 0, 0, 0, 0, 0, 0, 0, 0, 938,
	0, 0, 941, 0, 0, 0, 0, 932, 903, 0,
	904, 0, -2, 0, 0, 91, 92, 0, 0, 0,
	105, 106, 0, 0, 112, 369, 370, 146, 155, 445,
	170, 418, 0, 0, 294, 356, 319, 320, 321, 0,
	343, 0, 0, 0, 439, 118, 1339, 1338, 384, 384,
	375, 0, 378, 0, 0, 0, 1457, 346, 407, 0,
	136, 0, 0, 0, 0, 0, 142, 592, 0, 0,
	599, 0, 0, 0, 508, 0, 519, 520, 0, 626,
	-2, 688, 372, 0, 386, 389, 920, 0, 0, 521,
	0, 524, 525, 438, 499, 530, 531, 545, 532, 480,
	481, 478, 0, 0, 1362, 1363, 1368, 1366, 1367, 123,
	566, 568, 567, 571, 0, 0, 0, 503, 0, 503,
	564, 0, 434, 1335, 0, 696, 435, 436, 761, 761,
	822, 96, 0, 825, 0, 0, 0, 0, 980, 984,
	1266, 1292, 345, 345, 1279, 345, 349, 1282, 345, 1284,
	345, 1287, 345, 1290, 1291, 0, 0, 0, 0, 879,
	0, 0, 1108, 1302, 0, 0, 1118, 1119, 1120, 1121,
	1122, 1296, 0, 0, 0, 1137, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 134, 135, 0, 0,
	0, 0, 0, 0, 1232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1057, 1061, 0, 1063, 1064,
	0, 0, 1190, 0, 0, 1202, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 956, 961,
	961, 961, 0, 0, 0, 1439, 1440, 1310, 1311, 965,
	1312, 894, 871, 912, 1393, 0, 1386, 0, -2, 1395,
	0, 0, 0, 1401, 358, 359, 886, 79, 966, 82,
	0, 1411, 1420, 0, 1402, 1413, 1415, 0, 0, 0,
	1407, 0, 965, 896, 927, 929, 0, 924, 939, 940,
	942, 0, 944, 0, 946, 947, 907, 901, 0, 99,
	0, 965, 965, 98, 0, 952, 109, 110, 111, 444,
	174, 179, 0, 0, 0, 184, 0, 186, 0, 0,
	0, 191, 192, 384, 384, 419, 0, 291, 293, 0,
	0, 177, 357, 0, 357, 0, 350, 0, 420, 440,
	1336, 1337, 0, 0, 377, 381, 382, 383, 0, 1446,
	138, 0, 0, 0, 595, 0, 623, 0, 0, 0,
	0, 0, 0, 166, 500, 655, 656, 657, 658, 659,
	660, 661, 662, 663, 0, 384, 0, 0, 0, 384,
	384, 384, 0, 680, 371, 0, 0, 651, 648, 522,
	0, 215, 216, 218, 0, 0, 0, 0, 0, 529,
	907, 1353, 1354, 1355, 0, 1365, 1369, 126, 0, 0,
	0, 0, 576, 582, 0, 502, 583, 693, 694, 695,
	94, 703, 709, 824, 844, 973, 981, 985, 0, 0,
	0, 0, 1293, 1277, 357, 1280, 1281, 1283, 1285, 1286,
	1288, 1289, 1021, 1022, 1026, 881, 0, 1105, 0, 1107,
	1300, 0, 1330, 0, 0, 0, 1136, 0, 0, 0,
	1147, 1146, 1148, 0, 1150, 1151, 1156, 1157, 1161, 0,
	1163, 1165, 1166, 0, 0, 0, 1177, 1178, 1179, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 0, 1055, 1058, 1189,
	1065, 1066, 1071, 1192, 0, 0, 1101, 1204, 0, 1209,
	0, 0, 1215, 0, 1219, 0, 1225, 1226, 1228, 1230,
	0, 0, 0, 0, 0, 933, 914, 63, 1312, 1314,
	0, 1380, 1378, 1378, 1388, 1389, 0, 0, 1396, 0,
	0, 0, 0, 83, 0, 0, 0, 1416, 0, 0,
	0, 0, 100, 1321, 921, 928, 0, 0, 922, 0,
	923, 943, 945, 900, 0, 965, 965, 89, 90, 0,
	180, 0, 182, 208, 209, 0, 185, 187, 188, 189,
	195, 196, 197, 190, 0, 0, 290, 292, 0, 0,
	333, 344, 334, 0, 0, 1340, 1341, 1342, 1343, 1344,
	1345, 1346, 1347, 907, 139, 140, 141, 587, 0, 597,
	0, 909, 0, 590, 0, 511, 0, 0, 0, 384,
	384, 384, 0, 0, 0, 0, 665, 0, 0, 628,
	0, 636, 0, 0, 0, 219, 220, 0, 1364, 565,
	0, 124, 125, 0, 0, 570, 504, 505, 1019, 0,
	0, 0, 1020, 1278, 880, 0, 0, 0, 0, 1297,
	0, 0, 0, 0, 1143, 0, 0, 0, 1169, 0,
	0, 0, 617, 618, 0, 1233, 1060, 1321, 0, 1062,
	1072, 1073, 0, 1062, 1203, 0, 0, 0, 0, 0,
	0, 0, 962, 0, 0, 0, 0, 953, 1314, 1319,
	0, 0, 1383, 0, 1376, 1379, 1377, 1390, 0, 0,
	1397, 0, 1399, 0, 1421, 1422, 1414, 0, 1406, 1409,
	1405, 1408, 1330, 925, 0, 930, 0, 1321, 88, 0,
	183, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 193, 194, 0, 0, 348, 351, 0, 0, 0,
	588, 0, 910, 600, 591, 0, 678, 0, 682, 0,
	0, 0, 685, 686, 687, 664, 0, 668, 412, 652,
	649, 650, 523, 0, 127, 128, 0, 0, 0, 1267,
	0, 1270, 1104, 1106, 0, 1133, 1134, 1135, 1275, 1276,
	1149, 1162, 1167, 0, 1170, 0, 0, 1171, 0, 619,
	1051, 0, 0, 1069, 1070, 0, 1205, 0, 1210, 1211,
	0, 1216, 0, 1220, 1231, 0, 958, 915, 916, 963,
	964, 0, 0, 906, 1319, 81, 1320, 1317, 0, 1315,
	1313, 1372, 0, 1381, 1382, 1391, 1392, 1398, 0, 1404,
	0, 86, 0, 0, 0, 1330, 181, 0, 200, 0,
	596, 0, 599, 589, 676, 677, 0, 689, 681, 683,
	684, 666, -2, 1356, 0, 0, 0, 572, 1268, 0,
	0, 1172, 0, 615, 616, 1059, 1052, 0, 1037, 1038,
	1056, 1191, 1193, 0, 0, 0, 0, 957, 959, 960,
	80, 0, 1316, 1077, 0, 1384, 1385, 1412, 1410, 926,
	933, 0, 87, 425, 418, 1356, 0, 0, 0, 669,
	670, 671, 672, 673, 674, 675, 562, 1358, 129, 130,
	0, 492, 493, 494, 123, 0, 1110, 1168, 1053, 0,
	0, 0, 0, 1049, 1050, 0, 1206, 0, 1212, 0,
	1217, 0, 917, 918, 1318, 0, 0, 601, 0, 603,
	0, -2, 413, 426, 0, 175, 201, 202, 0, 0,
	205, 206, 207, 198, 199, 119, 0, 0, 690, 0,
	1359, 1360, 0, 126, 0, 0, 1044, 1045, 1046, 1047,
	1048, 0, 0, 0, 1078, 1057, 602, 0, 0, 368,
	0, 612, 414, 415, 0, 421, 422, 423, 424, 203,
	204, 624, 0, 0, 491, 569, 1269, 0, 1207, 0,
	1213, 0, 1218, 0, 604, 605, 613, 0, 416, 0,
	417, 0, 0, 0, 593, 0, 624, 1357, 1054, 0,
	0, 1076, 0, 614, 610, 427, 429, 430, 0, 0,
	428, 625, 594, 1208, 1214, 0, 431, 432, 433, 606,
	607, 608, 609,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 3, 3, 3, 171, 163, 3,
	87, 89, 168, 166, 88, 167, 221, 169, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 657,
	152, 151, 153, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 173, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 140, 3, 174,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 90, 91, 92, 93, 94,
	95, 96, 97, 98, 99, 100, 101, 102, 103, 104,
	105, 106, 107, 108, 109, 110, 111, 112, 113, 114,
	115, 116, 117, 118, 119, 120, 121, 122, 123, 124,
	125, 126, 127, 128, 129, 130, 131, 132, 133, 134,
	135, 136, 137, 138, 139, 141, 142, 143, 145, 146,
	147, 148, 149, 150, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 164, 165, 170, 172, 175, 176, 177,
	178, 179, 180, 181, 182, 183, 184, 185, 186, 187,
	188, 189, 190, 191, 192, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 220, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 57923, 598, 57924, 599,
	57925, 600, 57926, 601, 57927, 602, 57928, 603, 57929, 604,
	57930, 605, 57931, 606, 57932, 607, 57933, 608, 57934, 609,
	57935, 610, 57936, 611, 57937, 612, 57938, 613, 57939, 614,
	57940, 615, 57941, 616, 57942, 617, 57943, 618, 57944, 619,
	57945, 620, 57946, 621, 57947, 622, 57948, 623, 57949, 624,
	57950, 625, 57951, 626, 57952, 627, 57953, 628, 57954, 629,
	57955, 630, 57956, 631, 57957, 632, 57958, 633, 57959, 634,
	57960, 635, 57961, 636, 57962, 637, 57963, 638, 57964, 639,
	57965, 640, 57966, 641, 57967, 642, 57968, 643, 57969, 644,
	57970, 645, 57971, 646, 57972, 647, 57973, 648, 57974, 649,
	57975, 650, 57976, 651, 57977, 652, 57978, 653, 57979, 654,
	57980, 655, 57981, 656, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v any) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:587
		{
			stmt := yyDollar[2].statementUnion()
			// If the statement is empty and we have comments
			// then we create a special struct which stores them.
			// This is required because we need to update the rows_returned
			// and other query stats and not return a `query was empty` error
			if stmt == nil && yyDollar[1].strs != nil {
				stmt = &CommentOnly{Comments: yyDollar[1].strs}
			}
			setParseTree(yylex, stmt)
		}
	case 2:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:600
		{
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:601
		{
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:605
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 37:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:641
		{
			setParseTree(yylex, nil)
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:647
		{
			yyLOCAL = NewVariableExpression(yyDollar[1].str, SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:653
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 40:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:658
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:662
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:668
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), SingleAt)
		}
		yyVAL.union = yyLOCAL
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:672
		{
			yyLOCAL = NewVariableExpression(string(yyDollar[1].str), DoubleAt)
		}
		yyVAL.union = yyLOCAL
	case 44:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:678
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 45:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:684
		{
			yyLOCAL = &Load{}
		}
		yyVAL.union = yyLOCAL
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *With
//line sql.y:690
		{
			yyLOCAL = &With{ctes: yyDollar[2].ctesUnion(), Recursive: false}
		}
		yyVAL.union = yyLOCAL
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *With
//line sql.y:694
		{
			yyLOCAL = &With{ctes: yyDollar[3].ctesUnion(), Recursive: true}
		}
		yyVAL.union = yyLOCAL
	case 48:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *With
//line sql.y:699
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *With
//line sql.y:703
		{
			yyLOCAL = yyDollar[1].withUnion()
		}
		yyVAL.union = yyLOCAL
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:709
		{
			yySLICE := (*[]*CommonTableExpr)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].cteUnion())
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*CommonTableExpr
//line sql.y:713
		{
			yyLOCAL = []*CommonTableExpr{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 52:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *CommonTableExpr
//line sql.y:719
		{
			yyLOCAL = &CommonTableExpr{ID: yyDollar[1].identifierCS, Columns: yyDollar[2].columnsUnion(), Subquery: yyDollar[4].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:725
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:729
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:733
		{
			setLockInSelect(yyDollar[2].selStmtUnion(), yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:756
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:762
		{
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[2].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:767
		{
			yyDollar[1].selStmtUnion().SetOrderBy(yyDollar[2].orderByUnion())
			yyDollar[1].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:773
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:780
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[3].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:786
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
			yyDollar[2].selStmtUnion().SetOrderBy(yyDollar[3].orderByUnion())
			yyDollar[2].selStmtUnion().SetLimit(yyDollar[4].limitUnion())
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:793
		{
			yyDollar[2].selStmtUnion().SetWith(yyDollar[1].withUnion())
		}
	case 63:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:797
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), SelectExprs{&Nextval{Expr: yyDollar[5].exprUnion()}}, []string{yyDollar[3].str} /*options*/, nil, TableExprs{&AliasedTableExpr{Expr: yyDollar[7].tableName}}, nil /*where*/, nil /*groupBy*/, nil /*having*/, nil)
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:803
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:807
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:811
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:815
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:819
		{
			yyLOCAL = &Union{Left: yyDollar[1].selStmtUnion(), Distinct: yyDollar[2].booleanUnion(), Right: yyDollar[3].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:825
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:829
		{
			setLockInSelect(yyDollar[1].selStmtUnion(), yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:834
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:838
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:844
		{
			yyLOCAL = yyDollar[2].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:848
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:853
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[3].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:859
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[3].selectIntoUnion())
			yyDollar[1].selStmtUnion().SetLock(yyDollar[2].lockUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:865
		{
			yyDollar[1].selStmtUnion().SetInto(yyDollar[2].selectIntoUnion())
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:872
		{
			yyLOCAL = &Stream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:878
		{
			yyLOCAL = &VStream{Comments: Comments(yyDollar[2].strs).Parsed(), SelectExpr: yyDollar[3].selectExprUnion(), Table: yyDollar[5].tableName, Where: NewWhere(WhereClause, yyDollar[6].exprUnion()), Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:886
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, yyDollar[5].selectIntoUnion() /*into*/, yyDollar[6].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[7].exprUnion()), GroupBy(yyDollar[8].exprsUnion()), NewWhere(HavingClause, yyDollar[9].exprUnion()), yyDollar[10].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL SelectStatement
//line sql.y:890
		{
			yyLOCAL = NewSelect(Comments(yyDollar[2].strs), yyDollar[4].selectExprsUnion() /*SelectExprs*/, yyDollar[3].strs /*options*/, nil, yyDollar[5].tableExprsUnion() /*from*/, NewWhere(WhereClause, yyDollar[6].exprUnion()), GroupBy(yyDollar[7].exprsUnion()), NewWhere(HavingClause, yyDollar[8].exprUnion()), yyDollar[9].namedWindowsUnion())
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:896
		{
			// insert_data returns a *Insert pre-filled with Columns & Values
			ins := yyDollar[6].insUnion()
			ins.Action = yyDollar[1].insertActionUnion()
			ins.Comments = Comments(yyDollar[2].strs).Parsed()
			ins.Ignore = yyDollar[3].ignoreUnion()
			ins.Table = yyDollar[4].tableName
			ins.Partitions = yyDollar[5].partitionsUnion()
			ins.OnDup = OnDup(yyDollar[7].updateExprsUnion())
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:908
		{
			cols := make(Columns, 0, len(yyDollar[7].updateExprsUnion()))
			vals := make(ValTuple, 0, len(yyDollar[8].updateExprsUnion()))
			for _, updateList := range yyDollar[7].updateExprsUnion() {
				cols = append(cols, updateList.Name.Name)
				vals = append(vals, updateList.Expr)
			}
			yyLOCAL = &Insert{Action: yyDollar[1].insertActionUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Ignore: yyDollar[3].ignoreUnion(), Table: yyDollar[4].tableName, Partitions: yyDollar[5].partitionsUnion(), Columns: cols, Rows: Values{vals}, OnDup: OnDup(yyDollar[8].updateExprsUnion())}
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:920
		{
			yyLOCAL = InsertAct
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL InsertAction
//line sql.y:924
		{
			yyLOCAL = ReplaceAct
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:930
		{
			yyLOCAL = &Update{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: yyDollar[5].tableExprsUnion(), Exprs: yyDollar[7].updateExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion()), OrderBy: yyDollar[9].orderByUnion(), Limit: yyDollar[10].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:936
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), TableExprs: TableExprs{&AliasedTableExpr{Expr: yyDollar[6].tableName, As: yyDollar[7].identifierCS}}, Partitions: yyDollar[8].partitionsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion()), OrderBy: yyDollar[10].orderByUnion(), Limit: yyDollar[11].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Statement
//line sql.y:940
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[6].tableNamesUnion(), TableExprs: yyDollar[8].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[9].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:944
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:948
		{
			yyLOCAL = &Delete{With: yyDollar[1].withUnion(), Comments: Comments(yyDollar[3].strs).Parsed(), Ignore: yyDollar[4].ignoreUnion(), Targets: yyDollar[5].tableNamesUnion(), TableExprs: yyDollar[7].tableExprsUnion(), Where: NewWhere(WhereClause, yyDollar[8].exprUnion())}
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:953
		{
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:954
		{
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:958
		{
			yyLOCAL = TableNames{yyDollar[1].tableName.ToViewName()}
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:962
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName.ToViewName())
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:968
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:972
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableNames
//line sql.y:978
		{
			yyLOCAL = TableNames{yyDollar[1].tableName}
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:982
		{
			yySLICE := (*TableNames)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableName)
		}
	case 99:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:987
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:991
		{
			yyLOCAL = yyDollar[3].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:997
		{
			yyLOCAL = NewSetStatement(Comments(yyDollar[2].strs).Parsed(), yyDollar[3].setExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1003
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Scope: yyDollar[3].scopeUnion(), Characteristics: yyDollar[5].characteristicsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1007
		{
			yyLOCAL = &SetTransaction{Comments: Comments(yyDollar[2].strs).Parsed(), Characteristics: yyDollar[4].characteristicsUnion(), Scope: NoScope}
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []Characteristic
//line sql.y:1013
		{
			yyLOCAL = []Characteristic{yyDollar[1].characteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1017
		{
			yySLICE := (*[]Characteristic)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].characteristicUnion())
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1023
		{
			yyLOCAL = yyDollar[3].isolationLevelUnion()
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1027
		{
			yyLOCAL = ReadWrite
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Characteristic
//line sql.y:1031
		{
			yyLOCAL = ReadOnly
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1037
		{
			yyLOCAL = RepeatableRead
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1041
		{
			yyLOCAL = ReadCommitted
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1045
		{
			yyLOCAL = ReadUncommitted
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsolationLevel
//line sql.y:1049
		{
			yyLOCAL = Serializable
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1055
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1059
		{
			yyLOCAL = SessionScope
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Scope
//line sql.y:1063
		{
			yyLOCAL = GlobalScope
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1069
		{
			yyDollar[1].createTableUnion().TableSpec = yyDollar[2].tableSpecUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1075
		{
			// Create table [name] like [name]
			yyDollar[1].createTableUnion().OptLike = yyDollar[2].optLikeUnion()
			yyDollar[1].createTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].createTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 118:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1082
		{
			indexDef := yyDollar[1].alterTableUnion().AlterOptions[0].(*AddIndexDefinition).IndexDefinition
			indexDef.Columns = yyDollar[3].indexColumnsUnion()
			indexDef.Options = append(indexDef.Options, yyDollar[5].indexOptionsUnion()...)
			yyDollar[1].alterTableUnion().AlterOptions = append(yyDollar[1].alterTableUnion().AlterOptions, yyDollar[6].alterOptionsUnion()...)
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 119:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1091
		{
			yyLOCAL = &CreateView{ViewName: yyDollar[8].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), IsReplace: yyDollar[3].booleanUnion(), Algorithm: yyDollar[4].str, Definer: yyDollar[5].definerUnion(), Security: yyDollar[6].str, Columns: yyDollar[9].columnsUnion(), Select: yyDollar[11].selStmtUnion(), CheckOption: yyDollar[12].str}
		}
		yyVAL.union = yyLOCAL
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:1095
		{
			yyDollar[1].createDatabaseUnion().FullyParsed = true
			yyDollar[1].createDatabaseUnion().CreateOptions = yyDollar[2].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].createDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 121:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1102
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 122:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:1106
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1111
		{
			yyVAL.identifierCI = NewIdentifierCI("")
		}
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1115
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1121
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1126
		{
			var v []VindexParam
			yyLOCAL = v
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1131
		{
			yyLOCAL = yyDollar[2].vindexParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []VindexParam
//line sql.y:1137
		{
			yyLOCAL = make([]VindexParam, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].vindexParam)
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1142
		{
			yySLICE := (*[]VindexParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].vindexParam)
		}
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1148
		{
			yyVAL.vindexParam = VindexParam{Key: yyDollar[1].identifierCI, Val: yyDollar[3].str}
		}
	case 131:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1153
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1157
		{
			yyLOCAL = yyDollar[1].jsonObjectParamsUnion()
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JSONObjectParam
//line sql.y:1163
		{
			yyLOCAL = []*JSONObjectParam{yyDollar[1].jsonObjectParam}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1167
		{
			yySLICE := (*[]*JSONObjectParam)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jsonObjectParam)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1173
		{
			yyVAL.jsonObjectParam = &JSONObjectParam{Key: yyDollar[1].exprUnion(), Value: yyDollar[3].exprUnion()}
		}
	case 136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateTable
//line sql.y:1179
		{
			yyLOCAL = &CreateTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[6].tableName, IfNotExists: yyDollar[5].booleanUnion(), Temp: yyDollar[3].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1186
		{
			yyLOCAL = &AlterTable{Comments: Comments(yyDollar[2].strs).Parsed(), Table: yyDollar[4].tableName}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1193
		{
			yyLOCAL = &AlterTable{Table: yyDollar[7].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[4].identifierCI, Type: string(yyDollar[3].str)}, Options: yyDollar[5].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1198
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Fulltext: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1203
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Spatial: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *AlterTable
//line sql.y:1208
		{
			yyLOCAL = &AlterTable{Table: yyDollar[8].tableName, AlterOptions: []AlterOption{&AddIndexDefinition{IndexDefinition: &IndexDefinition{Info: &IndexInfo{Name: yyDollar[5].identifierCI, Type: string(yyDollar[3].str) + " " + string(yyDollar[4].str), Unique: true}, Options: yyDollar[6].indexOptionsUnion()}}}}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *CreateDatabase
//line sql.y:1215
		{
			yyLOCAL = &CreateDatabase{Comments: Comments(yyDollar[4].strs).Parsed(), DBName: yyDollar[6].identifierCS, IfNotExists: yyDollar[5].booleanUnion()}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AlterDatabase
//line sql.y:1222
		{
			yyLOCAL = &AlterDatabase{}
			setDDL(yylex, yyLOCAL)
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1233
		{
			yyLOCAL = yyDollar[2].tableSpecUnion()
			yyLOCAL.Options = yyDollar[4].tableOptionsUnion()
			yyLOCAL.PartitionOption = yyDollar[5].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1240
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1244
		{
			yyLOCAL = yyDollar[1].databaseOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1250
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1254
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []DatabaseOption
//line sql.y:1258
		{
			yyLOCAL = []DatabaseOption{yyDollar[1].databaseOption}
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1262
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 153:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1266
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 154:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1270
		{
			yySLICE := (*[]DatabaseOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].databaseOption)
		}
	case 155:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:1276
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:1280
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1286
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1290
		{
			yyVAL.databaseOption = DatabaseOption{Type: CharacterSetType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 159:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1296
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 160:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1300
		{
			yyVAL.databaseOption = DatabaseOption{Type: CollateType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1306
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: string(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 162:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1310
		{
			yyVAL.databaseOption = DatabaseOption{Type: EncryptionType, Value: encodeSQLString(yyDollar[4].str), IsDefault: yyDollar[1].booleanUnion()}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1316
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OptLike
//line sql.y:1320
		{
			yyLOCAL = &OptLike{LikeTable: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColumnDefinition
//line sql.y:1326
		{
			yyLOCAL = []*ColumnDefinition{yyDollar[1].columnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1330
		{
			yySLICE := (*[]*ColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].columnDefinitionUnion())
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1336
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddColumn(yyDollar[1].columnDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *TableSpec
//line sql.y:1341
		{
			yyLOCAL = &TableSpec{}
			yyLOCAL.AddConstraint(yyDollar[1].constraintDefinitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1346
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
		}
	case 170:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1350
		{
			yyVAL.tableSpecUnion().AddColumn(yyDollar[3].columnDefinitionUnion())
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[4].constraintDefinitionUnion())
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1355
		{
			yyVAL.tableSpecUnion().AddIndex(yyDollar[3].indexDefinitionUnion())
		}
	case 172:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1359
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 173:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1363
		{
			yyVAL.tableSpecUnion().AddConstraint(yyDollar[3].constraintDefinitionUnion())
		}
	case 174:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1374
		{
			yyDollar[2].columnType.Options = yyDollar[4].columnTypeOptionsUnion()
			if yyDollar[2].columnType.Options.Collate == "" {
				yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			}
			yyDollar[2].columnType.Options.Reference = yyDollar[5].referenceDefinitionUnion()
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL *ColumnDefinition
//line sql.y:1383
		{
			yyDollar[2].columnType.Options = yyDollar[9].columnTypeOptionsUnion()
			yyDollar[2].columnType.Options.As = yyDollar[7].exprUnion()
			yyDollar[2].columnType.Options.Reference = yyDollar[10].referenceDefinitionUnion()
			yyDollar[2].columnType.Options.Collate = yyDollar[3].str
			yyLOCAL = &ColumnDefinition{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType}
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:1392
		{
			yyVAL.str = ""
		}
	case 177:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1396
		{
			yyVAL.str = ""
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1405
		{
			yyLOCAL = &ColumnTypeOptions{Null: nil, Default: nil, OnUpdate: nil, Autoincrement: false, KeyOpt: colKeyNone, Comment: nil, As: nil, Invisible: nil, Format: UnspecifiedFormat, EngineAttribute: nil, SecondaryEngineAttribute: nil}
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1409
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1415
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1421
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1426
		{
			yyDollar[1].columnTypeOptionsUnion().Default = yyDollar[3].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1431
		{
			yyDollar[1].columnTypeOptionsUnion().OnUpdate = yyDollar[4].exprUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1436
		{
			yyDollar[1].columnTypeOptionsUnion().Autoincrement = true
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1441
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1446
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1451
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = encodeSQLString(yyDollar[3].str)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1455
		{
			yyDollar[1].columnTypeOptionsUnion().Collate = string(yyDollar[3].identifierCI.String())
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1460
		{
			yyDollar[1].columnTypeOptionsUnion().Format = yyDollar[3].columnFormatUnion()
		}
	case 190:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1464
		{
			yyDollar[1].columnTypeOptionsUnion().SRID = NewIntLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1469
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1475
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1481
		{
			yyDollar[1].columnTypeOptionsUnion().EngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 194:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:1485
		{
			yyDollar[1].columnTypeOptionsUnion().SecondaryEngineAttribute = NewStrLiteral(yyDollar[4].str)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1491
		{
			yyLOCAL = FixedFormat
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1495
		{
			yyLOCAL = DynamicFormat
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnFormat
//line sql.y:1499
		{
			yyLOCAL = DefaultFormat
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1505
		{
			yyLOCAL = VirtualStorage
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnStorage
//line sql.y:1509
		{
			yyLOCAL = StoredStorage
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1514
		{
			yyLOCAL = &ColumnTypeOptions{}
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1518
		{
			yyDollar[1].columnTypeOptionsUnion().Storage = yyDollar[2].columnStorageUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1523
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1529
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Null = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1535
		{
			yyDollar[1].columnTypeOptionsUnion().Comment = NewStrLiteral(yyDollar[3].str)
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1540
		{
			yyDollar[1].columnTypeOptionsUnion().KeyOpt = yyDollar[2].colKeyOptUnion()
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1545
		{
			val := false
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColumnTypeOptions
//line sql.y:1551
		{
			val := true
			yyDollar[1].columnTypeOptionsUnion().Invisible = &val
			yyLOCAL = yyDollar[1].columnTypeOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1559
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1566
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1570
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtime"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1574
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("localtimestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 213:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1578
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_timestamp"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1582
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("now"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1592
		{
			yyLOCAL = &NullVal{}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1599
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1603
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1609
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1613
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1617
		{
			yyLOCAL = yyDollar[1].boolValUnion()
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1621
		{
			yyLOCAL = NewHexLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1625
		{
			yyLOCAL = NewHexNumLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1629
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1633
		{
			yyLOCAL = NewBitLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1637
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1642
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1646
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexNumLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1650
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewBitLiteral(yyDollar[2].str[2:])}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1654
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewHexLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1658
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1662
		{
			bindVariable(yylex, yyDollar[2].str[1:])
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewArgument(yyDollar[2].str[1:])}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1667
		{
			yyLOCAL = NewDateLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1671
		{
			yyLOCAL = NewTimeLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1675
		{
			yyLOCAL = NewTimestampLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1681
		{
			yyVAL.str = Armscii8Str
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1685
		{
			yyVAL.str = ASCIIStr
		}
	case 240:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1689
		{
			yyVAL.str = Big5Str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1693
		{
			yyVAL.str = UBinaryStr
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1697
		{
			yyVAL.str = Cp1250Str
		}
	case 243:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1701
		{
			yyVAL.str = Cp1251Str
		}
	case 244:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1705
		{
			yyVAL.str = Cp1256Str
		}
	case 245:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1709
		{
			yyVAL.str = Cp1257Str
		}
	case 246:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1713
		{
			yyVAL.str = Cp850Str
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1717
		{
			yyVAL.str = Cp852Str
		}
	case 248:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1721
		{
			yyVAL.str = Cp866Str
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1725
		{
			yyVAL.str = Cp932Str
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1729
		{
			yyVAL.str = Dec8Str
		}
	case 251:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1733
		{
			yyVAL.str = EucjpmsStr
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1737
		{
			yyVAL.str = EuckrStr
		}
	case 253:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1741
		{
			yyVAL.str = Gb18030Str
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1745
		{
			yyVAL.str = Gb2312Str
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1749
		{
			yyVAL.str = GbkStr
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1753
		{
			yyVAL.str = Geostd8Str
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1757
		{
			yyVAL.str = GreekStr
		}
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1761
		{
			yyVAL.str = HebrewStr
		}
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1765
		{
			yyVAL.str = Hp8Str
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1769
		{
			yyVAL.str = Keybcs2Str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1773
		{
			yyVAL.str = Koi8rStr
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1777
		{
			yyVAL.str = Koi8uStr
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1781
		{
			yyVAL.str = Latin1Str
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1785
		{
			yyVAL.str = Latin2Str
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1789
		{
			yyVAL.str = Latin5Str
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1793
		{
			yyVAL.str = Latin7Str
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1797
		{
			yyVAL.str = MacceStr
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1801
		{
			yyVAL.str = MacromanStr
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1805
		{
			yyVAL.str = SjisStr
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1809
		{
			yyVAL.str = Swe7Str
		}
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1813
		{
			yyVAL.str = Tis620Str
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1817
		{
			yyVAL.str = Ucs2Str
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1821
		{
			yyVAL.str = UjisStr
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1825
		{
			yyVAL.str = Utf16Str
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1829
		{
			yyVAL.str = Utf16leStr
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1833
		{
			yyVAL.str = Utf32Str
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1837
		{
			yyVAL.str = Utf8Str
		}
	case 278:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1841
		{
			yyVAL.str = Utf8mb4Str
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1845
		{
			yyVAL.str = Utf8Str
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1855
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1859
		{
			yyLOCAL = NewFloatLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1863
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1869
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1873
		{
			yyLOCAL = &UnaryExpr{Operator: NStringOp, Expr: NewStrLiteral(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1877
		{
			yyLOCAL = &IntroducerExpr{CharacterSet: yyDollar[1].str, Expr: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1883
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:1887
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1894
		{
			yyLOCAL = colKeyPrimary
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1898
		{
			yyLOCAL = colKeyUnique
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1902
		{
			yyLOCAL = colKeyUniqueKey
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColumnKeyOption
//line sql.y:1906
		{
			yyLOCAL = colKey
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:1912
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Unsigned = yyDollar[2].booleanUnion()
			yyVAL.columnType.Zerofill = yyDollar[3].booleanUnion()
		}
	case 298:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1923
		{
			yyVAL.columnType = yyDollar[1].columnType
			yyVAL.columnType.Length = yyDollar[2].literalUnion()
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1928
		{
			yyVAL.columnType = yyDollar[1].columnType
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1934
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 301:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1938
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 302:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1942
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1946
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 304:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1950
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1954
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 306:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1958
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 307:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1962
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:1966
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 309:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1972
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 310:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1978
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1984
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 312:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1990
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 313:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:1996
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
			yyVAL.columnType.Length = yyDollar[2].LengthScaleOption.Length
			yyVAL.columnType.Scale = yyDollar[2].LengthScaleOption.Scale
		}
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2004
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2008
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2012
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2016
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 318:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2020
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2026
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2030
		{
			// CHAR BYTE is an alias for binary. See also:
			// https://dev.mysql.com/doc/refman/8.0/en/string-type-syntax.html
			yyVAL.columnType = ColumnType{Type: "binary", Length: yyDollar[2].literalUnion()}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2036
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2040
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2044
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
	case 324:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2048
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 325:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2052
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 326:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2056
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2060
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), Charset: yyDollar[2].columnCharset}
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2064
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 329:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2068
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2072
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2076
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2080
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 333:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2084
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 334:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2089
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str), EnumValues: yyDollar[3].strs, Charset: yyDollar[5].columnCharset}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2095
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2099
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2103
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2107
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2111
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 340:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2115
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2119
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 342:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2123
		{
			yyVAL.columnType = ColumnType{Type: string(yyDollar[1].str)}
		}
	case 343:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2129
		{
			yyVAL.strs = make([]string, 0, 4)
			yyVAL.strs = append(yyVAL.strs, encodeSQLString(yyDollar[1].str))
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2134
		{
			yyVAL.strs = append(yyDollar[1].strs, encodeSQLString(yyDollar[3].str))
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2139
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2143
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 347:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2148
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 348:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2152
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 349:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2160
		{
			yyVAL.LengthScaleOption = LengthScaleOption{}
		}
	case 350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2164
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
			}
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2170
		{
			yyVAL.LengthScaleOption = LengthScaleOption{
				Length: NewIntLiteral(yyDollar[2].str),
				Scale:  NewIntLiteral(yyDollar[4].str),
			}
		}
	case 352:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2178
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2182
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2186
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 355:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2191
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2195
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 357:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2200
		{
			yyVAL.columnCharset = ColumnCharset{}
		}
	case 358:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2204
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].identifierCI.String()), Binary: yyDollar[3].booleanUnion()}
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2208
		{
			yyVAL.columnCharset = ColumnCharset{Name: encodeSQLString(yyDollar[2].str), Binary: yyDollar[3].booleanUnion()}
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2212
		{
			yyVAL.columnCharset = ColumnCharset{Name: string(yyDollar[2].str)}
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2216
		{
			// ASCII: Shorthand for CHARACTER SET latin1.
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: yyDollar[2].booleanUnion()}
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2221
		{
			// UNICODE: Shorthand for CHARACTER SET ucs2.
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: yyDollar[2].booleanUnion()}
		}
	case 363:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2226
		{
			// BINARY: Shorthand for default CHARACTER SET but with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "", Binary: true}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2231
		{
			// BINARY ASCII: Shorthand for CHARACTER SET latin1 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "latin1", Binary: true}
		}
	case 365:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2236
		{
			// BINARY UNICODE: Shorthand for CHARACTER SET ucs2 with binary collation
			yyVAL.columnCharset = ColumnCharset{Name: "ucs2", Binary: true}
		}
	case 366:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2242
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2246
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2251
		{
			yyVAL.str = ""
		}
	case 369:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2255
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2259
		{
			yyVAL.str = encodeSQLString(yyDollar[2].str)
		}
	case 371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexDefinition
//line sql.y:2265
		{
			yyLOCAL = &IndexDefinition{Info: yyDollar[1].indexInfoUnion(), Columns: yyDollar[3].indexColumnsUnion(), Options: yyDollar[5].indexOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2270
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2274
		{
			yyLOCAL = yyDollar[1].indexOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:2280
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2284
		{
			yySLICE := (*[]*IndexOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexOptionUnion())
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2290
		{
			yyLOCAL = yyDollar[1].indexOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2294
		{
			// should not be string
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2299
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2303
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2307
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2311
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str) + " " + string(yyDollar[2].str), String: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2315
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:2319
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2325
		{
			yyVAL.str = ""
		}
	case 385:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2329
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2335
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI("PRIMARY"), Primary: true, Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2339
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Spatial: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2343
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str) + " " + string(yyDollar[2].str), Name: NewIdentifierCI(yyDollar[3].str), Fulltext: true, Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2347
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[2].str) + " " + string(yyDollar[3].str), ConstraintName: NewIdentifierCI(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[4].str), Unique: true}
		}
		yyVAL.union = yyLOCAL
	case 390:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexInfo
//line sql.y:2351
		{
			yyLOCAL = &IndexInfo{Type: string(yyDollar[1].str), Name: NewIdentifierCI(yyDollar[2].str), Unique: false}
		}
		yyVAL.union = yyLOCAL
	case 391:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2356
		{
			yyVAL.str = ""
		}
	case 392:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2360
		{
			yyVAL.str = yyDollar[2].str
		}
	case 393:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2366
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 394:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2370
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2374
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2380
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 397:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2384
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 398:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2389
		{
			yyVAL.str = "key"
		}
	case 399:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2393
		{
			yyVAL.str = yyDollar[1].str
		}
	case 400:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2399
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2403
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 402:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2408
		{
			yyVAL.str = ""
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2412
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexColumn
//line sql.y:2418
		{
			yyLOCAL = []*IndexColumn{yyDollar[1].indexColumnUnion()}
		}
		yyVAL.union = yyLOCAL
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2422
		{
			yySLICE := (*[]*IndexColumn)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].indexColumnUnion())
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2428
		{
			yyLOCAL = &IndexColumn{Column: yyDollar[1].identifierCI, Length: yyDollar[2].literalUnion(), Direction: yyDollar[3].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 407:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *IndexColumn
//line sql.y:2432
		{
			yyLOCAL = &IndexColumn{Expression: yyDollar[2].exprUnion(), Direction: yyDollar[4].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2438
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2442
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2448
		{
			yyLOCAL = &ConstraintDefinition{Name: yyDollar[2].identifierCI, Details: yyDollar[3].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConstraintDefinition
//line sql.y:2452
		{
			yyLOCAL = &ConstraintDefinition{Details: yyDollar[1].constraintInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2458
		{
			yyLOCAL = &ForeignKeyDefinition{IndexName: NewIdentifierCI(yyDollar[3].str), Source: yyDollar[5].columnsUnion(), ReferenceDefinition: yyDollar[7].referenceDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2464
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2468
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2472
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2476
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnDelete: yyDollar[7].referenceActionUnion(), OnUpdate: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2480
		{
			yyLOCAL = &ReferenceDefinition{ReferencedTable: yyDollar[2].tableName, ReferencedColumns: yyDollar[4].columnsUnion(), Match: yyDollar[6].matchActionUnion(), OnUpdate: yyDollar[7].referenceActionUnion(), OnDelete: yyDollar[8].referenceActionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2485
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ReferenceDefinition
//line sql.y:2489
		{
			yyLOCAL = yyDollar[1].referenceDefinitionUnion()
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL ConstraintInfo
//line sql.y:2495
		{
			yyLOCAL = &CheckConstraintDefinition{Expr: yyDollar[3].exprUnion(), Enforced: yyDollar[5].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2501
		{
			yyLOCAL = yyDollar[2].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2507
		{
			yyLOCAL = Full
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2511
		{
			yyLOCAL = Partial
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2515
		{
			yyLOCAL = Simple
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2520
		{
			yyLOCAL = DefaultMatch
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL MatchAction
//line sql.y:2524
		{
			yyLOCAL = yyDollar[1].matchActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2530
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2536
		{
			yyLOCAL = yyDollar[3].referenceActionUnion()
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2542
		{
			yyLOCAL = Restrict
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2546
		{
			yyLOCAL = Cascade
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2550
		{
			yyLOCAL = NoAction
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2554
		{
			yyLOCAL = SetDefault
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ReferenceAction
//line sql.y:2558
		{
			yyLOCAL = SetNull
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2563
		{
			yyVAL.str = ""
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2567
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 436:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2571
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2577
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:2581
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2586
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2590
		{
			yyLOCAL = yyDollar[1].booleanUnion()
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2595
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2599
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2605
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2609
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableOptionUnion())
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2613
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableOptions
//line sql.y:2619
		{
			yyLOCAL = TableOptions{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2623
		{
			yySLICE := (*TableOptions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].tableOptionUnion())
		}
	case 448:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2629
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2633
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2637
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2641
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[2].str)), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2645
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[2].str), String: yyDollar[4].str, CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2649
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2653
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2657
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2661
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 457:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2665
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 458:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2669
		{
			yyLOCAL = &TableOption{Name: (string(yyDollar[1].str) + " " + string(yyDollar[2].str)), Value: NewStrLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 459:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2673
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 460:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2677
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2681
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: yyDollar[3].identifierCS.String(), CaseSensitive: true}
		}
		yyVAL.union = yyLOCAL
	case 462:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2685
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2689
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 464:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2693
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 465:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2697
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 466:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2701
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 467:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2705
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 468:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2709
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2713
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 470:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2717
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2721
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewStrLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 472:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2725
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2729
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 474:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2733
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 475:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2737
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2741
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Value: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2745
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), String: (yyDollar[3].identifierCI.String() + yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 478:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *TableOption
//line sql.y:2749
		{
			yyLOCAL = &TableOption{Name: string(yyDollar[1].str), Tables: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 479:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2754
		{
			yyVAL.str = ""
		}
	case 480:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2758
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 481:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2762
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 491:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2781
		{
			yyVAL.str = String(TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS})
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2785
		{
			yyVAL.str = yyDollar[1].identifierCI.String()
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2789
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:2793
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2798
		{
			yyVAL.str = ""
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:2804
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:2808
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 499:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2813
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:2817
		{
			yyLOCAL = yyDollar[2].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:2822
		{
			yyVAL.str = ""
		}
	case 502:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:2826
		{
			yyVAL.str = string(yyDollar[2].str)
		}
	case 503:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2831
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2835
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:2839
		{
			yyLOCAL = NewDecimalLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2844
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2848
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:2852
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &OrderByOption{Cols: yyDollar[5].columnsUnion()})
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2856
		{
			yyLOCAL = yyDollar[1].alterOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2860
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionsUnion()...)
		}
	case 511:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2864
		{
			yyLOCAL = append(append(yyDollar[1].alterOptionsUnion(), yyDollar[3].alterOptionsUnion()...), &OrderByOption{Cols: yyDollar[7].columnsUnion()})
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:2870
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2874
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:2878
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2884
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2888
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2892
		{
			yyLOCAL = &AddConstraintDefinition{ConstraintDefinition: yyDollar[2].constraintDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2896
		{
			yyLOCAL = &AddIndexDefinition{IndexDefinition: yyDollar[2].indexDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2900
		{
			yyLOCAL = &AddColumns{Columns: yyDollar[4].columnDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 520:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2904
		{
			yyLOCAL = &AddColumns{Columns: []*ColumnDefinition{yyDollar[3].columnDefinitionUnion()}, First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 521:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2908
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: true}
		}
		yyVAL.union = yyLOCAL
	case 522:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2912
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 523:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2916
		{
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), DropDefault: false, DefaultVal: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2920
		{
			val := false
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2925
		{
			val := true
			yyLOCAL = &AlterColumn{Column: yyDollar[3].colNameUnion(), Invisible: &val}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2930
		{
			yyLOCAL = &AlterCheck{Name: yyDollar[3].identifierCI, Enforced: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2934
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: false}
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2938
		{
			yyLOCAL = &AlterIndex{Name: yyDollar[3].identifierCI, Invisible: true}
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2942
		{
			yyLOCAL = &ChangeColumn{OldColumn: yyDollar[3].colNameUnion(), NewColDefinition: yyDollar[4].columnDefinitionUnion(), First: yyDollar[5].booleanUnion(), After: yyDollar[6].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2946
		{
			yyLOCAL = &ModifyColumn{NewColDefinition: yyDollar[3].columnDefinitionUnion(), First: yyDollar[4].booleanUnion(), After: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2950
		{
			yyLOCAL = &RenameColumn{OldName: yyDollar[3].colNameUnion(), NewName: yyDollar[5].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2954
		{
			yyLOCAL = &AlterCharset{CharacterSet: yyDollar[4].str, Collate: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2958
		{
			yyLOCAL = &KeyState{Enable: false}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2962
		{
			yyLOCAL = &KeyState{Enable: true}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2966
		{
			yyLOCAL = &TablespaceOperation{Import: false}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2970
		{
			yyLOCAL = &TablespaceOperation{Import: true}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2974
		{
			yyLOCAL = &DropColumn{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2978
		{
			yyLOCAL = &DropKey{Type: NormalKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2982
		{
			yyLOCAL = &DropKey{Type: PrimaryKeyType}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2986
		{
			yyLOCAL = &DropKey{Type: ForeignKeyType, Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2990
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2994
		{
			yyLOCAL = &DropKey{Type: CheckKeyType, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:2998
		{
			yyLOCAL = &Force{}
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3002
		{
			yyLOCAL = &RenameTableName{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3006
		{
			yyLOCAL = &RenameIndex{OldName: yyDollar[3].identifierCI, NewName: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:3012
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 547:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3016
		{
			yySLICE := (*[]AlterOption)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].alterOptionUnion())
		}
	case 548:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3022
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 549:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3026
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3030
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 551:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3034
		{
			yyLOCAL = AlgorithmValue(string(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3038
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3042
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3046
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3050
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3054
		{
			yyLOCAL = &Validation{With: true}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:3058
		{
			yyLOCAL = &Validation{With: false}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3064
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionOption = yyDollar[3].partitionOptionUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3071
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = &PartitionSpec{Action: RemoveAction}
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3078
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().AlterOptions = yyDollar[2].alterOptionsUnion()
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[4].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3085
		{
			yyDollar[1].alterTableUnion().FullyParsed = true
			yyDollar[1].alterTableUnion().PartitionSpec = yyDollar[2].partSpecUnion()
			yyLOCAL = yyDollar[1].alterTableUnion()
		}
		yyVAL.union = yyLOCAL
	case 562:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3091
		{
			yyLOCAL = &AlterView{ViewName: yyDollar[7].tableName.ToViewName(), Comments: Comments(yyDollar[2].strs).Parsed(), Algorithm: yyDollar[3].str, Definer: yyDollar[4].definerUnion(), Security: yyDollar[5].str, Columns: yyDollar[8].columnsUnion(), Select: yyDollar[10].selStmtUnion(), CheckOption: yyDollar[11].str}
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3101
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().AlterOptions = yyDollar[3].databaseOptionsUnion()
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3108
		{
			yyDollar[1].alterDatabaseUnion().FullyParsed = true
			yyDollar[1].alterDatabaseUnion().DBName = yyDollar[2].identifierCS
			yyDollar[1].alterDatabaseUnion().UpdateDataDirectory = true
			yyLOCAL = yyDollar[1].alterDatabaseUnion()
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3115
		{
			yyLOCAL = &AlterVschema{
				Action: CreateVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name:   NewIdentifierCI(yyDollar[6].tableName.Name.String()),
					Type:   yyDollar[7].identifierCI,
					Params: yyDollar[8].vindexParamsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3127
		{
			yyLOCAL = &AlterVschema{
				Action: DropVindexDDLAction,
				Table:  yyDollar[6].tableName,
				VindexSpec: &VindexSpec{
					Name: NewIdentifierCI(yyDollar[6].tableName.Name.String()),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 567:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3137
		{
			yyLOCAL = &AlterVschema{Action: AddVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 568:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3141
		{
			yyLOCAL = &AlterVschema{Action: DropVschemaTableDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 569:
		yyDollar = yyS[yypt-13 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3145
		{
			yyLOCAL = &AlterVschema{
				Action: AddColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name:   yyDollar[8].identifierCI,
					Type:   yyDollar[12].identifierCI,
					Params: yyDollar[13].vindexParamsUnion(),
				},
				VindexCols: yyDollar[10].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 570:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3158
		{
			yyLOCAL = &AlterVschema{
				Action: DropColVindexDDLAction,
				Table:  yyDollar[5].tableName,
				VindexSpec: &VindexSpec{
					Name: yyDollar[8].identifierCI,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 571:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3168
		{
			yyLOCAL = &AlterVschema{Action: AddSequenceDDLAction, Table: yyDollar[6].tableName}
		}
		yyVAL.union = yyLOCAL
	case 572:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3172
		{
			yyLOCAL = &AlterVschema{
				Action: AddAutoIncDDLAction,
				Table:  yyDollar[5].tableName,
				AutoIncSpec: &AutoIncSpec{
					Column:   yyDollar[8].identifierCI,
					Sequence: yyDollar[10].tableName,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 573:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3183
		{
			yyLOCAL = &AlterMigration{
				Type: RetryMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 574:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3190
		{
			yyLOCAL = &AlterMigration{
				Type: CleanupMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 575:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3197
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 576:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3204
		{
			yyLOCAL = &AlterMigration{
				Type:   LaunchMigrationType,
				UUID:   string(yyDollar[4].str),
				Shards: string(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 577:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3212
		{
			yyLOCAL = &AlterMigration{
				Type: LaunchAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 578:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3218
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 579:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3225
		{
			yyLOCAL = &AlterMigration{
				Type: CompleteAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 580:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3231
		{
			yyLOCAL = &AlterMigration{
				Type: CancelMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3238
		{
			yyLOCAL = &AlterMigration{
				Type: CancelAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3244
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleMigrationType,
				UUID:   string(yyDollar[4].str),
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3253
		{
			yyLOCAL = &AlterMigration{
				Type:   ThrottleAllMigrationType,
				Expire: yyDollar[6].str,
				Ratio:  yyDollar[7].literalUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3261
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleMigrationType,
				UUID: string(yyDollar[4].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3268
		{
			yyLOCAL = &AlterMigration{
				Type: UnthrottleAllMigrationType,
			}
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3275
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3279
		{
			yyDollar[3].partitionOptionUnion().Partitions = yyDollar[4].integerUnion()
			yyDollar[3].partitionOptionUnion().SubPartition = yyDollar[5].subPartitionUnion()
			yyDollar[3].partitionOptionUnion().Definitions = yyDollar[6].partDefsUnion()
			yyLOCAL = yyDollar[3].partitionOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3288
		{
			yyLOCAL = &PartitionOption{
				IsLinear: yyDollar[1].booleanUnion(),
				Type:     HashType,
				Expr:     yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3296
		{
			yyLOCAL = &PartitionOption{
				IsLinear:     yyDollar[1].booleanUnion(),
				Type:         KeyType,
				KeyAlgorithm: yyDollar[3].integerUnion(),
				ColList:      yyDollar[5].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3305
		{
			yyLOCAL = &PartitionOption{
				Type: yyDollar[1].partitionByTypeUnion(),
				Expr: yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionOption
//line sql.y:3312
		{
			yyLOCAL = &PartitionOption{
				Type:    yyDollar[1].partitionByTypeUnion(),
				ColList: yyDollar[4].columnsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3320
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3324
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          HashType,
				Expr:          yyDollar[6].exprUnion(),
				SubPartitions: yyDollar[8].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SubPartition
//line sql.y:3333
		{
			yyLOCAL = &SubPartition{
				IsLinear:      yyDollar[3].booleanUnion(),
				Type:          KeyType,
				KeyAlgorithm:  yyDollar[5].integerUnion(),
				ColList:       yyDollar[7].columnsUnion(),
				SubPartitions: yyDollar[9].integerUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3344
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3348
		{
			yyLOCAL = yyDollar[2].partDefsUnion()
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3353
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3357
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 599:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3362
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 600:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3366
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:3372
		{
			yyLOCAL = &JSONTableExpr{Expr: yyDollar[3].exprUnion(), Filter: yyDollar[5].exprUnion(), Columns: yyDollar[6].jtColumnListUnion(), Alias: yyDollar[8].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3378
		{
			yyLOCAL = yyDollar[3].jtColumnListUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*JtColumnDefinition
//line sql.y:3384
		{
			yyLOCAL = []*JtColumnDefinition{yyDollar[1].jtColumnDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3388
		{
			yySLICE := (*[]*JtColumnDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].jtColumnDefinitionUnion())
		}
	case 605:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3394
		{
			yyLOCAL = &JtColumnDefinition{JtOrdinal: &JtOrdinalColDef{Name: yyDollar[1].identifierCI}}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3398
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3404
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3410
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3416
		{
			yyDollar[2].columnType.Options = &ColumnTypeOptions{Collate: yyDollar[3].str}
			jtPath := &JtPathColDef{Name: yyDollar[1].identifierCI, Type: yyDollar[2].columnType, JtColExists: yyDollar[4].booleanUnion(), Path: yyDollar[6].exprUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
			yyLOCAL = &JtColumnDefinition{JtPath: jtPath}
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *JtColumnDefinition
//line sql.y:3422
		{
			jtNestedPath := &JtNestedPathColDef{Path: yyDollar[3].exprUnion(), Columns: yyDollar[4].jtColumnListUnion()}
			yyLOCAL = &JtColumnDefinition{JtNestedPath: jtNestedPath}
		}
		yyVAL.union = yyLOCAL
	case 611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3428
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 612:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3432
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 613:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3436
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 614:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3440
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3446
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 616:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3452
		{
			yyLOCAL = yyDollar[1].jtOnResponseUnion()
		}
		yyVAL.union = yyLOCAL
	case 617:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3458
		{
			yyLOCAL = &JtOnResponse{ResponseType: ErrorJSONType}
		}
		yyVAL.union = yyLOCAL
	case 618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3462
		{
			yyLOCAL = &JtOnResponse{ResponseType: NullJSONType}
		}
		yyVAL.union = yyLOCAL
	case 619:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *JtOnResponse
//line sql.y:3466
		{
			yyLOCAL = &JtOnResponse{ResponseType: DefaultJSONType, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 620:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3472
		{
			yyLOCAL = RangeType
		}
		yyVAL.union = yyLOCAL
	case 621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL PartitionByType
//line sql.y:3476
		{
			yyLOCAL = ListType
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3481
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3485
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:3490
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int
//line sql.y:3494
		{
			yyLOCAL = convertStringToInt(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3500
		{
			yyLOCAL = &PartitionSpec{Action: AddAction, Definitions: []*PartitionDefinition{yyDollar[4].partDefUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3504
		{
			yyLOCAL = &PartitionSpec{Action: DropAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3508
		{
			yyLOCAL = &PartitionSpec{Action: ReorganizeAction, Names: yyDollar[3].partitionsUnion(), Definitions: yyDollar[6].partDefsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3512
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3516
		{
			yyLOCAL = &PartitionSpec{Action: DiscardAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3520
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3524
		{
			yyLOCAL = &PartitionSpec{Action: ImportAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3528
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3532
		{
			yyLOCAL = &PartitionSpec{Action: TruncateAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3536
		{
			yyLOCAL = &PartitionSpec{Action: CoalesceAction, Number: NewIntLiteral(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3540
		{
			yyLOCAL = &PartitionSpec{Action: ExchangeAction, Names: Partitions{yyDollar[3].identifierCI}, TableName: yyDollar[6].tableName, WithoutValidation: yyDollar[7].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3544
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3548
		{
			yyLOCAL = &PartitionSpec{Action: AnalyzeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3552
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3556
		{
			yyLOCAL = &PartitionSpec{Action: CheckAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3560
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3564
		{
			yyLOCAL = &PartitionSpec{Action: OptimizeAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3568
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3572
		{
			yyLOCAL = &PartitionSpec{Action: RebuildAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3576
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, Names: yyDollar[3].partitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3580
		{
			yyLOCAL = &PartitionSpec{Action: RepairAction, IsAll: true}
		}
		yyVAL.union = yyLOCAL
	case 647:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionSpec
//line sql.y:3584
		{
			yyLOCAL = &PartitionSpec{Action: UpgradeAction}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3589
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3593
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:3597
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 651:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*PartitionDefinition
//line sql.y:3603
		{
			yyLOCAL = []*PartitionDefinition{yyDollar[1].partDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 652:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3607
		{
			yySLICE := (*[]*PartitionDefinition)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].partDefUnion())
		}
	case 653:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:3613
		{
			yyVAL.partDefUnion().Options = yyDollar[2].partitionDefinitionOptionsUnion()
		}
	case 654:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3618
		{
			yyLOCAL = &PartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3622
		{
			yyDollar[1].partitionDefinitionOptionsUnion().ValueRange = yyDollar[2].partitionValueRangeUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 656:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3627
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3632
		{
			yyDollar[1].partitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3637
		{
			yyDollar[1].partitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3642
		{
			yyDollar[1].partitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3647
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3653
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].partitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3659
		{
			yyDollar[1].partitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinitionOptions
//line sql.y:3664
		{
			yyDollar[1].partitionDefinitionOptionsUnion().SubPartitionDefinitions = yyDollar[2].subPartitionDefinitionsUnion()
			yyLOCAL = yyDollar[1].partitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3670
		{
			yyLOCAL = yyDollar[2].subPartitionDefinitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SubPartitionDefinitions
//line sql.y:3676
		{
			yyLOCAL = SubPartitionDefinitions{yyDollar[1].subPartitionDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3680
		{
			yySLICE := (*SubPartitionDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].subPartitionDefinitionUnion())
		}
	case 667:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SubPartitionDefinition
//line sql.y:3686
		{
			yyLOCAL = &SubPartitionDefinition{Name: yyDollar[2].identifierCI, Options: yyDollar[3].subPartitionDefinitionOptionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3691
		{
			yyLOCAL = &SubPartitionDefinitionOptions{}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3695
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Comment = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3700
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().Engine = yyDollar[2].partitionEngineUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3705
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().DataDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3710
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().IndexDirectory = yyDollar[2].literalUnion()
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3715
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MaxRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3721
		{
			val := yyDollar[2].integerUnion()
			yyDollar[1].subPartitionDefinitionOptionsUnion().MinRows = &val
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *SubPartitionDefinitionOptions
//line sql.y:3727
		{
			yyDollar[1].subPartitionDefinitionOptionsUnion().TableSpace = yyDollar[2].str
			yyLOCAL = yyDollar[1].subPartitionDefinitionOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3734
		{
			yyLOCAL = &PartitionValueRange{
				Type:  LessThanType,
				Range: yyDollar[4].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3741
		{
			yyLOCAL = &PartitionValueRange{
				Type:     LessThanType,
				Maxvalue: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *PartitionValueRange
//line sql.y:3748
		{
			yyLOCAL = &PartitionValueRange{
				Type:  InType,
				Range: yyDollar[3].valTupleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:3756
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 680:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:3760
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *PartitionEngine
//line sql.y:3766
		{
			yyLOCAL = &PartitionEngine{Storage: yyDollar[1].booleanUnion(), Name: yyDollar[4].identifierCS.String()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3772
		{
			yyLOCAL = NewStrLiteral(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3778
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Literal
//line sql.y:3784
		{
			yyLOCAL = NewStrLiteral(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3790
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int
//line sql.y:3796
		{
			yyLOCAL = convertStringToInt(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3802
		{
			yyVAL.str = yyDollar[3].identifierCS.String()
		}
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *PartitionDefinition
//line sql.y:3808
		{
			yyLOCAL = &PartitionDefinition{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:3814
		{
			yyVAL.str = ""
		}
	case 690:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:3818
		{
			yyVAL.str = ""
		}
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3824
		{
			yyLOCAL = &RenameTable{TablePairs: yyDollar[3].renameTablePairsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*RenameTablePair
//line sql.y:3830
		{
			yyLOCAL = []*RenameTablePair{{FromTable: yyDollar[1].tableName, ToTable: yyDollar[3].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:3834
		{
			yySLICE := (*[]*RenameTablePair)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, &RenameTablePair{FromTable: yyDollar[3].tableName, ToTable: yyDollar[5].tableName})
		}
	case 694:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3840
		{
			yyLOCAL = &DropTable{FromTables: yyDollar[6].tableNamesUnion(), IfExists: yyDollar[5].booleanUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), Temp: yyDollar[3].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3844
		{
			// Change this to an alter statement
			if yyDollar[4].identifierCI.Lowered() == "primary" {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: PrimaryKeyType}}, yyDollar[7].alterOptionsUnion()...)}
			} else {
				yyLOCAL = &AlterTable{FullyParsed: true, Table: yyDollar[6].tableName, AlterOptions: append([]AlterOption{&DropKey{Type: NormalKeyType, Name: yyDollar[4].identifierCI}}, yyDollar[7].alterOptionsUnion()...)}
			}
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3853
		{
			yyLOCAL = &DropView{FromTables: yyDollar[5].tableNamesUnion(), Comments: Comments(yyDollar[2].strs).Parsed(), IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3857
		{
			yyLOCAL = &DropDatabase{Comments: Comments(yyDollar[2].strs).Parsed(), DBName: yyDollar[5].identifierCS, IfExists: yyDollar[4].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3863
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[3].tableName}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3867
		{
			yyLOCAL = &TruncateTable{Table: yyDollar[2].tableName}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3873
		{
			yyLOCAL = &OtherRead{}
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3879
		{
			yyLOCAL = &Show{&ShowBasic{Command: Charset, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3883
		{
			yyLOCAL = &Show{&ShowBasic{Command: Collation, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3887
		{
			yyLOCAL = &Show{&ShowBasic{Full: yyDollar[2].booleanUnion(), Command: Column, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3891
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3895
		{
			yyLOCAL = &Show{&ShowBasic{Command: Database, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3899
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3903
		{
			yyLOCAL = &Show{&ShowBasic{Command: Keyspace, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3907
		{
			yyLOCAL = &Show{&ShowBasic{Command: Function, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3911
		{
			yyLOCAL = &Show{&ShowBasic{Command: Index, Tbl: yyDollar[5].tableName, DbName: yyDollar[6].identifierCS, Filter: yyDollar[7].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3915
		{
			yyLOCAL = &Show{&ShowBasic{Command: OpenTable, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3919
		{
			yyLOCAL = &Show{&ShowBasic{Command: Privilege}}
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3923
		{
			yyLOCAL = &Show{&ShowBasic{Command: Procedure, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3927
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3931
		{
			yyLOCAL = &Show{&ShowBasic{Command: StatusGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3935
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableSession, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3939
		{
			yyLOCAL = &Show{&ShowBasic{Command: VariableGlobal, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3943
		{
			yyLOCAL = &Show{&ShowBasic{Command: TableStatus, DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3947
		{
			yyLOCAL = &Show{&ShowBasic{Command: Table, Full: yyDollar[2].booleanUnion(), DbName: yyDollar[4].identifierCS, Filter: yyDollar[5].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3951
		{
			yyLOCAL = &Show{&ShowBasic{Command: Trigger, DbName: yyDollar[3].identifierCS, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3955
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateDb, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3959
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateE, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3963
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateF, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3967
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateProc, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3971
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTbl, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3975
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateTr, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3979
		{
			yyLOCAL = &Show{&ShowCreate{Command: CreateV, Op: yyDollar[4].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3983
		{
			yyLOCAL = &Show{&ShowBasic{Command: Engines}}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3987
		{
			yyLOCAL = &Show{&ShowBasic{Command: Plugins}}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3991
		{
			yyLOCAL = &Show{&ShowBasic{Command: GtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3995
		{
			yyLOCAL = &Show{&ShowBasic{Command: VGtidExecGlobal, DbName: yyDollar[4].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:3999
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessVariables, Filter: yyDollar[4].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4003
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessMigrations, Filter: yyDollar[4].showFilterUnion(), DbName: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4007
		{
			yyLOCAL = &ShowMigrationLogs{UUID: string(yyDollar[3].str)}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4011
		{
			yyLOCAL = &ShowThrottledApps{}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4015
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessReplicationStatus, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4019
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaTables}}
		}
		yyVAL.union = yyLOCAL
	case 737:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4023
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes}}
		}
		yyVAL.union = yyLOCAL
	case 738:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4027
		{
			yyLOCAL = &Show{&ShowBasic{Command: VschemaVindexes, Tbl: yyDollar[5].tableName}}
		}
		yyVAL.union = yyLOCAL
	case 739:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4031
		{
			yyLOCAL = &Show{&ShowBasic{Command: Warnings}}
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4035
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessShards, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4039
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTablets, Filter: yyDollar[3].showFilterUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 742:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4043
		{
			yyLOCAL = &Show{&ShowBasic{Command: VitessTarget}}
		}
		yyVAL.union = yyLOCAL
	case 743:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4050
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].identifierCI.String())}}
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4054
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4058
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()}}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4062
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4066
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4070
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4074
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str) + " " + string(yyDollar[3].str) + " " + String(yyDollar[4].tableName)}}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4078
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[3].str)}}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4082
		{
			yyLOCAL = &Show{&ShowOther{Command: string(yyDollar[2].str)}}
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4088
		{
			yyVAL.str = ""
		}
	case 753:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4092
		{
			yyVAL.str = "extended "
		}
	case 754:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4098
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4102
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4108
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4112
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 758:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4118
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 759:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4122
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 760:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4126
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 761:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4132
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 762:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4136
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4140
		{
			yyLOCAL = &ShowFilter{Filter: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4146
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ShowFilter
//line sql.y:4150
		{
			yyLOCAL = &ShowFilter{Like: string(yyDollar[2].str)}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4156
		{
			yyVAL.empty = struct{}{}
		}
	case 767:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4160
		{
			yyVAL.empty = struct{}{}
		}
	case 768:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4164
		{
			yyVAL.empty = struct{}{}
		}
	case 769:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4170
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 770:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4174
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 771:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4180
		{
			yyLOCAL = &Use{DBName: yyDollar[2].identifierCS}
		}
		yyVAL.union = yyLOCAL
	case 772:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4184
		{
			yyLOCAL = &Use{DBName: IdentifierCS{v: ""}}
		}
		yyVAL.union = yyLOCAL
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4188
		{
			yyLOCAL = &Use{DBName: NewIdentifierCS(yyDollar[2].identifierCS.String() + "@" + string(yyDollar[3].str))}
		}
		yyVAL.union = yyLOCAL
	case 774:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4195
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4199
		{
			yyVAL.identifierCS = NewIdentifierCS("@" + string(yyDollar[1].str))
		}
	case 776:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4203
		{
			yyVAL.identifierCS = NewIdentifierCS("@@" + string(yyDollar[1].str))
		}
	case 777:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4207
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 778:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4214
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4218
		{
			yyLOCAL = &Begin{}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4224
		{
			yyLOCAL = &Commit{}
		}
		yyVAL.union = yyLOCAL
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4230
		{
			yyLOCAL = &Rollback{}
		}
		yyVAL.union = yyLOCAL
	case 782:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4234
		{
			yyLOCAL = &SRollback{Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 783:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4239
		{
			yyVAL.empty = struct{}{}
		}
	case 784:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4241
		{
			yyVAL.empty = struct{}{}
		}
	case 785:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4244
		{
			yyVAL.empty = struct{}{}
		}
	case 786:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4246
		{
			yyVAL.empty = struct{}{}
		}
	case 787:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4250
		{
			yyLOCAL = &Savepoint{Name: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4256
		{
			yyLOCAL = &Release{Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4261
		{
			yyLOCAL = EmptyType
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4265
		{
			yyLOCAL = JSONType
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4269
		{
			yyLOCAL = TreeType
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4273
		{
			yyLOCAL = VitessType
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4277
		{
			yyLOCAL = VTExplainType
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4281
		{
			yyLOCAL = TraditionalType
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ExplainType
//line sql.y:4285
		{
			yyLOCAL = AnalyzeType
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4291
		{
			yyVAL.str = yyDollar[1].str
		}
	case 797:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4295
		{
			yyVAL.str = yyDollar[1].str
		}
	case 798:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4299
		{
			yyVAL.str = yyDollar[1].str
		}
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4305
		{
			yyLOCAL = yyDollar[1].selStmtUnion()
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4309
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4313
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4317
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4322
		{
			yyVAL.str = ""
		}
	case 804:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4326
		{
			yyVAL.str = yyDollar[1].identifierCI.val
		}
	case 805:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4330
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 806:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4336
		{
			yyLOCAL = &ExplainTab{Table: yyDollar[3].tableName, Wild: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4340
		{
			yyLOCAL = &ExplainStmt{Type: yyDollar[3].explainTypeUnion(), Statement: yyDollar[4].statementUnion(), Comments: Comments(yyDollar[2].strs).Parsed()}
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4346
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4350
		{
			yyLOCAL = &OtherAdmin{}
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4356
		{
			yyLOCAL = &LockTables{Tables: yyDollar[3].tableAndLockTypesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableAndLockTypes
//line sql.y:4362
		{
			yyLOCAL = TableAndLockTypes{yyDollar[1].tableAndLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4366
		{
			yySLICE := (*TableAndLockTypes)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableAndLockTypeUnion())
		}
	case 813:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *TableAndLockType
//line sql.y:4372
		{
			yyLOCAL = &TableAndLockType{Table: yyDollar[1].aliasedTableNameUnion(), Lock: yyDollar[2].lockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4378
		{
			yyLOCAL = Read
		}
		yyVAL.union = yyLOCAL
	case 815:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4382
		{
			yyLOCAL = ReadLocal
		}
		yyVAL.union = yyLOCAL
	case 816:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4386
		{
			yyLOCAL = Write
		}
		yyVAL.union = yyLOCAL
	case 817:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL LockType
//line sql.y:4390
		{
			yyLOCAL = LowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 818:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4396
		{
			yyLOCAL = &UnlockTables{}
		}
		yyVAL.union = yyLOCAL
	case 819:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4402
		{
			yyLOCAL = &RevertMigration{Comments: Comments(yyDollar[2].strs).Parsed(), UUID: string(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4408
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), FlushOptions: yyDollar[3].strs}
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4412
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4416
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4420
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4424
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), WithLock: true}
		}
		yyVAL.union = yyLOCAL
	case 825:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4428
		{
			yyLOCAL = &Flush{IsLocal: yyDollar[2].booleanUnion(), TableNames: yyDollar[4].tableNamesUnion(), ForExport: true}
		}
		yyVAL.union = yyLOCAL
	case 826:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4434
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 827:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4438
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[3].str)
		}
	case 828:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4444
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 829:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4448
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 830:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4452
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 831:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4456
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 832:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4460
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 833:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4464
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 834:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4468
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 835:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4472
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str) + yyDollar[3].str
		}
	case 836:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4476
		{
			yyVAL.str = string(yyDollar[1].str) + " " + string(yyDollar[2].str)
		}
	case 837:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4480
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 838:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4484
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 839:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4488
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 840:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4493
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 841:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4497
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4501
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 843:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4506
		{
			yyVAL.str = ""
		}
	case 844:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4510
		{
			yyVAL.str = " " + string(yyDollar[1].str) + " " + string(yyDollar[2].str) + " " + yyDollar[3].identifierCI.String()
		}
	case 845:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4515
		{
			setAllowComments(yylex, true)
		}
	case 846:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4519
		{
			yyVAL.strs = yyDollar[2].strs
			setAllowComments(yylex, false)
		}
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4525
		{
			yyVAL.strs = nil
		}
	case 848:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4529
		{
			yyVAL.strs = append(yyDollar[1].strs, yyDollar[2].str)
		}
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4535
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4539
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:4543
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4548
		{
			yyVAL.str = ""
		}
	case 853:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4552
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4556
		{
			yyVAL.str = SQLCacheStr
		}
	case 855:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:4561
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4565
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:4569
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4575
		{
			yyLOCAL = &PrepareStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Statement: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4579
		{
			yyLOCAL = &PrepareStmt{
				Name:      yyDollar[3].identifierCI,
				Comments:  Comments(yyDollar[2].strs).Parsed(),
				Statement: yyDollar[5].variableUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4589
		{
			yyLOCAL = &ExecuteStmt{Name: yyDollar[3].identifierCI, Comments: Comments(yyDollar[2].strs).Parsed(), Arguments: yyDollar[4].variablesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 861:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4594
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4598
		{
			yyLOCAL = yyDollar[2].variablesUnion()
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4604
		{
			yyLOCAL = &DeallocateStmt{Type: DeallocateType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Statement
//line sql.y:4608
		{
			yyLOCAL = &DeallocateStmt{Type: DropType, Comments: Comments(yyDollar[2].strs).Parsed(), Name: yyDollar[4].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4613
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4617
		{
			yyLOCAL = yyDollar[1].selectExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4622
		{
			yyVAL.strs = nil
		}
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4626
		{
			yyVAL.strs = []string{yyDollar[1].str}
		}
	case 869:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4630
		{ // TODO: This is a hack since I couldn't get it to work in a nicer way. I got 'conflicts: 8 shift/reduce'
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str}
		}
	case 870:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4634
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str}
		}
	case 871:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4638
		{
			yyVAL.strs = []string{yyDollar[1].str, yyDollar[2].str, yyDollar[3].str, yyDollar[4].str}
		}
	case 872:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4644
		{
			yyVAL.str = SQLNoCacheStr
		}
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4648
		{
			yyVAL.str = SQLCacheStr
		}
	case 874:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4652
		{
			yyVAL.str = DistinctStr
		}
	case 875:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4656
		{
			yyVAL.str = DistinctStr
		}
	case 876:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4660
		{
			yyVAL.str = StraightJoinHint
		}
	case 877:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4664
		{
			yyVAL.str = SQLCalcFoundRowsStr
		}
	case 878:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4668
		{
			yyVAL.str = AllStr // These are not picked up by NewSelect, and so ALL will be dropped. But this is OK, since it's redundant anyway
		}
	case 879:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExprs
//line sql.y:4674
		{
			createAliasForEmpty(yyDollar[2].selectExprUnion(), yylex.(*Tokenizer).buf[yyDollar[1].integerUnion():yyDollar[3].integerUnion()])
			yyLOCAL = SelectExprs{yyDollar[2].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 880:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:4679
		{
			createAliasForEmpty(yyDollar[4].selectExprUnion(), yylex.(*Tokenizer).buf[yyDollar[3].integerUnion():yyDollar[5].integerUnion()])
			yySLICE := (*SelectExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[4].selectExprUnion())
		}
	case 881:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4685
		{
			yyLOCAL = yylex.(*Tokenizer).PrevPos
		}
		yyVAL.union = yyLOCAL
	case 882:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int
//line sql.y:4690
		{
			yyLOCAL = yylex.(*Tokenizer).Pos
		}
		yyVAL.union = yyLOCAL
	case 883:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4696
		{
			yyLOCAL = &StarExpr{}
		}
		yyVAL.union = yyLOCAL
	case 884:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4700
		{
			yyLOCAL = &AliasedExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 885:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4704
		{
			yyLOCAL = &StarExpr{TableName: TableName{Name: yyDollar[1].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 886:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL SelectExpr
//line sql.y:4708
		{
			yyLOCAL = &StarExpr{TableName: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}}
		}
		yyVAL.union = yyLOCAL
	case 887:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4713
		{
			yyVAL.identifierCI = IdentifierCI{}
		}
	case 888:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4717
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 889:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4721
		{
			yyVAL.identifierCI = yyDollar[2].identifierCI
		}
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4728
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 892:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4733
		{
			yyLOCAL = TableExprs{&AliasedTableExpr{Expr: TableName{Name: NewIdentifierCS("dual")}}}
		}
		yyVAL.union = yyLOCAL
	case 893:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4737
		{
			yyLOCAL = yyDollar[1].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4743
		{
			yyLOCAL = yyDollar[2].tableExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExprs
//line sql.y:4749
		{
			yyLOCAL = TableExprs{yyDollar[1].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4753
		{
			yySLICE := (*TableExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].tableExprUnion())
		}
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4763
		{
			yyLOCAL = yyDollar[1].aliasedTableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4767
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].derivedTableUnion(), As: yyDollar[3].identifierCS, Columns: yyDollar[4].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4771
		{
			yyLOCAL = &ParenTableExpr{Exprs: yyDollar[2].tableExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4775
		{
			yyLOCAL = yyDollar[1].tableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4781
		{
			yyLOCAL = &DerivedTable{Lateral: false, Select: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *DerivedTable
//line sql.y:4785
		{
			yyLOCAL = &DerivedTable{Lateral: true, Select: yyDollar[2].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4791
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, As: yyDollar[2].identifierCS, Hints: yyDollar[3].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *AliasedTableExpr
//line sql.y:4795
		{
			yyLOCAL = &AliasedTableExpr{Expr: yyDollar[1].tableName, Partitions: yyDollar[4].partitionsUnion(), As: yyDollar[6].identifierCS, Hints: yyDollar[7].indexHintsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4800
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4804
		{
			yyLOCAL = yyDollar[2].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4809
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4813
		{
			yyLOCAL = yyDollar[1].columnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4819
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4823
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 913:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*Variable
//line sql.y:4829
		{
			yyLOCAL = []*Variable{yyDollar[1].variableUnion()}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4833
		{
			yySLICE := (*[]*Variable)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].variableUnion())
		}
	case 915:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4839
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:4843
		{
			yyLOCAL = Columns{NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4847
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4851
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, NewIdentifierCI(string(yyDollar[3].str)))
		}
	case 919:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Partitions
//line sql.y:4857
		{
			yyLOCAL = Partitions{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 920:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:4861
		{
			yySLICE := (*Partitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 921:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4874
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4878
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4882
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion(), Condition: yyDollar[4].joinCondition}
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL TableExpr
//line sql.y:4886
		{
			yyLOCAL = &JoinTableExpr{LeftExpr: yyDollar[1].tableExprUnion(), Join: yyDollar[2].joinTypeUnion(), RightExpr: yyDollar[3].tableExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4892
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 926:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:4894
		{
			yyVAL.joinCondition = &JoinCondition{Using: yyDollar[3].columnsUnion()}
		}
	case 927:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4898
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 928:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4900
		{
			yyVAL.joinCondition = yyDollar[1].joinCondition
		}
	case 929:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4904
		{
			yyVAL.joinCondition = &JoinCondition{}
		}
	case 930:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4906
		{
			yyVAL.joinCondition = &JoinCondition{On: yyDollar[2].exprUnion()}
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4909
		{
			yyVAL.empty = struct{}{}
		}
	case 932:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4911
		{
			yyVAL.empty = struct{}{}
		}
	case 933:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:4914
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4918
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 935:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4922
		{
			yyVAL.identifierCS = yyDollar[2].identifierCS
		}
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4929
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 938:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4935
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4939
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4943
		{
			yyLOCAL = NormalJoinType
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4949
		{
			yyLOCAL = StraightJoinType
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4955
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4959
		{
			yyLOCAL = LeftJoinType
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4963
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4967
		{
			yyLOCAL = RightJoinType
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4973
		{
			yyLOCAL = NaturalJoinType
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL JoinType
//line sql.y:4977
		{
			if yyDollar[2].joinTypeUnion() == LeftJoinType {
				yyLOCAL = NaturalLeftJoinType
			} else {
				yyLOCAL = NaturalRightJoinType
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:4987
		{
			yyVAL.tableName = yyDollar[2].tableName
		}
	case 949:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4991
		{
			yyVAL.tableName = yyDollar[1].tableName
		}
	case 950:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:4997
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 951:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5001
		{
			yyVAL.tableName = TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}
		}
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5007
		{
			yyVAL.tableName = TableName{Name: yyDollar[1].identifierCS}
		}
	case 953:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5012
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5016
		{
			yyLOCAL = yyDollar[1].indexHintsUnion()
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IndexHints
//line sql.y:5022
		{
			yyLOCAL = IndexHints{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:5026
		{
			yySLICE := (*IndexHints)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].indexHintUnion())
		}
	case 957:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5032
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5036
		{
			yyLOCAL = &IndexHint{Type: UseOp, ForType: yyDollar[3].indexHintForTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5040
		{
			yyLOCAL = &IndexHint{Type: IgnoreOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *IndexHint
//line sql.y:5044
		{
			yyLOCAL = &IndexHint{Type: ForceOp, ForType: yyDollar[3].indexHintForTypeUnion(), Indexes: yyDollar[5].columnsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5049
		{
			yyLOCAL = NoForType
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5053
		{
			yyLOCAL = JoinForType
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5057
		{
			yyLOCAL = OrderByForType
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL IndexHintForType
//line sql.y:5061
		{
			yyLOCAL = GroupByForType
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5067
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5071
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5078
		{
			yyLOCAL = &OrExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5082
		{
			yyLOCAL = &XorExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5086
		{
			yyLOCAL = &AndExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5090
		{
			yyLOCAL = &NotExpr{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5094
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: yyDollar[3].isExprOperatorUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5098
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5102
		{
			yyLOCAL = &MemberOfExpr{Value: yyDollar[1].exprUnion(), JSONArr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5108
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNullOp}
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5112
		{
			yyLOCAL = &IsExpr{Left: yyDollar[1].exprUnion(), Right: IsNotNullOp}
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5116
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: yyDollar[2].comparisonExprOperatorUnion(), Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5120
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5126
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: InOp, Right: yyDollar[3].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5130
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotInOp, Right: yyDollar[4].colTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5134
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: true, From: yyDollar[3].exprUnion(), To: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 981:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5138
		{
			yyLOCAL = &BetweenExpr{Left: yyDollar[1].exprUnion(), IsBetween: false, From: yyDollar[4].exprUnion(), To: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 982:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5142
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5146
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5150
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: LikeOp, Right: yyDollar[3].exprUnion(), Escape: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5154
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotLikeOp, Right: yyDollar[4].exprUnion(), Escape: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5158
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: RegexpOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5162
		{
			yyLOCAL = &ComparisonExpr{Left: yyDollar[1].exprUnion(), Operator: NotRegexpOp, Right: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5166
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5172
		{
		}
	case 990:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5175
		{
		}
	case 991:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5181
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitOrOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5185
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitAndOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5189
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftLeftOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5193
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ShiftRightOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5197
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: PlusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5201
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MinusOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5205
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: MultOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5209
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: DivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5213
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5217
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: IntDivOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5221
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: ModOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5225
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: BitXorOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5229
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5235
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5239
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5243
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5247
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5251
		{
			yyLOCAL = &CollateExpr{Expr: yyDollar[1].exprUnion(), Collation: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5255
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5259
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5263
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5267
		{
			yyLOCAL = yyDollar[2].exprUnion() // TODO: do we really want to ignore unary '+' before any kind of literals?
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5271
		{
			yyLOCAL = &UnaryExpr{Operator: UMinusOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5275
		{
			yyLOCAL = &UnaryExpr{Operator: TildaOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5279
		{
			yyLOCAL = &UnaryExpr{Operator: BangOp, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5283
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5287
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5291
		{
			yyLOCAL = &ExistsExpr{Subquery: yyDollar[2].subqueryUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5295
		{
			yyLOCAL = &MatchExpr{Columns: yyDollar[2].colNamesUnion(), Expr: yyDollar[5].exprUnion(), Option: yyDollar[6].matchExprOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5299
		{
			yyLOCAL = &CastExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion(), Array: yyDollar[6].booleanUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5303
		{
			yyLOCAL = &ConvertExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5307
		{
			yyLOCAL = &ConvertUsingExpr{Expr: yyDollar[3].exprUnion(), Type: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5311
		{
			// From: https://dev.mysql.com/doc/refman/8.0/en/cast-functions.html#operator_binary
			// To convert a string expression to a binary string, these constructs are equivalent:
			//    CAST(expr AS BINARY)
			//    BINARY expr
			yyLOCAL = &ConvertExpr{Expr: yyDollar[2].exprUnion(), Type: &ConvertType{Type: yyDollar[1].str}}
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5319
		{
			yyLOCAL = &Default{ColName: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5323
		{
			// INTERVAL can trigger a shift / reduce conflict. We want
			// to shift here for the interval rule. In case we do have
			// the additional expression_list below, we'd pick that path
			// and thus properly parse it as a function when needed.
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5331
		{
			yyLOCAL = &IntervalFuncExpr{Expr: yyDollar[3].exprUnion(), Exprs: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5335
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5339
		{
			yyLOCAL = &BinaryExpr{Left: yyDollar[1].exprUnion(), Operator: JSONUnquoteExtractOp, Right: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5345
		{
			yyLOCAL = &IntervalExpr{Expr: yyDollar[2].exprUnion(), Unit: yyDollar[3].identifierCI.String()}
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5351
		{
			yyLOCAL = yyDollar[1].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5355
		{
			yyLOCAL = yyDollar[2].colNamesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*ColName
//line sql.y:5361
		{
			yyLOCAL = []*ColName{yyDollar[1].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5365
		{
			yySLICE := (*[]*ColName)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].colNameUnion())
		}
	case 1034:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5371
		{
			yyLOCAL = BothTrimType
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5375
		{
			yyLOCAL = LeadingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL TrimType
//line sql.y:5379
		{
			yyLOCAL = TrailingTrimType
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5385
		{
			yyLOCAL = FrameRowsType
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FrameUnitType
//line sql.y:5389
		{
			yyLOCAL = FrameRangeType
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5396
		{
			yyLOCAL = CumeDistExprType
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5400
		{
			yyLOCAL = DenseRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5404
		{
			yyLOCAL = PercentRankExprType
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5408
		{
			yyLOCAL = RankExprType
		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ArgumentLessWindowExprType
//line sql.y:5412
		{
			yyLOCAL = RowNumberExprType
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5418
		{
			yyLOCAL = &FramePoint{Type: CurrentRowType}
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5422
		{
			yyLOCAL = &FramePoint{Type: UnboundedPrecedingType}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5426
		{
			yyLOCAL = &FramePoint{Type: UnboundedFollowingType}
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5430
		{
			yyLOCAL = &FramePoint{Type: ExprPrecedingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FramePoint
//line sql.y:5434
		{
			yyLOCAL = &FramePoint{Type: ExprFollowingType, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5440
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5444
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5449
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5453
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5459
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[2].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *FrameClause
//line sql.y:5463
		{
			yyLOCAL = &FrameClause{Unit: yyDollar[1].frameUnitTypeUnion(), Start: yyDollar[3].framePointUnion(), End: yyDollar[5].framePointUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5468
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5472
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5477
		{
		}
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:5480
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1059:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *WindowSpecification
//line sql.y:5486
		{
			yyLOCAL = &WindowSpecification{Name: yyDollar[1].identifierCI, PartitionClause: yyDollar[2].exprsUnion(), OrderClause: yyDollar[3].orderByUnion(), FrameClause: yyDollar[4].frameClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5492
		{
			yyLOCAL = &OverClause{WindowSpec: yyDollar[3].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *OverClause
//line sql.y:5496
		{
			yyLOCAL = &OverClause{WindowName: yyDollar[2].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *NullTreatmentClause
//line sql.y:5508
		{
			yyLOCAL = &NullTreatmentClause{yyDollar[1].nullTreatmentTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5514
		{
			yyLOCAL = RespectNullsType
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL NullTreatmentType
//line sql.y:5518
		{
			yyLOCAL = IgnoreNullsType
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5524
		{
			yyLOCAL = FirstValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL FirstOrLastValueExprType
//line sql.y:5528
		{
			yyLOCAL = LastValueExprType
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5534
		{
			yyLOCAL = FromFirstType
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL FromFirstLastType
//line sql.y:5538
		{
			yyLOCAL = FromLastType
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5543
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *FromFirstLastClause
//line sql.y:5550
		{
			yyLOCAL = &FromFirstLastClause{yyDollar[1].fromFirstLastTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5556
		{
			yyLOCAL = LagExprType
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL LagLeadExprType
//line sql.y:5560
		{
			yyLOCAL = LeadExprType
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *WindowDefinition
//line sql.y:5566
		{
			yyLOCAL = &WindowDefinition{Name: yyDollar[1].identifierCI, WindowSpec: yyDollar[4].windowSpecificationUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL WindowDefinitions
//line sql.y:5572
		{
			yyLOCAL = WindowDefinitions{yyDollar[1].windowDefinitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5576
		{
			yySLICE := (*WindowDefinitions)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].windowDefinitionUnion())
		}
	case 1079:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:5582
		{
			yyVAL.str = ""
		}
	case 1080:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5586
		{
			yyVAL.str = string(yyDollar[2].identifierCI.String())
		}
	case 1081:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5592
		{
			yyLOCAL = BoolVal(true)
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL BoolVal
//line sql.y:5596
		{
			yyLOCAL = BoolVal(false)
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5603
		{
			yyLOCAL = IsTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5607
		{
			yyLOCAL = IsNotTrueOp
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5611
		{
			yyLOCAL = IsFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL IsExprOperator
//line sql.y:5615
		{
			yyLOCAL = IsNotFalseOp
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5621
		{
			yyLOCAL = EqualOp
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5625
		{
			yyLOCAL = LessThanOp
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5629
		{
			yyLOCAL = GreaterThanOp
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5633
		{
			yyLOCAL = LessEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5637
		{
			yyLOCAL = GreaterEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5641
		{
			yyLOCAL = NotEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ComparisonExprOperator
//line sql.y:5645
		{
			yyLOCAL = NullSafeEqualOp
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5651
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5655
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ColTuple
//line sql.y:5659
		{
			yyLOCAL = ListArg(yyDollar[1].str[2:])
			bindVariable(yylex, yyDollar[1].str[2:])
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Subquery
//line sql.y:5666
		{
			yyLOCAL = &Subquery{yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:5672
		{
			yyLOCAL = Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:5676
		{
			yySLICE := (*Exprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].exprUnion())
		}
	case 1100:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5686
		{
			yyLOCAL = &FuncExpr{Name: yyDollar[1].identifierCI, Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5690
		{
			yyLOCAL = &FuncExpr{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCI, Exprs: yyDollar[5].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5700
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("left"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5704
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("right"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5708
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5712
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5716
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion(), To: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5720
		{
			yyLOCAL = &SubstrExpr{Name: yyDollar[3].exprUnion(), From: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5724
		{
			yyLOCAL = &CaseExpr{Expr: yyDollar[2].exprUnion(), Whens: yyDollar[3].whensUnion(), Else: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5728
		{
			yyLOCAL = &ValuesFuncExpr{Name: yyDollar[3].colNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5732
		{
			yyLOCAL = &InsertExpr{Str: yyDollar[3].exprUnion(), Pos: yyDollar[5].exprUnion(), Len: yyDollar[7].exprUnion(), NewStr: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5736
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5747
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("utc_date")}
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5751
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5757
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("current_date")}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5761
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("utc_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5766
		{
			yyLOCAL = &CurTimeFuncExpr{Name: NewIdentifierCI("current_time"), Fsp: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5770
		{
			yyLOCAL = &CountStar{}
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5774
		{
			yyLOCAL = &Count{Distinct: yyDollar[3].booleanUnion(), Args: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5778
		{
			yyLOCAL = &Max{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5782
		{
			yyLOCAL = &Min{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5786
		{
			yyLOCAL = &Sum{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5790
		{
			yyLOCAL = &Avg{Distinct: yyDollar[3].booleanUnion(), Arg: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5794
		{
			yyLOCAL = &BitAnd{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5798
		{
			yyLOCAL = &BitOr{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5802
		{
			yyLOCAL = &BitXor{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5806
		{
			yyLOCAL = &Std{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5810
		{
			yyLOCAL = &StdDev{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5814
		{
			yyLOCAL = &StdPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5818
		{
			yyLOCAL = &StdSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5822
		{
			yyLOCAL = &VarPop{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5826
		{
			yyLOCAL = &VarSamp{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5830
		{
			yyLOCAL = &Variance{Arg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5834
		{
			yyLOCAL = &GroupConcatExpr{Distinct: yyDollar[3].booleanUnion(), Exprs: yyDollar[4].exprsUnion(), OrderBy: yyDollar[5].orderByUnion(), Separator: yyDollar[6].str, Limit: yyDollar[7].limitUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1134:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5838
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampadd"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1135:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5842
		{
			yyLOCAL = &TimestampFuncExpr{Name: string("timestampdiff"), Unit: yyDollar[3].identifierCI.String(), Expr1: yyDollar[5].exprUnion(), Expr2: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5846
		{
			yyLOCAL = &ExtractFuncExpr{IntervalTypes: yyDollar[3].intervalTypeUnion(), Expr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5850
		{
			yyLOCAL = &WeightStringFuncExpr{Expr: yyDollar[3].exprUnion(), As: yyDollar[4].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5854
		{
			yyLOCAL = &JSONPrettyExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5858
		{
			yyLOCAL = &JSONStorageFreeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5862
		{
			yyLOCAL = &JSONStorageSizeExpr{JSONVal: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1141:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5866
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: LTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1142:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5870
		{
			yyLOCAL = &TrimFuncExpr{TrimFuncType: RTrimType, StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1143:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5874
		{
			yyLOCAL = &TrimFuncExpr{Type: yyDollar[3].trimTypeUnion(), TrimArg: yyDollar[4].exprUnion(), StringArg: yyDollar[6].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1144:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5878
		{
			yyLOCAL = &TrimFuncExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5882
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5886
		{
			yyLOCAL = &CharExpr{Exprs: yyDollar[3].exprsUnion(), Charset: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5890
		{
			yyLOCAL = &TrimFuncExpr{TrimArg: yyDollar[3].exprUnion(), StringArg: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5894
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5898
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion(), Pos: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1150:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5902
		{
			yyLOCAL = &LocateExpr{SubStr: yyDollar[3].exprUnion(), Str: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5906
		{
			yyLOCAL = &LockingFunc{Type: GetLock, Name: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5910
		{
			yyLOCAL = &LockingFunc{Type: IsFreeLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5914
		{
			yyLOCAL = &LockingFunc{Type: IsUsedLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5918
		{
			yyLOCAL = &LockingFunc{Type: ReleaseAllLocks}
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5922
		{
			yyLOCAL = &LockingFunc{Type: ReleaseLock, Name: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5926
		{
			yyLOCAL = &JSONSchemaValidFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5930
		{
			yyLOCAL = &JSONSchemaValidationReportFuncExpr{Schema: yyDollar[3].exprUnion(), Document: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5934
		{
			yyLOCAL = &JSONArrayExpr{Params: yyDollar[3].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5938
		{
			yyLOCAL = &JSONObjectExpr{Params: yyDollar[3].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5942
		{
			yyLOCAL = &JSONQuoteExpr{StringArg: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5946
		{
			yyLOCAL = &JSONContainsExpr{Target: yyDollar[3].exprUnion(), Candidate: yyDollar[5].exprsUnion()[0], PathList: yyDollar[5].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5950
		{
			yyLOCAL = &JSONContainsPathExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), PathList: yyDollar[7].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5954
		{
			yyLOCAL = &JSONExtractExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5958
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5962
		{
			yyLOCAL = &JSONKeysExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5966
		{
			yyLOCAL = &JSONOverlapsExpr{JSONDoc1: yyDollar[3].exprUnion(), JSONDoc2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5970
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5974
		{
			yyLOCAL = &JSONSearchExpr{JSONDoc: yyDollar[3].exprUnion(), OneOrAll: yyDollar[5].exprUnion(), SearchStr: yyDollar[7].exprUnion(), EscapeChar: yyDollar[9].exprsUnion()[0], PathList: yyDollar[9].exprsUnion()[1:]}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5978
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5982
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1171:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5986
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), ErrorOnResponse: yyDollar[7].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5990
		{
			yyLOCAL = &JSONValueExpr{JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion(), ReturningType: yyDollar[6].convertTypeUnion(), EmptyOnResponse: yyDollar[7].jtOnResponseUnion(), ErrorOnResponse: yyDollar[8].jtOnResponseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1173:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5994
		{
			yyLOCAL = &JSONAttributesExpr{Type: DepthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1174:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:5998
		{
			yyLOCAL = &JSONAttributesExpr{Type: ValidAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1175:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6002
		{
			yyLOCAL = &JSONAttributesExpr{Type: TypeAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1176:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6006
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6010
		{
			yyLOCAL = &JSONAttributesExpr{Type: LengthAttributeType, JSONDoc: yyDollar[3].exprUnion(), Path: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6014
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayAppendType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1179:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6018
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONArrayInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1180:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6022
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONInsertType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1181:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6026
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONReplaceType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1182:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6030
		{
			yyLOCAL = &JSONValueModifierExpr{Type: JSONSetType, JSONDoc: yyDollar[3].exprUnion(), Params: yyDollar[5].jsonObjectParamsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1183:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6034
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergeType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1184:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6038
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePatchType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1185:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6042
		{
			yyLOCAL = &JSONValueMergeExpr{Type: JSONMergePreserveType, JSONDoc: yyDollar[3].exprUnion(), JSONDocList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1186:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6046
		{
			yyLOCAL = &JSONRemoveExpr{JSONDoc: yyDollar[3].exprUnion(), PathList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6050
		{
			yyLOCAL = &JSONUnquoteExpr{JSONValue: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1188:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6054
		{
			yyLOCAL = &ArgumentLessWindowExpr{Type: yyDollar[1].argumentLessWindowExprTypeUnion(), OverClause: yyDollar[4].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1189:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6058
		{
			yyLOCAL = &FirstOrLastValueExpr{Type: yyDollar[1].firstOrLastValueExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6062
		{
			yyLOCAL = &NtileExpr{N: yyDollar[3].exprUnion(), OverClause: yyDollar[5].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6066
		{
			yyLOCAL = &NTHValueExpr{Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), FromFirstLastClause: yyDollar[7].fromFirstLastClauseUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6070
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), NullTreatmentClause: yyDollar[5].nullTreatmentClauseUnion(), OverClause: yyDollar[6].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6074
		{
			yyLOCAL = &LagLeadExpr{Type: yyDollar[1].lagLeadExprTypeUnion(), Expr: yyDollar[3].exprUnion(), N: yyDollar[5].exprUnion(), Default: yyDollar[6].exprUnion(), NullTreatmentClause: yyDollar[8].nullTreatmentClauseUnion(), OverClause: yyDollar[9].overClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6084
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6088
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6092
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6096
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6102
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6106
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6112
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6116
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6120
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6124
		{
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6128
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpInstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), ReturnOption: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6133
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6137
		{
			yyLOCAL = &RegexpLikeExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), MatchType: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6141
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6145
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6149
		{
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-14 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6153
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpReplaceExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Repl: yyDollar[7].exprUnion(), Position: yyDollar[9].exprUnion(), Occurrence: yyDollar[11].exprUnion(), MatchType: yyDollar[13].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6158
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6162
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6166
		{
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6170
		{
			// Match type is kept expression as TRIM( ' m  ') is accepted
			yyLOCAL = &RegexpSubstrExpr{Expr: yyDollar[3].exprUnion(), Pattern: yyDollar[5].exprUnion(), Position: yyDollar[7].exprUnion(), Occurrence: yyDollar[9].exprUnion(), MatchType: yyDollar[11].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6177
		{
			yyLOCAL = &ExtractValueExpr{Fragment: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6181
		{
			yyLOCAL = &UpdateXMLExpr{Target: yyDollar[3].exprUnion(), XPathExpr: yyDollar[5].exprUnion(), NewXML: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6187
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatBytesType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6191
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: FormatPicoTimeType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6195
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsCurrentThreadIDType}
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6199
		{
			yyLOCAL = &PerformanceSchemaFuncExpr{Type: PsThreadIDType, Argument: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6205
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubsetType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6209
		{
			yyLOCAL = &GTIDFuncExpr{Type: GTIDSubtractType, Set1: yyDollar[3].exprUnion(), Set2: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6213
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6217
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitForExecutedGTIDSetType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1229:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6221
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1230:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6225
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1231:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6229
		{
			yyLOCAL = &GTIDFuncExpr{Type: WaitUntilSQLThreadAfterGTIDSType, Set1: yyDollar[3].exprUnion(), Timeout: yyDollar[5].exprUnion(), Channel: yyDollar[7].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1232:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6234
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6238
		{
			yyLOCAL = yyDollar[2].convertTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6244
		{
		}
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6246
		{
			yyLOCAL = IntervalDayHour
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6250
		{
			yyLOCAL = IntervalDayMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6254
		{
			yyLOCAL = IntervalDayMinute
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6258
		{
			yyLOCAL = IntervalDaySecond
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6262
		{
			yyLOCAL = IntervalHourMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6266
		{
			yyLOCAL = IntervalHourMinute
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6270
		{
			yyLOCAL = IntervalHourSecond
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6274
		{
			yyLOCAL = IntervalMinuteMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6278
		{
			yyLOCAL = IntervalMinuteSecond
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6282
		{
			yyLOCAL = IntervalSecondMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6286
		{
			yyLOCAL = IntervalYearMonth
		}
		yyVAL.union = yyLOCAL
	case 1246:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6292
		{
			yyLOCAL = IntervalDay
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6296
		{
			yyLOCAL = IntervalWeek
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6300
		{
			yyLOCAL = IntervalHour
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6304
		{
			yyLOCAL = IntervalMinute
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6308
		{
			yyLOCAL = IntervalMonth
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6312
		{
			yyLOCAL = IntervalQuarter
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6316
		{
			yyLOCAL = IntervalSecond
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6320
		{
			yyLOCAL = IntervalMicrosecond
		}
		yyVAL.union = yyLOCAL
	case 1254:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL IntervalTypes
//line sql.y:6324
		{
			yyLOCAL = IntervalYear
		}
		yyVAL.union = yyLOCAL
	case 1257:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6334
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1258:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6338
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1259:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6342
		{
			yyLOCAL = NewIntLiteral(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6346
		{
			yyLOCAL = NewArgument(yyDollar[2].str[1:])
			bindVariable(yylex, yyDollar[2].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6357
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("if"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6361
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("database"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6365
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("schema"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6369
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("mod"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6373
		{
			yyLOCAL = &FuncExpr{Name: NewIdentifierCI("replace"), Exprs: yyDollar[3].selectExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6379
		{
			yyLOCAL = NoOption
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6383
		{
			yyLOCAL = BooleanModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6387
		{
			yyLOCAL = NaturalLanguageModeOpt
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6391
		{
			yyLOCAL = NaturalLanguageModeWithQueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL MatchExprOption
//line sql.y:6395
		{
			yyLOCAL = QueryExpansionOpt
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6401
		{
			yyVAL.str = string(yyDollar[1].identifierCI.String())
		}
	case 1272:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6405
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6409
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1274:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6415
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6419
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6423
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[2].str), Length: NewIntLiteral(yyDollar[4].str)}
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6429
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6433
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion(), Charset: yyDollar[3].columnCharset}
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6437
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6441
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6445
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
			yyLOCAL.Length = yyDollar[2].LengthScaleOption.Length
			yyLOCAL.Scale = yyDollar[2].LengthScaleOption.Scale
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6451
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6455
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6459
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6463
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6467
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6471
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6475
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6479
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str), Length: yyDollar[2].literalUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6483
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ConvertType
//line sql.y:6487
		{
			yyLOCAL = &ConvertType{Type: string(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:6493
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:6497
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6502
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6506
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6511
		{
			yyVAL.str = string("")
		}
	case 1297:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6515
		{
			yyVAL.str = " separator " + encodeSQLString(yyDollar[2].str)
		}
	case 1298:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*When
//line sql.y:6521
		{
			yyLOCAL = []*When{yyDollar[1].whenUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6525
		{
			yySLICE := (*[]*When)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[2].whenUnion())
		}
	case 1300:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *When
//line sql.y:6531
		{
			yyLOCAL = &When{Cond: yyDollar[2].exprUnion(), Val: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6536
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6540
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6546
		{
			yyLOCAL = &ColName{Name: yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6550
		{
			yyLOCAL = &ColName{Name: NewIdentifierCI(string(yyDollar[1].str))}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6554
		{
			yyLOCAL = &ColName{Qualifier: TableName{Name: yyDollar[1].identifierCS}, Name: yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1306:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *ColName
//line sql.y:6558
		{
			yyLOCAL = &ColName{Qualifier: TableName{Qualifier: yyDollar[1].identifierCS, Name: yyDollar[3].identifierCS}, Name: yyDollar[5].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6564
		{
			yyLOCAL = yyDollar[1].colNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1308:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6568
		{
			yyLOCAL = &Offset{V: convertStringToInt(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6574
		{
			// TODO(sougou): Deprecate this construct.
			if yyDollar[1].identifierCI.Lowered() != "value" {
				yylex.Error("expecting value after next")
				return 1
			}
			yyLOCAL = NewIntLiteral("1")
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6583
		{
			yyLOCAL = NewIntLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6587
		{
			yyLOCAL = NewArgument(yyDollar[1].str[1:])
			bindVariable(yylex, yyDollar[1].str[1:])
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6593
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:6597
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6602
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Expr
//line sql.y:6606
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *NamedWindow
//line sql.y:6612
		{
			yyLOCAL = &NamedWindow{yyDollar[2].windowDefinitionsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6618
		{
			yyLOCAL = NamedWindows{yyDollar[1].namedWindowUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1318:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6622
		{
			yySLICE := (*NamedWindows)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].namedWindowUnion())
		}
	case 1319:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6627
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1320:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL NamedWindows
//line sql.y:6631
		{
			yyLOCAL = yyDollar[1].namedWindowsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1321:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6636
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6640
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6646
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderBy
//line sql.y:6652
		{
			yyLOCAL = OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6656
		{
			yySLICE := (*OrderBy)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].orderUnion())
		}
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Order
//line sql.y:6662
		{
			yyLOCAL = &Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].orderDirectionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6667
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6671
		{
			yyLOCAL = AscOrder
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL OrderDirection
//line sql.y:6675
		{
			yyLOCAL = DescOrder
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6680
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6684
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6690
		{
			yyLOCAL = &Limit{Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6694
		{
			yyLOCAL = &Limit{Offset: yyDollar[2].exprUnion(), Rowcount: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Limit
//line sql.y:6698
		{
			yyLOCAL = &Limit{Offset: yyDollar[4].exprUnion(), Rowcount: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6703
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6707
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6711
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion(), yyDollar[2].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6715
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1339:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []AlterOption
//line sql.y:6719
		{
			yyLOCAL = []AlterOption{yyDollar[1].alterOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1340:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6726
		{
			yyLOCAL = &LockOption{Type: DefaultType}
		}
		yyVAL.union = yyLOCAL
	case 1341:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6730
		{
			yyLOCAL = &LockOption{Type: NoneType}
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6734
		{
			yyLOCAL = &LockOption{Type: SharedType}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6738
		{
			yyLOCAL = &LockOption{Type: ExclusiveType}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6744
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6748
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6752
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL AlterOption
//line sql.y:6756
		{
			yyLOCAL = AlgorithmValue(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6761
		{
			yyVAL.str = ""
		}
	case 1349:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6765
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1350:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6769
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1351:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6773
		{
			yyVAL.str = string(yyDollar[3].str)
		}
	case 1352:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6778
		{
			yyVAL.str = ""
		}
	case 1353:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6782
		{
			yyVAL.str = yyDollar[3].str
		}
	case 1354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6788
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1355:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6792
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1356:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6797
		{
			yyVAL.str = ""
		}
	case 1357:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6801
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1358:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6806
		{
			yyVAL.str = "cascaded"
		}
	case 1359:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6810
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1360:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6814
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 1361:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6819
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1362:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6823
		{
			yyLOCAL = yyDollar[3].definerUnion()
		}
		yyVAL.union = yyLOCAL
	case 1363:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6829
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1364:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6835
		{
			yyLOCAL = &Definer{
				Name: string(yyDollar[1].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Definer
//line sql.y:6841
		{
			yyLOCAL = &Definer{
				Name:    yyDollar[1].str,
				Address: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6850
		{
			yyVAL.str = encodeSQLString(yyDollar[1].str)
		}
	case 1367:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6854
		{
			yyVAL.str = formatIdentifier(yyDollar[1].str)
		}
	case 1368:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6859
		{
			yyVAL.str = ""
		}
	case 1369:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6863
		{
			yyVAL.str = formatAddress(yyDollar[1].str)
		}
	case 1370:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6869
		{
			yyLOCAL = ForUpdateLock
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL Lock
//line sql.y:6873
		{
			yyLOCAL = ShareModeLock
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6879
		{
			yyLOCAL = &SelectInto{Type: IntoOutfileS3, FileName: encodeSQLString(yyDollar[4].str), Charset: yyDollar[5].columnCharset, FormatOption: yyDollar[6].str, ExportOption: yyDollar[7].str, Manifest: yyDollar[8].str, Overwrite: yyDollar[9].str}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6883
		{
			yyLOCAL = &SelectInto{Type: IntoDumpfile, FileName: encodeSQLString(yyDollar[3].str), Charset: ColumnCharset{}, FormatOption: "", ExportOption: "", Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *SelectInto
//line sql.y:6887
		{
			yyLOCAL = &SelectInto{Type: IntoOutfile, FileName: encodeSQLString(yyDollar[3].str), Charset: yyDollar[4].columnCharset, FormatOption: "", ExportOption: yyDollar[5].str, Manifest: "", Overwrite: ""}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6892
		{
			yyVAL.str = ""
		}
	case 1376:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6896
		{
			yyVAL.str = " format csv" + yyDollar[3].str
		}
	case 1377:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6900
		{
			yyVAL.str = " format text" + yyDollar[3].str
		}
	case 1378:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6905
		{
			yyVAL.str = ""
		}
	case 1379:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6909
		{
			yyVAL.str = " header"
		}
	case 1380:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6914
		{
			yyVAL.str = ""
		}
	case 1381:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6918
		{
			yyVAL.str = " manifest on"
		}
	case 1382:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6922
		{
			yyVAL.str = " manifest off"
		}
	case 1383:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6927
		{
			yyVAL.str = ""
		}
	case 1384:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6931
		{
			yyVAL.str = " overwrite on"
		}
	case 1385:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6935
		{
			yyVAL.str = " overwrite off"
		}
	case 1386:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6941
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1387:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6946
		{
			yyVAL.str = ""
		}
	case 1388:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6950
		{
			yyVAL.str = " lines" + yyDollar[2].str
		}
	case 1389:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6956
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1390:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6960
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1391:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6966
		{
			yyVAL.str = " starting by " + encodeSQLString(yyDollar[3].str)
		}
	case 1392:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6970
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1393:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:6975
		{
			yyVAL.str = ""
		}
	case 1394:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6979
		{
			yyVAL.str = " " + yyDollar[1].str + yyDollar[2].str
		}
	case 1395:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:6985
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1396:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:6989
		{
			yyVAL.str = yyDollar[1].str + yyDollar[2].str
		}
	case 1397:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:6995
		{
			yyVAL.str = " terminated by " + encodeSQLString(yyDollar[3].str)
		}
	case 1398:
		yyDollar = yyS[yypt-4 : yypt+1]
//line sql.y:6999
		{
			yyVAL.str = yyDollar[1].str + " enclosed by " + encodeSQLString(yyDollar[4].str)
		}
	case 1399:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7003
		{
			yyVAL.str = " escaped by " + encodeSQLString(yyDollar[3].str)
		}
	case 1400:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7008
		{
			yyVAL.str = ""
		}
	case 1401:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7012
		{
			yyVAL.str = " optionally"
		}
	case 1402:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7025
		{
			yyLOCAL = &Insert{Rows: yyDollar[2].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1403:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7029
		{
			yyLOCAL = &Insert{Rows: yyDollar[1].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1404:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7033
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[5].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1405:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7037
		{
			yyLOCAL = &Insert{Columns: []IdentifierCI{}, Rows: yyDollar[4].valuesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1406:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *Insert
//line sql.y:7041
		{
			yyLOCAL = &Insert{Columns: yyDollar[2].columnsUnion(), Rows: yyDollar[4].selStmtUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1407:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7047
		{
			yyLOCAL = Columns{yyDollar[1].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1408:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL Columns
//line sql.y:7051
		{
			yyLOCAL = Columns{yyDollar[3].identifierCI}
		}
		yyVAL.union = yyLOCAL
	case 1409:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7055
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].identifierCI)
		}
	case 1410:
		yyDollar = yyS[yypt-5 : yypt+1]
//line sql.y:7059
		{
			yySLICE := (*Columns)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[5].identifierCI)
		}
	case 1411:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7064
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1412:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7068
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1413:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Values
//line sql.y:7074
		{
			yyLOCAL = Values{yyDollar[1].valTupleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1414:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7078
		{
			yySLICE := (*Values)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].valTupleUnion())
		}
	case 1415:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7084
		{
			yyLOCAL = yyDollar[1].valTupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7088
		{
			yyLOCAL = ValTuple{}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7094
		{
			yyLOCAL = ValTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL ValTuple
//line sql.y:7098
		{
			yyLOCAL = ValTuple(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7103
		{
			if len(yyDollar[1].valTupleUnion()) == 1 {
				yyLOCAL = yyDollar[1].valTupleUnion()[0]
			} else {
				yyLOCAL = yyDollar[1].valTupleUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL UpdateExprs
//line sql.y:7113
		{
			yyLOCAL = UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7117
		{
			yySLICE := (*UpdateExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].updateExprUnion())
		}
	case 1422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *UpdateExpr
//line sql.y:7123
		{
			yyLOCAL = &UpdateExpr{Name: yyDollar[1].colNameUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL SetExprs
//line sql.y:7129
		{
			yyLOCAL = SetExprs{yyDollar[1].setExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-3 : yypt+1]
//line sql.y:7133
		{
			yySLICE := (*SetExprs)(yyIaddr(yyVAL.union))
			*yySLICE = append(*yySLICE, yyDollar[3].setExprUnion())
		}
	case 1425:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7139
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("on")}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7143
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: NewStrLiteral("off")}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7147
		{
			yyLOCAL = &SetExpr{Var: yyDollar[1].variableUnion(), Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *SetExpr
//line sql.y:7151
		{
			yyLOCAL = &SetExpr{Var: NewSetVariable(string(yyDollar[1].str), SessionScope), Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7157
		{
			yyLOCAL = NewSetVariable(string(yyDollar[1].str), SessionScope)
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7161
		{
			yyLOCAL = yyDollar[1].variableUnion()
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *Variable
//line sql.y:7165
		{
			yyLOCAL = NewSetVariable(string(yyDollar[2].str), yyDollar[1].scopeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
//line sql.y:7172
		{
			yyVAL.str = "charset"
		}
	case 1436:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7182
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].identifierCI.String())
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7186
		{
			yyLOCAL = NewStrLiteral(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Expr
//line sql.y:7190
		{
			yyLOCAL = &Default{}
		}
		yyVAL.union = yyLOCAL
	case 1441:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7199
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1442:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line sql.y:7201
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1443:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7204
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line sql.y:7206
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1445:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line sql.y:7209
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line sql.y:7211
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1447:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7214
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1448:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Ignore
//line sql.y:7216
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1449:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7219
		{
			yyVAL.empty = struct{}{}
		}
	case 1450:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7221
		{
			yyVAL.empty = struct{}{}
		}
	case 1451:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7223
		{
			yyVAL.empty = struct{}{}
		}
	case 1452:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL Statement
//line sql.y:7227
		{
			yyLOCAL = &CallProc{Name: yyDollar[2].tableName, Params: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1453:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7232
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1454:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL Exprs
//line sql.y:7236
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1455:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7241
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1456:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*IndexOption
//line sql.y:7243
		{
			yyLOCAL = []*IndexOption{yyDollar[1].indexOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1457:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *IndexOption
//line sql.y:7247
		{
			yyLOCAL = &IndexOption{Name: string(yyDollar[1].str), String: string(yyDollar[2].identifierCI.String())}
		}
		yyVAL.union = yyLOCAL
	case 1458:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7253
		{
			yyVAL.identifierCI = yyDollar[1].identifierCI
		}
	case 1459:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7257
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1461:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7264
		{
			yyVAL.identifierCI = NewIdentifierCI(string(yyDollar[1].str))
		}
	case 1462:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7270
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1463:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7274
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 1464:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7280
		{
			yyVAL.identifierCS = NewIdentifierCS("")
		}
	case 1465:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7284
		{
			yyVAL.identifierCS = yyDollar[1].identifierCS
		}
	case 1467:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7291
		{
			yyVAL.identifierCS = NewIdentifierCS(string(yyDollar[1].str))
		}
	case 2009:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7859
		{
		}
	case 2010:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7864
		{
		}
	case 2011:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7868
		{
			skipToEnd(yylex)
		}
	case 2012:
		yyDollar = yyS[yypt-0 : yypt+1]
//line sql.y:7873
		{
			skipToEnd(yylex)
		}
	case 2013:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7877
		{
			skipToEnd(yylex)
		}
	case 2014:
		yyDollar = yyS[yypt-1 : yypt+1]
//line sql.y:7881
		{
			skipToEnd(yylex)
		}
	}
	goto yystack /* stack new state and value */
}
